<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux</title>
      <link href="/Linux/index/"/>
      <url>/Linux/index/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Directory </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>JS Events</title>
      <link href="/JavaScript/js_event/"/>
      <url>/JavaScript/js_event/</url>
      
        <content type="html"><![CDATA[<h2 id="事件流"><a href="#事件流" class="headerlink" title="事件流"></a>事件流</h2><p><img src="https://s2.loli.net/2022/06/28/phIXow3jVOKP9cJ.png" alt="picture 1"></p><h3 id="事件捕获"><a href="#事件捕获" class="headerlink" title="事件捕获"></a>事件捕获</h3><p>捕获阶段，事件依次传递的顺序是：window –&gt; document –&gt; html–&gt; body –&gt; 父元素、子元素、目标元素</p><h3 id="事件冒泡"><a href="#事件冒泡" class="headerlink" title="事件冒泡"></a>事件冒泡</h3><p>以下事件不冒泡：blur、focus、load、unload、onmouseenter、onmouseleave，可以通过<code>event.bubbles</code>检查。</p><p>阻止冒泡：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">element.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params">event</span>) &#123;</span><br><span class="line">  <span class="comment">//阻止冒泡</span></span><br><span class="line">  event = event || <span class="variable language_">window</span>.<span class="property">event</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (event &amp;&amp; event.<span class="property">stopPropagation</span>) &#123;</span><br><span class="line">    event.<span class="title function_">stopPropagation</span>();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// &lt; IE10</span></span><br><span class="line">    event.<span class="property">cancelBubble</span> = <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="事件委托"><a href="#事件委托" class="headerlink" title="事件委托"></a>事件委托</h2><p>事件委托，是把一个元素响应事件（click、keydown……）的函数委托到另一个元素，如在父元素的响应函数中处理子元素的事件，事件委托利用了冒泡机制，减少了事件绑定的次数，减少内存消耗，提高性能。</p><p>focus、blur 之类的事件本身没有事件冒泡机制，所以无法委托。</p><p>mousemove、mouseout 这样的事件，虽然有事件冒泡，但是只能不断通过位置去计算定位，对性能消耗高，因此也是不适合于事件委托的。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// https://zhuanlan.zhihu.com/p/26536815</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">eventDelegate</span>(<span class="params">parentSelector, targetSelector, events, foo</span>) &#123;</span><br><span class="line">  <span class="comment">// 触发执行的函数</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">triFunction</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="comment">// 兼容性处理</span></span><br><span class="line">    <span class="keyword">var</span> event = e || <span class="variable language_">window</span>.<span class="property">event</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取到目标阶段指向的元素</span></span><br><span class="line">    <span class="keyword">var</span> target = event.<span class="property">target</span> || event.<span class="property">srcElement</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取到代理事件的函数</span></span><br><span class="line">    <span class="keyword">var</span> currentTarget = event.<span class="property">currentTarget</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 处理 matches 的兼容性</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="title class_">Element</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">matches</span>) &#123;</span><br><span class="line">      <span class="title class_">Element</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">matches</span> =</span><br><span class="line">        <span class="title class_">Element</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">matchesSelector</span> ||</span><br><span class="line">        <span class="title class_">Element</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">mozMatchesSelector</span> ||</span><br><span class="line">        <span class="title class_">Element</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">msMatchesSelector</span> ||</span><br><span class="line">        <span class="title class_">Element</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">oMatchesSelector</span> ||</span><br><span class="line">        <span class="title class_">Element</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">webkitMatchesSelector</span> ||</span><br><span class="line">        <span class="keyword">function</span> (<span class="params">s</span>) &#123;</span><br><span class="line">          <span class="keyword">var</span> matches = (<span class="variable language_">this</span>.<span class="property">document</span> || <span class="variable language_">this</span>.<span class="property">ownerDocument</span>).<span class="title function_">querySelectorAll</span>(</span><br><span class="line">              s</span><br><span class="line">            ),</span><br><span class="line">            i = matches.<span class="property">length</span>;</span><br><span class="line">          <span class="keyword">while</span> (--i &gt;= <span class="number">0</span> &amp;&amp; matches.<span class="title function_">item</span>(i) !== <span class="variable language_">this</span>) &#123;&#125;</span><br><span class="line">          <span class="keyword">return</span> i &gt; -<span class="number">1</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 遍历外层并且匹配</span></span><br><span class="line">    <span class="keyword">while</span> (target !== currentTarget) &#123;</span><br><span class="line">      <span class="comment">// 判断是否匹配到我们所需要的元素上</span></span><br><span class="line">      <span class="keyword">if</span> (target.<span class="title function_">matches</span>(targetSelector)) &#123;</span><br><span class="line">        <span class="keyword">var</span> sTarget = target;</span><br><span class="line">        <span class="comment">// 执行绑定的函数，注意 this</span></span><br><span class="line">        foo.<span class="title function_">call</span>(sTarget, <span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">slice</span>.<span class="title function_">call</span>(<span class="variable language_">arguments</span>));</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      target = target.<span class="property">parentNode</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 如果有多个事件的话需要全部一一绑定事件</span></span><br><span class="line">  events.<span class="title function_">split</span>(<span class="string">&quot;.&quot;</span>).<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">evt</span>) &#123;</span><br><span class="line">    <span class="comment">// 多个父层元素的话也需要一一绑定</span></span><br><span class="line">    <span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">slice</span></span><br><span class="line">      .<span class="title function_">call</span>(<span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(parentSelector))</span><br><span class="line">      .<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">$p</span>) &#123;</span><br><span class="line">        $p.<span class="title function_">addEventListener</span>(evt, triFunction);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">eventDelegate</span>(<span class="string">&quot;#list&quot;</span>, <span class="string">&quot;li&quot;</span>, <span class="string">&quot;click&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="DOM2-的写法：addEventListener"><a href="#DOM2-的写法：addEventListener" class="headerlink" title="DOM2 的写法：addEventListener"></a>DOM2 的写法：addEventListener</h2><p><code>addEventListener(type, listener, ?option)</code></p><ul><li>参数 3：true 表示捕获阶段触发，false 表示冒泡阶段触发（默认）。如果不写，则默认为 false。</li><li>可以绑定多个响应函数，执行顺序是：事件被触发时，响应函数会按照函数的绑定顺序执行。</li><li><code>addEventListener()</code>中的 <code>this</code>，是绑定事件的对象</li></ul>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS 设计模式</title>
      <link href="/JavaScript/js_design_patterns/"/>
      <url>/JavaScript/js_design_patterns/</url>
      
        <content type="html"><![CDATA[<h2 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h2><blockquote><p><a href="https://mitianyi.gitbook.io/frontend-interview-guide/javascript-basics/scope-and-closure">前端面试指南：作用域和闭包</a></p></blockquote><p>单例模式避免了重复实例化带来的内存开销。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 单例模式</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Singleton</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">data</span> = <span class="string">&quot;singleton&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Singleton</span>.<span class="property">getInstance</span> = (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> instance;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (instance) &#123;</span><br><span class="line">      <span class="keyword">return</span> instance;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      instance = <span class="keyword">new</span> <span class="title class_">Singleton</span>();</span><br><span class="line">      <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> sa = <span class="title class_">Singleton</span>.<span class="title function_">getInstance</span>();</span><br><span class="line"><span class="keyword">var</span> sb = <span class="title class_">Singleton</span>.<span class="title function_">getInstance</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sa === sb); <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sa.<span class="property">data</span>); <span class="comment">// &#x27;singleton&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol><li><a href="https://www.patterns.dev/posts/classic-design-patterns/">Learning JavaScript Design Patterns</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS 面向对象编程</title>
      <link href="/JavaScript/js_oop/"/>
      <url>/JavaScript/js_oop/</url>
      
        <content type="html"><![CDATA[<h2 id="对象创建"><a href="#对象创建" class="headerlink" title="对象创建"></a>对象创建</h2><ol><li><p><code>&#123;&#125;</code>对象字面量</p></li><li><p>工厂模式</p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 使用工厂方法创建对象</span></span><br><span class="line"><span class="comment"> *  通过该方法可以大批量的创建对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createPerson</span>(<span class="params">name, age, gender</span>) &#123;</span><br><span class="line">  <span class="comment">//创建一个新的对象</span></span><br><span class="line">  <span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line">  <span class="comment">//向对象中添加属性</span></span><br><span class="line">  obj.<span class="property">name</span> = name;</span><br><span class="line">  obj.<span class="property">age</span> = age;</span><br><span class="line">  obj.<span class="property">gender</span> = gender;</span><br><span class="line">  obj.<span class="property">sayName</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">//将新的对象返回</span></span><br><span class="line">  <span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj2 = <span class="title function_">createPerson</span>(<span class="string">&quot;猪八戒&quot;</span>, <span class="number">28</span>, <span class="string">&quot;男&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> obj3 = <span class="title function_">createPerson</span>(<span class="string">&quot;白骨精&quot;</span>, <span class="number">16</span>, <span class="string">&quot;女&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> obj4 = <span class="title function_">createPerson</span>(<span class="string">&quot;蜘蛛精&quot;</span>, <span class="number">18</span>, <span class="string">&quot;女&quot;</span>);</span><br></pre></td></tr></table></figure><ol start="3"><li>构造函数<ul><li>构造函数需要使用 <code>new</code> 关键字来调用才有意义</li><li>以构造函数的形式调用时，<code>this</code> 指向新创建的实例对象</li><li>静态成员是构造函数的属性和方法，通过构造函数访问：<code>Person.prototype</code></li><li>实例成员是实例化对象的属性和方法，通过实例化对象访问</li></ul></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个构造函数，专门用来创建Person对象</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">name, age, gender</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">gender</span> = gender;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">sayName</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> per = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;孙悟空&quot;</span>, <span class="number">18</span>, <span class="string">&quot;男&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> per2 = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;玉兔精&quot;</span>, <span class="number">16</span>, <span class="string">&quot;女&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> per3 = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;奔波霸&quot;</span>, <span class="number">38</span>, <span class="string">&quot;男&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个构造函数，专门用来创建 Dog 对象</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Dog</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> dog = <span class="keyword">new</span> <span class="title class_">Dog</span>();</span><br></pre></td></tr></table></figure><h2 id="浅拷贝、深拷贝"><a href="#浅拷贝、深拷贝" class="headerlink" title="浅拷贝、深拷贝"></a>浅拷贝、深拷贝</h2><ol><li>浅拷贝的推荐实现：<code>Object.assign</code></li></ol><h2 id="原型和原型链"><a href="#原型和原型链" class="headerlink" title="原型和原型链"></a>原型和原型链</h2><p><img src="https://qinu.poryoung.cn/img/202206221756324.png" alt="原型和原型链"></p><ol><li><code>__proto__</code> 是非标准属性，建议使用 ES6 新增的 <code>Reflect.getPrototypeOf</code> 和 <code>Object.setPrototypeOf</code></li><li><code>Function.__proto__</code>等于<code>Function.prototype</code></li></ol><h3 id="处理原型链污染"><a href="#处理原型链污染" class="headerlink" title="处理原型链污染"></a>处理原型链污染</h3><ol><li>检测<code>constructor</code>、<code>__proto__</code>这些敏感键值</li><li>使用<code>Object.create(null)</code>创建原型为<code>null</code>的对象，保证对原型的修改无效</li><li>使用<code>Object.freeze()</code>冻结对象</li><li><input disabled="" type="checkbox"> 建立 JSON schema ，在解析用户输入内容时，通过 JSON schema 过滤敏感键名</li><li>规避不安全的递归性合并</li></ol><h3 id="原型链继承"><a href="#原型链继承" class="headerlink" title="原型链继承"></a>原型链继承</h3><p>原型链继承-&gt;组合继承-&gt;寄生组合继承。</p><h4 id="原型链继承-1"><a href="#原型链继承-1" class="headerlink" title="原型链继承"></a>原型链继承</h4><p>通过修改子类构造函数原型为父类构造函数实例实现。</p><p>存在的问题：</p><ol><li>在创建子类实例的时候，不能向超类型的构造函数中传递参数</li><li>这样创建的子类原型会包含父类的实例属性，造成引用类型属性同步修改的问题</li></ol><h4 id="组合继承"><a href="#组合继承" class="headerlink" title="组合继承"></a>组合继承</h4><p>使用<code>call</code>在子类构造函数中调用父类构造函数解决原型链继承的问题。</p><p>存在的问题：</p><ol><li>父类的构造函数被调用了两次（创建子类原型时调用了一次，创建子类实例时又调用了一次），导致子类原型上会存在父类实例属性，浪费内存</li></ol><h4 id="寄生组合继承"><a href="#寄生组合继承" class="headerlink" title="寄生组合继承"></a>寄生组合继承</h4><p>使用 <code>Object.create(Parent.prototype)</code> 创建一个新的原型对象赋予子类从而解决组合继承的缺陷。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 寄生组合继承实现</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Parent</span>(<span class="params">value</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">value</span> = value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Parent</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">getValue</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">value</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Child</span>(<span class="params">value</span>) &#123;</span><br><span class="line">  <span class="title class_">Parent</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>, value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Child</span>.<span class="property"><span class="keyword">prototype</span></span> = <span class="title class_">Object</span>.<span class="title function_">create</span>(<span class="title class_">Parent</span>.<span class="property"><span class="keyword">prototype</span></span>, &#123;</span><br><span class="line">  <span class="attr">constructor</span>: &#123;</span><br><span class="line">    <span class="attr">value</span>: <span class="title class_">Child</span>,</span><br><span class="line">    <span class="attr">enumerable</span>: <span class="literal">false</span>, <span class="comment">// 不可枚举该属性</span></span><br><span class="line">    <span class="attr">writable</span>: <span class="literal">true</span>, <span class="comment">// 可改写该属性</span></span><br><span class="line">    <span class="attr">configurable</span>: <span class="literal">true</span>, <span class="comment">// 可用 delete 删除该属性</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> child = <span class="keyword">new</span> <span class="title class_">Child</span>(<span class="number">1</span>);</span><br><span class="line">child.<span class="title function_">getValue</span>();</span><br><span class="line">child <span class="keyword">instanceof</span> <span class="title class_">Parent</span>;</span><br></pre></td></tr></table></figure><h3 id="继承关系判断"><a href="#继承关系判断" class="headerlink" title="继承关系判断"></a>继承关系判断</h3><ol><li><code>instanceof</code></li></ol><p><code>instanceof</code> 本质上是通过原型链查找来判断继承关系的，因此只能用来判断引用类型，对基本类型无效。</p><ol start="2"><li><code>Object.prototype.isPrototypeOf</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
            <tag> JavaScript </tag>
            
            <tag> OOP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS 模块化</title>
      <link href="/JavaScript/js_module/"/>
      <url>/JavaScript/js_module/</url>
      
        <content type="html"><![CDATA[<h2 id="Closure"><a href="#Closure" class="headerlink" title="Closure"></a>Closure</h2><p>闭包：有权访问另一个函数作用域中变量的函数。</p><p>一个作用域可以访问另外一个函数内部的局部变量，就产生闭包，局部变量在函数执行完后不会被立即销毁，而是等所有函数调用完该变量后再销毁。</p><p>闭包的主要作用：延伸变量的作用范围。</p><p><strong>过度使用闭包会造成内存泄漏。</strong></p><h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><h4 id="模拟类私有属性"><a href="#模拟类私有属性" class="headerlink" title="模拟类私有属性"></a>模拟类私有属性</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 模拟私有属性</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getGeneratorFunc</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> _name = <span class="string">&quot;John&quot;</span>;</span><br><span class="line">  <span class="keyword">var</span> _age = <span class="number">22</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">getName</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> _name;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">getAge</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> _age;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = <span class="title function_">getGeneratorFunc</span>()();</span><br><span class="line">obj.<span class="title function_">getName</span>(); <span class="comment">// John</span></span><br><span class="line">obj.<span class="title function_">getAge</span>(); <span class="comment">// 22</span></span><br><span class="line">obj.<span class="property">_age</span>; <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure><h4 id="柯里化（currying）"><a href="#柯里化（currying）" class="headerlink" title="柯里化（currying）"></a>柯里化（currying）</h4><p>柯里化（currying），是把接受多个参数的函数变换成接受一个单一参数（最初函数的第一个参数）的函数，并且返回接受余下的参数而且返回结果的新函数的技术。</p><p>柯里化的优势之一就是<strong>参数的复用</strong>，它可以在传入参数的基础上生成另一个全新的函数，如函数<code>bind</code>方法的实现。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// bind</span></span><br><span class="line"><span class="title class_">Function</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">myBind</span> = <span class="keyword">function</span> (<span class="params">context = <span class="variable language_">window</span></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="variable language_">this</span> !== <span class="string">&quot;function&quot;</span>) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;Error&quot;</span>);</span><br><span class="line">  <span class="keyword">let</span> selfFunc = <span class="variable language_">this</span>;</span><br><span class="line">  <span class="keyword">let</span> args = [...<span class="variable language_">arguments</span>].<span class="title function_">slice</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> <span class="title function_">F</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 因为返回了一个函数，可以 new F()，所以需要判断</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span> <span class="keyword">instanceof</span> F) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_">selfFunc</span>(...args, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// bind 可以实现类似这样的代码 f.bind(obj, 1)(2)，所以需要将两边的参数拼接起来</span></span><br><span class="line">      <span class="keyword">return</span> selfFunc.<span class="title function_">apply</span>(context, args.<span class="title function_">concat</span>(<span class="variable language_">arguments</span>));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Example</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">typeOf</span>(<span class="params">value</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">obj</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> toString = <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>;</span><br><span class="line">    <span class="keyword">const</span> map = &#123;</span><br><span class="line">      <span class="string">&quot;[object Boolean]&quot;</span>: <span class="string">&quot;boolean&quot;</span>,</span><br><span class="line">      <span class="string">&quot;[object Number]&quot;</span>: <span class="string">&quot;number&quot;</span>,</span><br><span class="line">      <span class="string">&quot;[object String]&quot;</span>: <span class="string">&quot;string&quot;</span>,</span><br><span class="line">      <span class="string">&quot;[object Function]&quot;</span>: <span class="string">&quot;function&quot;</span>,</span><br><span class="line">      <span class="string">&quot;[object Array]&quot;</span>: <span class="string">&quot;array&quot;</span>,</span><br><span class="line">      <span class="string">&quot;[object Date]&quot;</span>: <span class="string">&quot;date&quot;</span>,</span><br><span class="line">      <span class="string">&quot;[object RegExp]&quot;</span>: <span class="string">&quot;regExp&quot;</span>,</span><br><span class="line">      <span class="string">&quot;[object Undefined]&quot;</span>: <span class="string">&quot;undefined&quot;</span>,</span><br><span class="line">      <span class="string">&quot;[object Null]&quot;</span>: <span class="string">&quot;null&quot;</span>,</span><br><span class="line">      <span class="string">&quot;[object Object]&quot;</span>: <span class="string">&quot;object&quot;</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> map[toString.<span class="title function_">call</span>(obj)] === value;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> isNumber = <span class="title function_">typeOf</span>(<span class="string">&quot;number&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> isFunction = <span class="title function_">typeOf</span>(<span class="string">&quot;function&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> isRegExp = <span class="title function_">typeOf</span>(<span class="string">&quot;regExp&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_">isNumber</span>(<span class="number">0</span>); <span class="comment">// =&gt; true</span></span><br><span class="line"><span class="title function_">isFunction</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;&#125;); <span class="comment">// true</span></span><br><span class="line"><span class="title function_">isRegExp</span>(&#123;&#125;); <span class="comment">// =&gt; false</span></span><br></pre></td></tr></table></figure><h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><p>JS 中使用的是词法作用域（lexical scopes），也即静态作用域，函数的作用域在定义的时候已经确认，和执行的位置无关。动态作用域的语言如<code>bash</code>，在下例中会输出 2。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> value = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(value); <span class="comment">// 1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">bar</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> value = <span class="number">2</span>;</span><br><span class="line">  <span class="title function_">foo</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">bar</span>();</span><br></pre></td></tr></table></figure><p>JS 中创建作用域：</p><ol><li>创建函数作用域</li><li><code>let</code>、<code>const</code>创建块级作用域</li><li><code>try...catch</code>中，<code>err</code>仅存在于<code>catch</code>子句中</li><li><code>eval(&quot;var b = 3&quot;)</code>欺骗语法作用域</li><li><code>with(obj)</code>临时扩展作用域</li></ol><blockquote><p><a href="https://mitianyi.gitbook.io/frontend-interview-guide/javascript-basics/scope-and-closure">作用域和闭包</a></p></blockquote><h2 id="模块化"><a href="#模块化" class="headerlink" title="模块化"></a>模块化</h2><blockquote><p><a href="https://mitianyi.gitbook.io/frontend-interview-guide/javascript-basics/modularization">模块化</a></p></blockquote><ul><li>解决变量间相互污染的问题，以及变量命名冲突的问题</li><li>提高代码的可维护性、可拓展性和复用性</li></ul><h3 id="自执行函数实现模块化"><a href="#自执行函数实现模块化" class="headerlink" title="自执行函数实现模块化"></a>自执行函数实现模块化</h3><blockquote><p>自执行函数本质上是通过函数作用域解决了命名冲突、污染全局作用域的问题。</p></blockquote><h3 id="AMD、CMD、UMD"><a href="#AMD、CMD、UMD" class="headerlink" title="AMD、CMD、UMD"></a>AMD、CMD、UMD</h3><h4 id="AMD-Asynchronous-Module-Definition"><a href="#AMD-Asynchronous-Module-Definition" class="headerlink" title="AMD (Asynchronous Module Definition)"></a>AMD (Asynchronous Module Definition)</h4><p><code>RequireJS</code></p><p>AMD 采用异步方式加载模块，模块的加载不影响它后面语句的运行。所有依赖这个模块的语句，都定义在一个回调函数中，等到所有依赖项都加载完成之后，这个回调函数才会运行。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// AMD</span></span><br><span class="line"><span class="title function_">define</span>([<span class="string">&quot;./a&quot;</span>, <span class="string">&quot;./b&quot;</span>], <span class="keyword">function</span> (<span class="params">a, b</span>) &#123;</span><br><span class="line">  <span class="comment">// 加载模块完毕可以使用</span></span><br><span class="line">  a.<span class="title function_">do</span>();</span><br><span class="line">  b.<span class="title function_">do</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="CMD-Common-Module-Definition"><a href="#CMD-Common-Module-Definition" class="headerlink" title="CMD (Common Module Definition)"></a>CMD (Common Module Definition)</h4><p><code>SeaJS</code></p><p>CMD 可以使用 <code>require</code> 同步加载依赖，也可以使用 <code>require.async</code> 来异步加载依赖。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CMD</span></span><br><span class="line"><span class="title function_">define</span>(<span class="keyword">function</span> (<span class="params"><span class="built_in">require</span>, <span class="built_in">exports</span>, <span class="variable language_">module</span></span>) &#123;</span><br><span class="line">  <span class="comment">// 加载模块</span></span><br><span class="line">  <span class="comment">// 可以把 require 写在函数体的任意地方实现延迟加载</span></span><br><span class="line">  <span class="keyword">var</span> a = <span class="built_in">require</span>(<span class="string">&quot;./a&quot;</span>);</span><br><span class="line">  a.<span class="title function_">doSomething</span>();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 也可以使用 require.async 来延迟加载</span></span><br><span class="line">  <span class="built_in">require</span>.<span class="title function_">async</span>(<span class="string">&quot;./b&quot;</span>, <span class="keyword">function</span> (<span class="params">b</span>) &#123;</span><br><span class="line">    b.<span class="title function_">doSomething</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>AMD 和 CMD 相比，很大的一个区别就是引入模块的时机，AMD 是前置依赖，也就是说，目标模块代码执行前，必须保证所有的依赖都被引入并且执行。CMD 是后置依赖，也就是说，只有在目标代码中手动执行 <code>require(..)</code> 的时候，相关依赖才会被加载并执行。<br>还有一个区别就是引入模块的方式，AMD 的定位是浏览器环境，所以是异步引入；而 CMD 的定位是浏览器环境和 <code>Node</code> 环境，它可以使用 <code>require</code> 进行同步引入，也可以使用 <code>require.async</code> 的方式进行异步引入。</p></blockquote><h4 id="UMD"><a href="#UMD" class="headerlink" title="UMD"></a>UMD</h4><p><code>jquery</code></p><p>对 AMD 和 CMD 以及全局注册的方式做了整合。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// UMD</span></span><br><span class="line">(<span class="keyword">function</span> (<span class="params">root, factory</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> define === <span class="string">&quot;function&quot;</span> &amp;&amp; define.<span class="property">amd</span>) &#123;</span><br><span class="line">    <span class="comment">// AMD</span></span><br><span class="line">    <span class="title function_">define</span>([<span class="string">&quot;jquery&quot;</span>], factory);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">exports</span> === <span class="string">&quot;object&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">// Node, CommonJS-like</span></span><br><span class="line">    <span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title function_">factory</span>(<span class="built_in">require</span>(<span class="string">&quot;jquery&quot;</span>));</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// Browser globals (root is window)</span></span><br><span class="line">    root.<span class="property">returnExports</span> = <span class="title function_">factory</span>(root.<span class="property">jQuery</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)(<span class="variable language_">this</span>, <span class="keyword">function</span> (<span class="params">$</span>) &#123;</span><br><span class="line">  <span class="comment">//    methods</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">myFunc</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//    exposed public method</span></span><br><span class="line">  <span class="keyword">return</span> myFunc;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="CommonJS"><a href="#CommonJS" class="headerlink" title="CommonJS"></a>CommonJS</h4><p>CommonJS 是的 NodeJS 所使用的一种服务端的模块化规范，它将每一个文件定义为一个 module ，模块必须通过 module.exports 导出对外的变量或接口，通过 require() 来导入其他模块的输出到当前模块作用域中。</p><p>如果<code>require</code>的路径不以<code>/</code>或<code>./</code>开头，会依次搜索<code>Node</code>的核心模块，各级目录下的<code>node_modules</code>目录，若未找到，则会自动添加文件后缀<code>.js</code>、<code>.json</code>、<code>.node</code>，再次寻找。</p><h4 id="ES6-ESModule"><a href="#ES6-ESModule" class="headerlink" title="ES6 ESModule"></a>ES6 ESModule</h4><ol><li>export 导出的必须是接口，<code>export default</code>例外</li><li>模块继承：<code>export &#123; vueComponent as newVueComponent &#125; from &#39;./app.vue&#39;;</code>，或<code>default</code>版本，<code>export &#123; default &#125; from &#39;./app.vue&#39;;</code></li></ol><h4 id="CommonJs-vs-ESModule"><a href="#CommonJs-vs-ESModule" class="headerlink" title="CommonJs vs. ESModule"></a>CommonJs vs. ESModule</h4><blockquote><p><a href="http://nodejs.cn/api/packages.html#determining-module-system">Node.js module system</a></p></blockquote><ol><li>CommonJS 模块输出的是一个值的拷贝，ESModule 输出的是值的引用。CommonJS 输出的是值的拷贝，也就是说一旦输出，模块内部的变化就影响不到这个值。</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * CommonJS</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// mod.js</span></span><br><span class="line"><span class="keyword">let</span> counter = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">incCounter</span>(<span class="params"></span>) &#123;</span><br><span class="line">  counter++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">getCounter</span>: <span class="function">() =&gt;</span> counter,</span><br><span class="line">  counter,</span><br><span class="line">  incCounter,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// main.js</span></span><br><span class="line"><span class="keyword">let</span> mod = <span class="built_in">require</span>(<span class="string">&quot;./mod&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(mod.<span class="property">counter</span>); <span class="comment">// 3</span></span><br><span class="line">mod.<span class="title function_">incCounter</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(mod.<span class="property">counter</span>); <span class="comment">// 3</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(mod.<span class="title function_">getCounter</span>()); <span class="comment">// 4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * ESModule</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// mod.js</span></span><br><span class="line"><span class="keyword">let</span> counter = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">incCounter</span>(<span class="params"></span>) &#123;</span><br><span class="line">  counter++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getCounter</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> counter;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> &#123; counter, incCounter, getCounter &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// main.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; counter, getCounter, incCounter &#125; <span class="keyword">from</span> <span class="string">&quot;./mod.js&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(counter); <span class="comment">// 3</span></span><br><span class="line"><span class="title function_">incCounter</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(counter); <span class="comment">// 4</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getCounter</span>()); <span class="comment">// 4</span></span><br></pre></td></tr></table></figure><blockquote><p>ESModule 的模块化是静态的，和 CommonJS 不同，ESModule 模块不是对象，而是通过 export 命令显示输出的指定代码的片段，再通过 import 命令将代码命令输入。也就是说在编译阶段就需要确定模块之间的依赖关系，这一点不同于 AMD &#x2F; CMD &#x2F; CommonJS ，这三者都是在运行时确定模块间的依赖关系的。</p></blockquote><ol start="2"><li>ES6 的模块自动采用严格模式</li><li>ESModule 导出的模块是只读的，不能变更，否则报错，如修改<code>counter</code>，会报：<code>Uncaught TypeError: Assignment to constant variable. at main.js</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>_posts</title>
      <link href="/index/"/>
      <url>/index/</url>
      
        <content type="html"><![CDATA[<p>This directory is in the <a href="https://github.com/PorYoung/PorYoung.github.io">github repository</a>. All new posts will be fetched from the dir.</p>]]></content>
      
      
      <categories>
          
          <category> Directory </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>JS Engine</title>
      <link href="/JavaScript/js_engine/"/>
      <url>/JavaScript/js_engine/</url>
      
        <content type="html"><![CDATA[<p>JS 引擎加载脚本文件后：语法分析、预编译、解释执行。</p><p>匿名函数不参与预编译，只有在解释执行阶段才会进行变量初始化。</p><p><img src="https://qinu.poryoung.cn/img/202206191534572.png" alt="JS Engine"></p><h2 id="JS-执行线程"><a href="#JS-执行线程" class="headerlink" title="JS 执行线程"></a>JS 执行线程</h2><blockquote><p><a href="https://segmentfault.com/a/1190000018134157">javascript 引擎执行的过程的理解–执行阶段</a></p></blockquote><p>JS 是单线程的是指永远只有 JS 引擎线程在执行 JS 脚本程序，其他的三个线程只协助，不参与代码解析与执行。</p><ol><li>JS 引擎线程：也称为 JS 内核，负责解析执行 Javascript 脚本程序的主线程（例如 V8 引擎）。</li><li>事件触发线程：归属于浏览器内核进程，不受 JS 引擎线程控制。主要用于控制事件（例如鼠标，键盘等事件），当该事件被触发时候，事件触发线程就会把该事件的处理函数推进事件队列，等待 JS 引擎线程执行。</li><li>定时器触发线程：主要控制计时器 setInterval 和延时器 setTimeout，用于定时器的计时，计时完毕，满足定时器的触发条件，则将定时器的处理函数推进事件队列中，等待 JS 引擎线程执行。（注：W3C 在 HTML 标准中规定 setTimeout <strong>低于 4ms 的时间间隔算为 4ms</strong>。）</li><li>HTTP 异步请求线程：通过 XMLHttpRequest 连接后，通过浏览器新开的一个线程，监控 readyState 状态变更时，如果设置了该状态的回调函数，则将该状态的处理函数推进事件队列中，等待 JS 引擎线程执行。</li></ol><blockquote><p>注：浏览器对同一域名请求的并发连接数是有限制的，Chrome 和 Firefox 限制数为 6 个，ie8 则为 10 个</p></blockquote><h2 id="JS-异步执行机制——Even-Loop"><a href="#JS-异步执行机制——Even-Loop" class="headerlink" title="JS 异步执行机制——Even Loop"></a>JS 异步执行机制——Even Loop</h2><h2 id="JS-宏任务、微内核"><a href="#JS-宏任务、微内核" class="headerlink" title="JS 宏任务、微内核"></a>JS 宏任务、微内核</h2><blockquote><p><a href="https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/">Tasks, microtasks, queues and schedules</a></p></blockquote><h2 id="内存管理"><a href="#内存管理" class="headerlink" title="内存管理"></a>内存管理</h2><h3 id="内存泄漏"><a href="#内存泄漏" class="headerlink" title="内存泄漏"></a>内存泄漏</h3><h4 id="可能造成内存泄漏的原因"><a href="#可能造成内存泄漏的原因" class="headerlink" title="可能造成内存泄漏的原因"></a>可能造成内存泄漏的原因</h4><p><img src="https://qinu.poryoung.cn/img/202206202220645.png"></p><ol><li>闭包的使用</li><li>全局变量的无意创建</li><li>DOM 元素绑定事件未随 DOM 元素的移除而注销</li></ol><h4 id="内存泄漏排查"><a href="#内存泄漏排查" class="headerlink" title="内存泄漏排查"></a>内存泄漏排查</h4><blockquote><p><a href="https://mitianyi.gitbook.io/frontend-interview-guide/javascript-basics/scope-and-closure#nei-cun-xie-lu-de-pai-cha-shou-duan">内存泄露的排查手段</a></p></blockquote><h4 id="内存泄漏的解决方案"><a href="#内存泄漏的解决方案" class="headerlink" title="内存泄漏的解决方案"></a>内存泄漏的解决方案</h4><ol><li>使用严格模式，避免不经意间的全局变量泄露</li><li>关注 DOM 生命周期，在销毁阶段记得解绑相关事件，或者可以使用事件委托的手段统一处理事件，减少由于事件绑定带来的额外内存开销</li><li>避免过度使用闭包</li></ol><h3 id="引申"><a href="#引申" class="headerlink" title="引申"></a>引申</h3><h4 id="setTimeout-与-setInterval-区别"><a href="#setTimeout-与-setInterval-区别" class="headerlink" title="setTimeout 与 setInterval 区别"></a>setTimeout 与 setInterval 区别</h4><h4 id="防抖和节流"><a href="#防抖和节流" class="headerlink" title="防抖和节流"></a>防抖和节流</h4>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用cgroup进行系统资源使用限制</title>
      <link href="/Linux/cgroup/"/>
      <url>/Linux/cgroup/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="http://wjhsh.net/yooma-p-8513313.html">使用 cgroup 进行系统资源使用限制</a></p><p><a href="https://www.cnblogs.com/llwxhn/p/12558577.html">cgroup 简单使用</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS Tips</title>
      <link href="/JavaScript/js_tips/"/>
      <url>/JavaScript/js_tips/</url>
      
        <content type="html"><![CDATA[<h2 id="未声明赋值变量"><a href="#未声明赋值变量" class="headerlink" title="未声明赋值变量"></a>未声明赋值变量</h2><p>任何变量，如果未经声明就赋值，此变量是属于 window 的属性，而且不会做变量提升。（注意，无论在哪个作用域内赋值）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> a = (b = <span class="number">100</span>); <span class="comment">// a和b的区别</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="defer-and-async"><a href="#defer-and-async" class="headerlink" title="defer and async"></a><code>defer</code> and <code>async</code></h2><p>The best thing to do to speed up your page loading when using scripts is to put them in the head, and add a defer attribute to your script tag.</p><blockquote><p><a href="https://flaviocopes.com/javascript-async-defer/">Efficiently load JavaScript with defer and async</a></p></blockquote><h2 id="防抖和节流"><a href="#防抖和节流" class="headerlink" title="防抖和节流"></a>防抖和节流</h2><ol><li><p>防抖（deounce）:</p><ul><li>可用于 input.change 实时输入校验，比如输入实时查询，你不可能摁一个字就去后端查一次，肯定是输一串，统一去查询一次数据。</li><li>可用于 window.resize 事件，比如窗口缩放完成后，才会重新计算部分 DOM 尺寸</li></ul></li><li><p>节流（throttle），用于监听 mousemove、 鼠标滚动等事件，通常可用于：拖拽动画、下拉加载。</p></li></ol><blockquote><p>节流通常用在比防抖刷新更频繁的场景下，而且大部分是需要涉及动画的操作。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 防抖 */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">fn, delay = <span class="number">200</span></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> timeout;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 重新计时</span></span><br><span class="line">    timeout &amp;&amp; <span class="built_in">clearTimeout</span>(timeout);</span><br><span class="line">    timeout = <span class="built_in">setTimeout</span>(fn.<span class="title function_">bind</span>(<span class="variable language_">this</span>), delay, ...<span class="variable language_">arguments</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> handlerChange = <span class="title function_">debounce</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">alert</span>(<span class="string">&quot;更新触发了&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绑定监听</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;input&quot;</span>).<span class="title function_">addEventListener</span>(<span class="string">&quot;input&quot;</span>, handlerChange);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 立即执行的防抖函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">fn, delay = <span class="number">200</span></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> timeout;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 如果 timeout == null 说明是第一次，直接执行回调，否则重新计时</span></span><br><span class="line">    +timeout == <span class="literal">null</span> ? fn.<span class="title function_">call</span>(<span class="variable language_">this</span>, ...<span class="variable language_">arguments</span>) : <span class="built_in">clearTimeout</span>(timeout);</span><br><span class="line">    timeout = <span class="built_in">setTimeout</span>(fn.<span class="title function_">bind</span>(<span class="variable language_">this</span>), delay, ...<span class="variable language_">arguments</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> handlerChange = <span class="title function_">debounce</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">alert</span>(<span class="string">&quot;更新触发了&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绑定监听</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;input&quot;</span>).<span class="title function_">addEventListener</span>(<span class="string">&quot;input&quot;</span>, handlerChange);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 节流 */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">throttle</span>(<span class="params">fn, threshhold = <span class="number">200</span></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> timeout;</span><br><span class="line">  <span class="comment">// 计算开始时间</span></span><br><span class="line">  <span class="keyword">let</span> start = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 触发时间</span></span><br><span class="line">    <span class="keyword">const</span> current = <span class="keyword">new</span> <span class="title class_">Date</span>() - <span class="number">0</span>;</span><br><span class="line">    timeout &amp;&amp; <span class="built_in">clearTimeout</span>(timeout);</span><br><span class="line">    <span class="comment">// 如果到了时间间隔点，就执行一次回调</span></span><br><span class="line">    <span class="keyword">if</span> (current - start &gt;= threshhold) &#123;</span><br><span class="line">      fn.<span class="title function_">call</span>(<span class="variable language_">this</span>, ...<span class="variable language_">arguments</span>);</span><br><span class="line">      <span class="comment">// 更新开始时间</span></span><br><span class="line">      start = current;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 保证方法在脱离事件以后还会执行一次</span></span><br><span class="line">      timeout = <span class="built_in">setTimeout</span>(fn.<span class="title function_">bind</span>(<span class="variable language_">this</span>), threshhold, ...<span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> handleMouseMove = <span class="title function_">throttle</span>(<span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">pageX</span>, e.<span class="property">pageY</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绑定监听</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#panel&quot;</span>).<span class="title function_">addEventListener</span>(<span class="string">&quot;mousemove&quot;</span>, handleMouseMove);</span><br></pre></td></tr></table></figure><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><p><code>new RegExp(&quot;正则表达式&quot;, &quot;匹配模式&quot;)</code>、<code>/正则表达式/匹配模式</code>。</p><p>全局匹配模式 <code>g</code> 一般用于 <code>exec()</code>、<code>match()</code>、<code>replace()</code>等方法。</p><p>全局匹配模式 <code>g</code> 如果用于 <code>test()</code>方法，<code>g</code> 模式会生成一个 <code>lastindex</code> 参数来存储匹配最后一次的位置。</p><ol><li><code>[]</code>：或</li><li><code>[^]</code>：非、除了</li><li><code>^</code>：以…开头，<code>$</code>：以…结尾</li><li>支持正则的 String 方法：<code>split()</code>、<code>search()</code>、<code>match()</code>、<code>replace()</code></li></ol><h2 id="offset、scroll、client区别"><a href="#offset、scroll、client区别" class="headerlink" title="offset、scroll、client区别"></a><code>offset</code>、<code>scroll</code>、<code>client</code>区别</h2><ol><li><p>区别 1：宽高</p><ul><li>offsetWidth &#x3D; width + padding + border</li><li>offsetHeight &#x3D; height + padding + border</li><li>scrollWidth &#x3D; 内容宽度（不包含 border）</li><li>scrollHeight &#x3D; 内容高度（不包含 border）</li><li>clientWidth &#x3D; width + padding</li><li>clientHeight &#x3D; height + padding</li></ul></li><li><p>区别 2：上左</p><ul><li>offsetTop&#x2F;offsetLeft：<br>调用者：任意元素。(盒子为主)<br>作用：距离父系盒子中带有定位的距离。</li><li>scrollTop&#x2F;scrollLeft：<br>调用者：document.body.scrollTop（window 调用）(盒子也可以调用，但必须有滚动条)<br>作用：浏览器无法显示的部分（被卷去的部分）。</li><li>clientY&#x2F;clientX：<br>调用者：event<br>作用：鼠标距离浏览器可视区域的距离（左、上）。</li></ul></li></ol><h2 id="获取滚动位置"><a href="#获取滚动位置" class="headerlink" title="获取滚动位置"></a>获取滚动位置</h2><p>判断是否声明 DTD：<code>document.compatMode === &quot;CSS1Compat&quot; // 已声明</code>、<code>document.compatMode === &quot;BackCompat&quot; // 未声明</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">scroll</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="comment">//此函数的返回值是对象</span></span><br><span class="line">    <span class="attr">top</span>:</span><br><span class="line">      <span class="variable language_">window</span>.<span class="property">pageYOffset</span> ||</span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">scrollTop</span> ||</span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollTop</span>,</span><br><span class="line">    <span class="attr">left</span>:</span><br><span class="line">      <span class="variable language_">window</span>.<span class="property">pageXOffset</span> ||</span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">scrollLeft</span> ||</span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollLeft</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">scroll</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 开始封装自己的scrollTop</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">pageYOffset</span> !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">    <span class="comment">// ie9+ 高版本浏览器</span></span><br><span class="line">    <span class="comment">// 因为 window.pageYOffset 默认的是  0  所以这里需要判断</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">left</span>: <span class="variable language_">window</span>.<span class="property">pageXOffset</span>,</span><br><span class="line">      <span class="attr">top</span>: <span class="variable language_">window</span>.<span class="property">pageYOffset</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">compatMode</span> === <span class="string">&quot;CSS1Compat&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">// 标准浏览器   来判断有没有声明DTD</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">left</span>: <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollLeft</span>,</span><br><span class="line">      <span class="attr">top</span>: <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollTop</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="comment">// 未声明 DTD</span></span><br><span class="line">    <span class="attr">left</span>: <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">scrollLeft</span>,</span><br><span class="line">    <span class="attr">top</span>: <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">scrollTop</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="获取浏览器可视区域宽高"><a href="#获取浏览器可视区域宽高" class="headerlink" title="获取浏览器可视区域宽高"></a>获取浏览器可视区域宽高</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//函数封装：获取屏幕可视区域的宽高</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">client</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">innerHeight</span> !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">    <span class="comment">//ie9及其以上的版本的写法</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">width</span>: <span class="variable language_">window</span>.<span class="property">innerWidth</span>,</span><br><span class="line">      <span class="attr">height</span>: <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">compatMode</span> === <span class="string">&quot;CSS1Compat&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">//标准模式的写法（有DTD时）</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">width</span>: <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientWidth</span>,</span><br><span class="line">      <span class="attr">height</span>: <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientHeight</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//没有DTD时的写法</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">width</span>: <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">clientWidth</span>,</span><br><span class="line">      <span class="attr">height</span>: <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">clientHeight</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
            <tag> JavaScript </tag>
            
            <tag> snippets </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Archived Articles</title>
      <link href="/!archived/index/"/>
      <url>/!archived/index/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Directory </category>
          
      </categories>
      
      
        <tags>
            
            <tag> archived </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端</title>
      <link href="/FrontEnd/index/"/>
      <url>/FrontEnd/index/</url>
      
        <content type="html"><![CDATA[<h2 id="Base"><a href="#Base" class="headerlink" title="Base"></a>Base</h2><ol><li><a href="https://web.qianguyihao.com/">千古前端图文教程</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
          <category> Directory </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SEO</title>
      <link href="/FrontEnd/seo/"/>
      <url>/FrontEnd/seo/</url>
      
        <content type="html"><![CDATA[<h2 id="TODO-Article"><a href="#TODO-Article" class="headerlink" title="TODO: Article"></a>TODO: Article</h2>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript</title>
      <link href="/JavaScript/index/"/>
      <url>/JavaScript/index/</url>
      
        <content type="html"><![CDATA[<h1 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h1><ol><li><input disabled="" type="checkbox"> 理解浏览器工作原理</li><li><input disabled="" type="checkbox"> 防抖和节流</li></ol>]]></content>
      
      
      <categories>
          
          <category> Directory </category>
          
          <category> FrontEnd </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>JS 数组</title>
      <link href="/JavaScript/js_array/"/>
      <url>/JavaScript/js_array/</url>
      
        <content type="html"><![CDATA[<h2 id="Fundamental"><a href="#Fundamental" class="headerlink" title="Fundamental"></a>Fundamental</h2><ul><li><p><code>ECMAScript</code>中<code>new Array(len)</code>的操作</p><ol><li>判断 len 是否为合法数字（小于 <code>2^32 - 1</code> 的正整数），如果不是则抛出错误；</li><li>创建一个 JavaScript Array 实例；</li><li>将这个实例对象的 length 属性设置为入参的值；</li></ol><p>但该数组此时并没有包含任何实际的元素，而且不能理所当然地认为它包含 len 个值为 undefined 的元素</p><blockquote><p>More</p><ul><li><code>empty</code>和<code>undefined</code>的区别</li><li>导致数组的<code>map</code>、<code>some</code>、<code>filter</code>、<code>includes</code>、<code>for in</code>、<code>for of</code>、<code>findIndex</code>、<code>sort</code>等方法的差异</li><li>稀疏数组、密集数组的互相转换</li><li>V8 访问对象有两种模式：字典模式 和 快速模式</li></ul><p><a href="https://juejin.cn/post/6975531514444562462">JavaScript 之稀疏数组与密集数组</a></p><p><a href="https://github.com/JunreyCen/blog/issues/10">稀疏数组与密集数组</a></p></blockquote></li><li><p>伪数组(ArrayLike)</p><ul><li>按索引方式储存数据</li><li><code>length</code>不会动态变化</li><li>伪数组的原型链中没有 Array.prototype，因此不具有<code>push</code>、<code>forEach</code>等方法</li></ul><p>常见的如<code>arguments</code>、DOM children 元素集。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 伪数组转真数组</span></span><br><span class="line"><span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">slice</span>.<span class="title function_">call</span>(<span class="title class_">ArrayLike</span>);</span><br><span class="line"></span><br><span class="line">[].<span class="property">slice</span>.<span class="title function_">call</span>(<span class="title class_">ArrayLike</span>);</span><br><span class="line"></span><br><span class="line"><span class="title class_">Array</span>.<span class="title function_">from</span>(<span class="title class_">ArrayLike</span>);</span><br></pre></td></tr></table></figure></li><li><p><code>sort</code>方法</p><ul><li>默认按 Unicode 编码排序</li><li>自定义排序规则：return 大于 0 的值——元素交换位置，return 小于 0 的值——元素位置不变，return 等于 0 的值——不交换位置</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 冒泡排序</span></span><br><span class="line">arr.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a - b);</span><br></pre></td></tr></table></figure></li><li><p><code>forEach</code>会改变原数组吗，<code>map()</code>会吗 :question:</p></li><li><p><code>arr.reduce(function (previousValue, currentValue, currentIndex, arr) &#123;&#125;, initialValue);</code></p><ul><li>e.g. 统计元素出现的次数、找最大值等</li></ul></li><li><p>清空数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">array.<span class="title function_">splice</span>(<span class="number">0</span>); <span class="comment">//方式1：删除数组中所有项目</span></span><br><span class="line">array.<span class="property">length</span> = <span class="number">0</span>; <span class="comment">//方式2：length属性可以赋值，在其它语言中length是只读</span></span><br><span class="line">array = []; <span class="comment">//方式3：推荐</span></span><br></pre></td></tr></table></figure></li><li><p><code>join</code>的应用</p><ul><li>相比字符串拼接<br>由于字符串的不变性，str 拼接过多的话，性能差，且容易导致内存溢出（很多个 str 都堆放在栈里）</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
            <tag> JavaScript </tag>
            
            <tag> snippets </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS 日期格式化</title>
      <link href="/JavaScript/js_date_fmt/"/>
      <url>/JavaScript/js_date_fmt/</url>
      
        <content type="html"><![CDATA[<h2 id="JS-日期格式化转换方法"><a href="#JS-日期格式化转换方法" class="headerlink" title="JS 日期格式化转换方法"></a>JS 日期格式化转换方法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Date</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">format</span> = <span class="keyword">function</span> (<span class="params">fmt</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> o = &#123;</span><br><span class="line">    <span class="string">&quot;M+&quot;</span>: <span class="variable language_">this</span>.<span class="title function_">getMonth</span>() + <span class="number">1</span>, <span class="comment">//月份</span></span><br><span class="line">    <span class="string">&quot;d+&quot;</span>: <span class="variable language_">this</span>.<span class="title function_">getDate</span>(), <span class="comment">//日</span></span><br><span class="line">    <span class="string">&quot;h+&quot;</span>: <span class="variable language_">this</span>.<span class="title function_">getHours</span>(), <span class="comment">//小时</span></span><br><span class="line">    <span class="string">&quot;m+&quot;</span>: <span class="variable language_">this</span>.<span class="title function_">getMinutes</span>(), <span class="comment">//分</span></span><br><span class="line">    <span class="string">&quot;s+&quot;</span>: <span class="variable language_">this</span>.<span class="title function_">getSeconds</span>(), <span class="comment">//秒</span></span><br><span class="line">    <span class="string">&quot;q+&quot;</span>: <span class="title class_">Math</span>.<span class="title function_">floor</span>((<span class="variable language_">this</span>.<span class="title function_">getMonth</span>() + <span class="number">3</span>) / <span class="number">3</span>), <span class="comment">//季度</span></span><br><span class="line">    <span class="attr">S</span>: <span class="variable language_">this</span>.<span class="title function_">getMilliseconds</span>(), <span class="comment">//毫秒</span></span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">if</span> (<span class="regexp">/(y+)/</span>.<span class="title function_">test</span>(fmt)) &#123;</span><br><span class="line">    fmt = fmt.<span class="title function_">replace</span>(</span><br><span class="line">      <span class="title class_">RegExp</span>.<span class="property">$1</span>,</span><br><span class="line">      (<span class="variable language_">this</span>.<span class="title function_">getFullYear</span>() + <span class="string">&quot;&quot;</span>).<span class="title function_">substr</span>(<span class="number">4</span> - <span class="title class_">RegExp</span>.<span class="property">$1</span>.<span class="property">length</span>)</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> k <span class="keyword">in</span> o) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&quot;(&quot;</span> + k + <span class="string">&quot;)&quot;</span>).<span class="title function_">test</span>(fmt)) &#123;</span><br><span class="line">      fmt = fmt.<span class="title function_">replace</span>(</span><br><span class="line">        <span class="title class_">RegExp</span>.<span class="property">$1</span>,</span><br><span class="line">        <span class="title class_">RegExp</span>.<span class="property">$1</span>.<span class="property">length</span> == <span class="number">1</span> ? o[k] : (<span class="string">&quot;00&quot;</span> + o[k]).<span class="title function_">substr</span>((<span class="string">&quot;&quot;</span> + o[k]).<span class="property">length</span>)</span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> fmt;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://www.cnblogs.com/tugenhua0707/p/3776808.html">龙恩 0707 JS 日期格式化转换方法</a></p></blockquote><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol><li><a href="http://momentjs.cn/"><code>Moment.js</code> 轻量级的 JavaScript 时间库</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
            <tag> JavaScript </tag>
            
            <tag> snippets </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS Function</title>
      <link href="/JavaScript/js_function/"/>
      <url>/JavaScript/js_function/</url>
      
        <content type="html"><![CDATA[<h2 id="函数声明的方式"><a href="#函数声明的方式" class="headerlink" title="函数声明的方式"></a>函数声明的方式</h2><ol><li><code>function</code>关键字</li><li>函数表达式（匿名函数）<code>var 变量名 = function([形参1,形参2...形参N])&#123;&#125;</code></li><li>构造函数<code>var 变量名/函数名 = new Function(&#39;形参1&#39;, &#39;形参2&#39;, &#39;函数体&#39;);</code></li></ol><h2 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h2><ol><li><code>func()</code></li><li><code>func.call()</code></li><li><code>(function()&#123;&#125;)();</code></li><li><code>new func()</code></li><li>事件调用</li><li>定时调用</li></ol><h2 id="函数类数组实参arguments"><a href="#函数类数组实参arguments" class="headerlink" title="函数类数组实参arguments"></a>函数类数组实参<code>arguments</code></h2><ol><li>函数调用隐含传入上下文对象<code>this</code>和封装实参的对象<code>arguments</code></li><li>在递归调用中用<code>arguments.callee</code>代替自身函数名可以接触函数体内代码与函数名的耦合，但会导致函数体内的<code>this</code>对象被更改，同时访问<code>arguments</code>是个很昂贵的操作，因为它是个很大的对象，每次递归调用时都需要重新创建，影响现代浏览器的性能，还会影响闭包。</li></ol><h2 id="函数预编译"><a href="#函数预编译" class="headerlink" title="函数预编译"></a>函数预编译</h2><p>函数预编译，发生在函数执行的前一刻。</p><blockquote><p><a href="https://juejin.cn/post/6844903575571677198">JS 预编译、变量提升</a></p></blockquote><ol><li>创建 Active Object 对象，即执行期上下文。</li><li>寻找函数的形参和变量声明，将变量和形参名作为 AO 对象的属性名，值设定为 undefined.</li><li>将形参和实参相统一，即更改形参后的 undefined 为具体的形参值。</li><li>寻找函数中的函数声明，将函数名作为 AO 属性名，值为函数体。</li></ol><blockquote><p><a href="https://segmentfault.com/a/1190000038344251">JS 函数和变量声明提升</a></p></blockquote><ol><li>函数声明提升优先于变量声明</li><li>函数初始化也会提升</li></ol><figure class="highlight javascript"><figcaption><span>&#123;cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// [Function: a]</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// 1</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">b</span>(<span class="params">a</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// [Function: a]</span></span><br><span class="line">  <span class="keyword">var</span> a = <span class="number">2</span>;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// 2</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// 2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">b</span>(<span class="number">3</span>);</span><br></pre></td></tr></table></figure><h2 id="this-指向"><a href="#this-指向" class="headerlink" title="this 指向"></a><code>this</code> 指向</h2><ol><li><p>以函数的形式（包括普通函数、定时器函数、立即执行函数）调用时，this 的指向永远都是 window。</p></li><li><p>以方法的形式调用时，this 指向调用方法的那个对象</p></li><li><p>以构造函数的形式调用时，this 指向实例对象</p></li><li><p>以事件绑定函数的形式调用时，this 指向绑定事件的对象</p></li><li><p>使用 call 和 apply 调用时，this 指向指定的那个对象</p></li><li><p>箭头函数中 this 的指向会继承外层函数调用的 this 绑定（无论 this 绑定到什么）</p></li></ol><figure class="highlight javascript"><figcaption><span>&#123;cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&quot;window&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;obj&quot;</span>,</span><br><span class="line">  <span class="attr">arrowFunc</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>, <span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">func</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>, <span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">func</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>, <span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Window &quot;window&quot; || Object &quot;obj&quot; || Window &quot;window&quot;</span></span><br><span class="line"><span class="title function_">func</span>() || obj.<span class="title function_">func</span>() || obj.<span class="title function_">arrowFunc</span>();</span><br></pre></td></tr></table></figure><h2 id="call-apply-bind"><a href="#call-apply-bind" class="headerlink" title="call, apply, bind"></a><code>call</code>, <code>apply</code>, <code>bind</code></h2><h3 id="call"><a href="#call" class="headerlink" title="call"></a><code>call</code></h3><p><code>func.call(thisArg, ...argArray);</code></p><ol><li>调用一个函数，同时可以改变这个函数内部的 this 指向</li><li>实现继承</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Father</span>(<span class="params">myName, myAge</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">name</span> = myName;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">age</span> = myAge;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Son</span>(<span class="params">myName, myAge</span>) &#123;</span><br><span class="line">  <span class="title class_">Father</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>, myName, myAge);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="apply"><a href="#apply" class="headerlink" title="apply"></a><code>apply</code></h3><p><code>func.apply(thisArg, ?argArray);</code></p><ol><li>调用一个函数，同时可以改变这个函数内部的 this 指向</li><li>求数组最值：<code>Math.max.apply(Math, array)</code></li></ol><h3 id="bind"><a href="#bind" class="headerlink" title="bind"></a><code>bind</code></h3><p><code>newFunc = func.bind(thisArg, ...argArray);</code></p><p><code>bind</code>不会立即执行函数，而是返回指定 this 和指定实参的原函数拷贝</p>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
            <tag> JavaScript </tag>
            
            <tag> snippets </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Cloud Gateway</title>
      <link href="/Java/SpringCloud/spirng_cloud_gateway/"/>
      <url>/Java/SpringCloud/spirng_cloud_gateway/</url>
      
        <content type="html"><![CDATA[<h2 id="Base"><a href="#Base" class="headerlink" title="Base"></a>Base</h2><ol><li><a href="https://www.macrozheng.com/cloud/gateway.html">Spring Cloud Gateway：新一代 API 网关服务</a></li></ol><h2 id="Filters"><a href="#Filters" class="headerlink" title="Filters"></a>Filters</h2><h3 id="Articles"><a href="#Articles" class="headerlink" title="Articles"></a>Articles</h3><ol><li><a href="https://wankhedeshubham.medium.com/spring-cloud-gateway-modify-response-body-using-global-post-filter-1dbe0a077f8e">Spring Cloud Gateway || Modify Response Body Using Post Global Filter | by Shubham Wankhede | Medium</a></li><li><a href="https://www.javainuse.com/spring/cloud-filter">Spring Cloud Tutorial - Spring Cloud Gateway Filters Example | JavaInUse</a></li><li><a href="https://www.baeldung.com/spring-cloud-custom-gateway-filters">Writing Custom Spring Cloud Gateway Filters | Baeldung</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> BackEnd </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring Cloud </tag>
            
            <tag> Spring Cloud Gateway </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AiiDA及aiida-quantumespresso基本介绍及使用</title>
      <link href="/!archived/aiida%E5%8F%8Aaiida-quantumespresso%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
      <url>/!archived/aiida%E5%8F%8Aaiida-quantumespresso%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D%E5%8F%8A%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p><strong>作者：PorYoung</strong> <strong><a href="https://static.poryoung.cn/aiida/">原始文档：</a><a href="https://static.poryoung.cn/aiida/">https://static.poryoung.cn/aiida/</a></strong> <strong>发布时间：2020年10月</strong></p><h1 id="Basic-Tutorial-and-Simple-Examples-for-Aiida"><a href="#Basic-Tutorial-and-Simple-Examples-for-Aiida" class="headerlink" title="Basic Tutorial and Simple Examples for Aiida"></a>Basic Tutorial and Simple Examples for Aiida</h1><h2 id="Official-Websites"><a href="#Official-Websites" class="headerlink" title="Official Websites"></a>Official Websites</h2><ul><li><a href="http://www.aiida.net/">Aiida</a></li><li><a href="https://docs.conda.io/en/latest/miniconda.html">Miniconda</a></li><li><a href="https://aiida-quantumespresso.readthedocs.io/en/latest/">aiida-quantumespresso docs</a></li></ul><h2 id="Aiida-installation"><a href="#Aiida-installation" class="headerlink" title="Aiida installation"></a>Aiida installation</h2><h3 id="MiniConda-Installation"><a href="#MiniConda-Installation" class="headerlink" title="MiniConda Installation"></a>MiniConda Installation</h3><ol><li><p>Download Miniconda Miniconda installation pakage <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/</a></p></li><li><p>Install conda</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># the `xxx` is version code</span><br><span class="line">bash ./Miniconda-[xxx].sh</span><br></pre></td></tr></table></figure></li><li><p>Reboot shell</p></li></ol><h3 id="Conda-usage"><a href="#Conda-usage" class="headerlink" title="Conda usage"></a>Conda usage</h3><ul><li><p>配置清华（其他）源</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">  conda config --set show_channel_urls yes</span><br></pre></td></tr></table></figure></li><li><p>创建虚拟环境</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n [env_name] python=[python version]</span><br></pre></td></tr></table></figure></li><li><p>激活&#x2F;进入虚拟环境</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate [env_name]</span><br></pre></td></tr></table></figure></li><li><p>退出虚拟环境</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda deactivate</span><br></pre></td></tr></table></figure></li></ul><h3 id="Install-Aiida"><a href="#Install-Aiida" class="headerlink" title="Install Aiida"></a>Install Aiida</h3><ol><li><p>Use conda to install Aiida(<strong>Optional</strong>)（<a href="https://aiida.readthedocs.io/projects/aiida-core/en/latest/intro/installation.html#conda">见aiida文档</a>）</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda create -n aiida -c conda-forge python=3.7 aiida-core aiida-core.services pip</span><br><span class="line">conda activate aiida</span><br><span class="line">conda deactivate</span><br></pre></td></tr></table></figure></li><li><p>Use conda to create Python vitrual env，and use <code>pip</code>to install aiida(<strong>Optional</strong>)</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># for example</span><br><span class="line">conda create -n aiida python=3.8</span><br><span class="line">conda activate aiida</span><br><span class="line">pip install aiida-core</span><br></pre></td></tr></table></figure></li><li><p>Prerequisites Installation</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># you may try `apt update` in advance</span><br><span class="line"># if generate `update error message`, try change a open source mirror</span><br><span class="line">sudo apt-get install postgresql postgresql-server-dev-all postgresql-client</span><br><span class="line">sudo apt-get install rabbitmq-server</span><br><span class="line">sudo rabbitmqctl status</span><br></pre></td></tr></table></figure></li><li><p>Setting up the installation</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># For maximum customizability, one can use verdi setup</span><br><span class="line">verdi quicksetup</span><br></pre></td></tr></table></figure><p> success info like this</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Success: created new profile `a`.</span><br><span class="line">Info: migrating the database.</span><br><span class="line">Operations to perform:</span><br><span class="line">Apply all migrations: auth, contenttypes, db</span><br><span class="line">Running migrations:</span><br><span class="line">Applying contenttypes.0001_initial... OK</span><br><span class="line">Applying contenttypes.0002_remove_content_type_name... OK</span><br><span class="line">...</span><br><span class="line">Applying db.0044_dbgroup_type_string... OK</span><br><span class="line">Success: database migration completed.</span><br></pre></td></tr></table></figure></li></ol><h3 id="Steps-from-Getting-start-page-Start-Computation-Services"><a href="#Steps-from-Getting-start-page-Start-Computation-Services" class="headerlink" title="Steps from Getting start page#Start Computation Services"></a>Steps from Getting start page<code>#Start Computation Services</code></h3><ul><li><p><code>rabbitmq-server -detached</code></p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">DIAGNOSTICS</span><br><span class="line">  ===========</span><br><span class="line"></span><br><span class="line">  nodes in question: [rabbit@ubuntu01]</span><br><span class="line"></span><br><span class="line">  hosts, their running nodes and ports:</span><br><span class="line">  - ubuntu01: [&#123;rabbit,39056&#125;,&#123;rabbitmqprelaunch2034,39422&#125;]</span><br><span class="line"></span><br><span class="line">  current node details:</span><br><span class="line">  - node name: rabbitmqprelaunch2034@ubuntu01</span><br><span class="line">  - home dir: /var/lib/rabbitmq</span><br><span class="line">  - cookie hash: gHkRo5BrsxP/v89EnRf5/w==</span><br></pre></td></tr></table></figure></li><li><p><code>verdi daemon start 2</code></p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Starting the daemon... RUNNING</span><br></pre></td></tr></table></figure></li><li><p><code>verdi check</code></p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">✔ config dir:  /home/majinlong/.aiida</span><br><span class="line">✔ profile:     On profile a</span><br><span class="line">✔ repository:  /home/majinlong/.aiida/repository/a</span><br><span class="line">✔ postgres:    Connected as aiida_qs_majinlong_7b54632a71306c771d8043bd779c519c@localhost:5432</span><br><span class="line">✔ rabbitmq:    Connected to amqp://127.0.0.1?heartbeat=600</span><br><span class="line">✔ daemon:      Daemon is running as PID 2202 since 2020-09-22 11:42:05</span><br></pre></td></tr></table></figure></li><li><p>install graphviz</p><blockquote><p><a href="https://graphviz.org/download/">officical website</a></p></blockquote>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># for ubuntu</span><br><span class="line">sudo apt install graphviz</span><br></pre></td></tr></table></figure></li></ul><h3 id="Have-a-quick-look-at-Basic-Tutorial"><a href="#Have-a-quick-look-at-Basic-Tutorial" class="headerlink" title="Have a quick look at Basic Tutorial"></a>Have a quick look at Basic Tutorial</h3><ol><li><p>setup computer</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">verdi computer setup</span><br><span class="line"># or setup with .yml file</span><br><span class="line">verdi computer setup --config computer.yml</span><br></pre></td></tr></table></figure><p> <code>computer.yml</code>:</p><p> ```yml</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">label: &quot;localhost&quot;</span><br><span class="line">hostname: &quot;localhost&quot;</span><br><span class="line">transport: local</span><br><span class="line">scheduler: &quot;direct&quot;</span><br><span class="line">work_dir: &quot;/home/max/.aiida_run&quot;</span><br><span class="line">mpirun_command: &quot;mpirun -np &#123;tot_num_mpiprocs&#125;&quot;</span><br><span class="line">mpiprocs_per_machine: &quot;2&quot;</span><br><span class="line">prepend_text: |</span><br><span class="line">module load mymodule</span><br><span class="line">export NEWVAR=1</span><br><span class="line">```</span><br></pre></td></tr></table></figure><ol><li><p>setup code</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">verdi code setup</span><br><span class="line"># or setup with .yml file</span><br><span class="line">verdi code setup --config code.yml</span><br></pre></td></tr></table></figure><p> <code>code.yml</code>:</p><p> ```yml</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">label: &quot;qe-6.3-pw&quot;</span><br><span class="line">description: &quot;quantum_espresso v6.3&quot;</span><br><span class="line">input_plugin: &quot;quantumespresso.pw&quot;</span><br><span class="line">on_computer: true</span><br><span class="line">remote_abs_path: &quot;/path/to/code/pw.x&quot;</span><br><span class="line">computer: &quot;localhost&quot;</span><br><span class="line">prepend_text: |</span><br><span class="line">module load module1</span><br><span class="line">module load module2</span><br><span class="line">append_text: &quot; &quot;</span><br><span class="line">```</span><br></pre></td></tr></table></figure><ol><li><p>how to check plugin</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">verdi plugin list</span><br><span class="line">#or</span><br><span class="line">verdi plugin list [spec]</span><br></pre></td></tr></table></figure></li><li><p>how to list process</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">verdi process list -a</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://aiida.readthedocs.io/projects/aiida-core/en/latest/intro/tutorial.html">Aiida Basic Turtorial</a></p></blockquote></li></ol><h2 id="Quantumespresso-Installation"><a href="#Quantumespresso-Installation" class="headerlink" title="Quantumespresso Installation"></a>Quantumespresso Installation</h2><h3 id="Setup-of-Intel-Compiler"><a href="#Setup-of-Intel-Compiler" class="headerlink" title="Setup of Intel Compiler"></a>Setup of Intel Compiler</h3><ol><li><p>Download <code>Intel® Parallel Studio XE</code> and follow the guide to install.</p></li><li><p>set environment variables in <code>~/.bashrc</code> (<em>default path is <code>/opt/intel</code></em>)</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># intel and mkl</span><br><span class="line">source /opt/intel/bin/compilervars.sh intel64</span><br><span class="line">source /opt/intel/mkl/bin/mklvars.sh intel64</span><br><span class="line">export MKL_LIB_PATH=/opt/intel/mkl/lib/intel64</span><br><span class="line">export PATH=/opt/intel/bin:$PATH</span><br><span class="line"># mpi and others</span><br><span class="line">source /opt/intel/impi/2018.4.274/bin64/mpivars.sh intel64</span><br><span class="line">export MPI_HOME=/opt/intel/compilers_and_libraries_2018.5.274/linux/mpi</span><br><span class="line">export PATH=$MPI_HOME/bin:$PATH</span><br><span class="line">export LD_LIBRARY_PATH=$MPI_HOME/lib:$LD_LIBRARY_PATH</span><br></pre></td></tr></table></figure></li><li><p>source or relogin to take effect</p></li></ol><h3 id="Setup-of-QE"><a href="#Setup-of-QE" class="headerlink" title="Setup of QE"></a>Setup of QE</h3><ol><li><p>login <code>root</code> user :question:<em>Other users are sopposed to install qe, but somehow it can not find MKL lib when use <code>sudo ./configure</code></em></p></li><li><p>Download QE release version</p></li><li><p>use <code>./configure</code> to check environment</p></li><li><p>then configure to install</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix= CC=mpiicc CXX=icpc F77=ifort F90=ifort FC=ifort MPIF90=mpiifort</span><br></pre></td></tr></table></figure></li><li><p>if satisfied with your expectaion then <code>make</code> and <code>make install</code>.</p></li></ol><h2 id="aiida-quantumespresso-plugin"><a href="#aiida-quantumespresso-plugin" class="headerlink" title="aiida-quantumespresso plugin"></a>aiida-quantumespresso plugin</h2><h3 id="IMPORTANT"><a href="#IMPORTANT" class="headerlink" title="IMPORTANT"></a><strong>IMPORTANT</strong></h3><p>Please check version of aiida-core is 1.4.0 or higher.</p><p>install aiida-quantumespresso plugin from github</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/aiidateam/aiida-quantumespresso</span><br><span class="line">pip install aiida-quantumespresso</span><br></pre></td></tr></table></figure><h3 id="setup-of-a-computer-and-other-settings"><a href="#setup-of-a-computer-and-other-settings" class="headerlink" title="setup of a computer and other settings"></a>setup of a computer and other settings</h3><ol><li><p>Setup of a computer named <code>TheHive</code> and all the later calculation will implement on it</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># -L [computer name] -w [work directory]</span><br><span class="line">verdi computer setup -L TheHive -H localhost -T local -S direct -w `echo $PWD/work` -n</span><br><span class="line">verdi computer configure local TheHive --safe-interval 5 -n</span><br></pre></td></tr></table></figure></li><li><p>How to check codes,computers and plugins in aiida</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># check aiida plugin/computer/code list</span><br><span class="line"># such as `verdi plugin list aiida.calculation`</span><br><span class="line">verdi code list</span><br><span class="line">verdi computer list</span><br><span class="line">verdi plugin list</span><br></pre></td></tr></table></figure></li><li><p>Pseudopotential families Before you run a calculation, you need to upload or define the pseudopotential</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># upload</span><br><span class="line">verdi data upf uploadfamily [path/to/folder] [name_of_the_family] &quot;some description for your convenience&quot;</span><br><span class="line"># check list</span><br><span class="line">verdi data upf listfamilies</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://aiida-tutorials.readthedocs.io/en/latest/pages/2019_ISSP_Chiba_Japan/sections/appendix_upf_data.html#introduction-pseudopotential-families">see what is and how to create pseudopotential families in official docs</a></p></blockquote></li></ol><h3 id="Run-pw-example"><a href="#Run-pw-example" class="headerlink" title="Run pw example"></a>Run pw example</h3><blockquote><p>The plugin requires at least the presence of:</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">An input structure;</span><br><span class="line">A k-points mesh, in the form of a KpointsData object;</span><br><span class="line">Pseudopotential files for the atomic species present;</span><br><span class="line">A parameters dictionary, that contains the details of the Quantum ESPRESSO calculation;</span><br><span class="line">Other inputs are optional, for example:</span><br><span class="line"></span><br><span class="line">metadata is a dictionary of inputs that modify slightly the behaviour of a processes;</span><br><span class="line">settings is a Dict dictionary that provides access to more advanced, non-default feature of the code.</span><br></pre></td></tr></table></figure><ol><li><p>setup code <code>quantumespresso.pw</code> <code>pw_code.yml</code>:</p><p> ```yml</p></li></ol><hr><p>label: “pwt” description: “quantum_espresso pw test” input_plugin: “quantumespresso.pw” on_computer: true remote_abs_path: “&#x2F;home&#x2F;majinlong&#x2F;qe_release_6.4&#x2F;bin&#x2F;pw.x” computer: “TheHive”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">```bash</span><br><span class="line">verdi code setup --config pw_code.yml</span><br></pre></td></tr></table></figure><ol><li><p>Copy example code here provided [^1] or</p><p> download the official example(<strong>watch out</strong>) [^2] file to test</p><ul><li><p>run with verdi</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">verdi run example</span><br></pre></td></tr></table></figure></li><li><p>run with python</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python example.py</span><br></pre></td></tr></table></figure></li><li><p>run in verdi shell</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">verdi shell</span><br><span class="line">&gt; import example</span><br></pre></td></tr></table></figure><blockquote><p>check the <a href="https://aiida-quantumespresso.readthedocs.io/en/latest/user_guide/get_started/examples/pw_tutorial.html#structure">documentation here</a> to understand mappings from input files to python dict and how to define your inputs.</p></blockquote></li></ul></li><li><p>Retrieve results</p><ul><li><p>run with <code>run</code></p><ol><li><p>get the CalcJobNode PK</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">verdi process list -a</span><br></pre></td></tr></table></figure></li><li><p>verdi shell</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">from aiida.orm import load_node</span><br><span class="line">calc = load_node(PK)</span><br></pre></td></tr></table></figure></li><li><p>results in <code>calc.res</code></p></li></ol></li><li><p>run with <code>submit</code></p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">calc = submit(CalcJob)</span><br><span class="line">calc.res</span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="Run-ph-example"><a href="#Run-ph-example" class="headerlink" title="Run ph example"></a>Run ph example</h3><ol><li><p>setup code <code>quantumespresso.ph</code> as same with <code>pw</code> <code>ph_code.yml</code>:</p><p> ```yml</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">label: &quot;pht&quot;</span><br><span class="line">description: &quot;quantum_espresso ph test&quot;</span><br><span class="line">input_plugin: &quot;quantumespresso.ph&quot;</span><br><span class="line">on_computer: true</span><br><span class="line">remote_abs_path: &quot;/home/majinlong/qe_release_6.4/bin/ph.x&quot;</span><br><span class="line">computer: &quot;TheHive&quot;</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line">verdi code setup --config ph_code.yml</span><br><span class="line">```</span><br></pre></td></tr></table></figure><ol><li><p>use example code here [^3] not official code(if no update version)</p></li><li><p>run code</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">verdi run ph_example.py</span><br></pre></td></tr></table></figure></li><li><p>the same way to retrieve result</p></li></ol><h3 id="Run-nscf-example"><a href="#Run-nscf-example" class="headerlink" title="Run nscf example"></a>Run nscf example</h3><ol><li>run example code here [^4]</li><li>the same way to retrieve result</li></ol><h3 id="Run-bands-example"><a href="#Run-bands-example" class="headerlink" title="Run bands example"></a>Run bands example</h3><p>Almost the same with nscf example code, just change <code>nscf</code> in <code>updated_parameters[&#39;CONTROL&#39;][&#39;calculation&#39;] = &#39;nscf&#39;</code> to <code>bands</code> [^5]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># generate output_bands graph</span><br><span class="line">result.outputs.export(path=&#x27;bands.pdf&#x27;,fileformat=&#x27;mpl_pdf&#x27;)</span><br></pre></td></tr></table></figure><h3 id="Run-q2r-example"><a href="#Run-q2r-example" class="headerlink" title="Run q2r example"></a>Run q2r example</h3><ol><li><p>setup <code>q2r.x</code> code here is the <code>q2r.yml</code>:</p><p> ```yml</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">label: &quot;q2rt&quot;</span><br><span class="line">description: &quot;quantum_espresso q2r test&quot;</span><br><span class="line">input_plugin: &quot;quantumespresso.q2r&quot;</span><br><span class="line">on_computer: true</span><br><span class="line">remote_abs_path: &quot;/home/majinlong/qe_release_6.4/bin/q2r.x&quot;</span><br><span class="line">computer: &quot;TheHive&quot;</span><br><span class="line">```</span><br></pre></td></tr></table></figure><ol><li><p>run example code here [^6](like _ph_ calc, you need to load _ph_ calc node)</p><blockquote><p>Notice the output: <code>SinglefileData</code> A file containing the force constants in real space(<em>in work dir named <code>real_space_force_constants.dat</code></em>)</p></blockquote></li></ol><h3 id="About-Seekpath-module"><a href="#About-Seekpath-module" class="headerlink" title="About Seekpath module"></a>About Seekpath module</h3><p>Here is a example that how to set kpoints with <strong>seekpath</strong>.</p><p>Notice the return result is a <code>KpointsData</code> type, which can be used as <em>kpoints</em> directly</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">```bash</span><br><span class="line">from aiida_quantumespresso.calculations.functions.seekpath_structure_analysis import seekpath_structure_analysis</span><br><span class="line">inputs = &#123;</span><br><span class="line">    &#x27;reference_distance&#x27;: 0.01,</span><br><span class="line">    &#x27;metadata&#x27;: &#123;&#x27;call_link_label&#x27;: &#x27;seekpath&#x27;&#125;</span><br><span class="line">&#125;</span><br><span class="line">spres = seekpath_structure_analysis(s, **inputs)</span><br><span class="line">kpoints = spres[&#x27;explicit_kpoints&#x27;]</span><br><span class="line">```</span><br></pre></td></tr></table></figure><h4 id="Two-dimensions-structure-data"><a href="#Two-dimensions-structure-data" class="headerlink" title="Two dimensions structure data"></a>Two dimensions structure data</h4><p>You may set the k-mesh and kpoints manually when the structure data is a two dimensions one by using code like this.</p><h3 id="About-import-and-export-data"><a href="#About-import-and-export-data" class="headerlink" title="About import and export data"></a>About import and export data</h3><h4 id="Local-data-files"><a href="#Local-data-files" class="headerlink" title="Local data files"></a>Local data files</h4><ol><li><p>show or export <em>StructureData</em></p><blockquote><p><a href="https://aiida-tutorials.readthedocs.io/en/latest/pages/2020_Intro_Week/sections/basics.html?highlight=xyz#structuredata">export structure data</a></p></blockquote> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">verdi data structure show --format ase &lt;IDENTIFIER&gt;</span><br><span class="line">verdi data structure export --format xsf &lt;IDENTIFIER&gt; &gt; BaTiO3.xsf</span><br><span class="line"># xcrysden --xsf BaTiO3.xsf</span><br></pre></td></tr></table></figure></li><li><p>import <code>xyz</code> data</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">verdi data structure import aiida-xyz test.xyz</span><br></pre></td></tr></table></figure></li><li><p>import <code>cif</code> data and transform to <em>structure</em></p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">verdi data structure import ase 9008565.cif</span><br><span class="line"># or import as cifData</span><br><span class="line">verdi data cif import test.cif</span><br><span class="line"># or directly import from file in verdi shell</span><br><span class="line">&gt; CifData = DataFactory(&#x27;cif&#x27;)</span><br><span class="line">&gt; cif = CifData(file=&#x27;/path/to/file.cif&#x27;)</span><br><span class="line">&gt; cif.store()</span><br></pre></td></tr></table></figure><p> use <code>get_structure</code> method to get <em>structure</em> aiida supports.</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cif_struc = load_node(cif_data_pk)</span><br><span class="line">structure = cif.get_structure()</span><br></pre></td></tr></table></figure></li></ol><h4 id="Cloud-Databases"><a href="#Cloud-Databases" class="headerlink" title="Cloud Databases"></a>Cloud Databases</h4><ol><li>supported data <img src="https://img-blog.csdnimg.cn/img_convert/c83c89c0004a59c37b2dd7cb42ce0375.png" alt="2020-09-27-09-32-04"></li><li>query structure data from cloud databases<ul><li><p>Import tools</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">from aiida.plugins import DbImporterFactory</span><br></pre></td></tr></table></figure></li><li><p>Material Project</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">MaterialsProjectImporter = DbImporterFactory(&#x27;materialsproject&#x27;)</span><br><span class="line">m = MaterialsProjectImporter(api_key=`Your_API_KEY`)</span><br><span class="line">query_dict = &#123;&quot;elements&quot;:&#123;&quot;$in&quot;:[&quot;Li&quot;, &quot;Na&quot;, &quot;K&quot;], &quot;$all&quot;: [&quot;O&quot;]&#125;, &quot;nelements&quot;:2&#125;</span><br><span class="line">res = m.query(query=query_dict,properties=&#x27;structure&#x27;)</span><br></pre></td></tr></table></figure></li><li><p>Cod</p><blockquote><p><a href="http://www.crystallography.net/cod/">external (online) repository COD</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CODImporter = DbImporterFactory(&#x27;cod&#x27;)</span><br><span class="line">importer = CODImporter()</span><br><span class="line">args=&#123;</span><br><span class="line">    &#x27;element&#x27;: &#x27;C&#x27;,</span><br><span class="line">    &#x27;title&#x27;: &#x27;&#x27;,</span><br><span class="line">    &#x27;number_of_elements&#x27;: 3,</span><br><span class="line">&#125;</span><br><span class="line">query_results = importer.query(**args)</span><br></pre></td></tr></table></figure></blockquote></li></ul></li></ol><h4 id="Structure-data-group"><a href="#Structure-data-group" class="headerlink" title="Structure data group"></a>Structure data group</h4><ol><li><p>create a group</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">verdi group create [name]</span><br></pre></td></tr></table></figure></li><li><p>add node to group</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">verdi group add-node [pk]</span><br><span class="line"># add with python</span><br><span class="line">group = load_group(label=&#x27;two-dimension&#x27;)</span><br><span class="line">group.add_nodes(load_node(&#123;PK&#125;))</span><br></pre></td></tr></table></figure></li><li><p>query structure in a group</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">qb = QueryBuilder()</span><br><span class="line">qb.append(Group, filters=&#123;&#x27;label&#x27;: &#x27;test&#x27;&#125;, tag=&#x27;group&#x27;)</span><br><span class="line">qb.append(StructureData, with_group=&#x27;group&#x27;)</span><br><span class="line">    </span><br><span class="line"># Submitting the simulations.</span><br><span class="line">for structure in qb.all(flat=True):</span><br><span class="line">    print(structure.pk)</span><br></pre></td></tr></table></figure></li></ol><h4 id="Export-profile-data"><a href="#Export-profile-data" class="headerlink" title="Export profile data"></a>Export profile data</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">```bash</span><br><span class="line">verdi export create [file] -G [group_name | pk]</span><br><span class="line">```</span><br></pre></td></tr></table></figure><h3 id="Write-workflow-for-yourself"><a href="#Write-workflow-for-yourself" class="headerlink" title="Write workflow for yourself"></a>Write workflow for yourself</h3><p>refer to a example here provided for pw and bands calculation</p><h2 id="Some-concepts-and-commands-about-aiida"><a href="#Some-concepts-and-commands-about-aiida" class="headerlink" title="Some concepts and commands about aiida"></a>Some concepts and commands about aiida</h2><ol><li><p>calculation functions require all returned output nodes to be unstored</p></li><li><p>work functions have exactly the opposite required and all the outputs that it returns have to be stored, it cannot create new data</p></li><li><p>go to work dir</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">verdi calcjob gotocomputer [pk]</span><br></pre></td></tr></table></figure></li></ol><h4 id="Issues-question"><a href="#Issues-question" class="headerlink" title="Issues :question:"></a>Issues :question:</h4><ol><li><p>import data</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">verdi data structure import aiida-xyz 4afd2627-5695-49ee-8e2f-2d1f49bff3bb_structure.xyz</span><br><span class="line">&gt; Critical: Number of atom entries (7) is smaller than the number of atoms (8)</span><br></pre></td></tr></table></figure></li></ol><h2 id="Appendix"><a href="#Appendix" class="headerlink" title="Appendix"></a>Appendix</h2><p>[^1]: <a href="./pw">pw example code</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line">```py</span><br><span class="line">from aiida.plugins import DataFactory</span><br><span class="line">from aiida.plugins.factories import CalculationFactory</span><br><span class="line">from aiida.orm import Code</span><br><span class="line">from aiida import load_profile</span><br><span class="line">load_profile()</span><br><span class="line"></span><br><span class="line">###############################</span><br><span class="line"># Set your values here</span><br><span class="line">codename = &#x27;pwt@TheHive&#x27;</span><br><span class="line">pseudo_family = &#x27;ONCV&#x27;</span><br><span class="line">###############################</span><br><span class="line"></span><br><span class="line">code = Code.get_from_string(codename)</span><br><span class="line">#code = Code.get(label=&#x27;pw-6.3&#x27;, machinename=&#x27;TheHive&#x27;)</span><br><span class="line">#code = load_node(PK)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PwCalculation = CalculationFactory(&#x27;quantumespresso.pw&#x27;)</span><br><span class="line">builder = PwCalculation.get_builder()</span><br><span class="line">builder.code = code</span><br><span class="line">#builder = code.get_builder()</span><br><span class="line"></span><br><span class="line">StructureData = DataFactory(&#x27;structure&#x27;)</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot; </span><br><span class="line">We define the cell with a 3x3 matrix(we choose the convention where each ROW represents a lattice vector), which in this case is just a cube of size 4 Angstroms</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">alat = 4\.  # angstrom</span><br><span class="line">cell = [[alat, 0., 0., ],</span><br><span class="line">        [0., alat, 0., ],</span><br><span class="line">        [0., 0., alat, ],</span><br><span class="line">        ]</span><br><span class="line"># BaTiO3 cubic structure</span><br><span class="line">s = StructureData(cell=cell)</span><br><span class="line">s.append_atom(position=(0.,0.,0.),symbols=&#x27;Ba&#x27;)</span><br><span class="line">s.append_atom(position=(alat/2.,alat/2.,alat/2.),symbols=&#x27;Ti&#x27;)</span><br><span class="line">s.append_atom(position=(alat/2.,alat/2.,0.),symbols=&#x27;O&#x27;)</span><br><span class="line">s.append_atom(position=(alat/2.,0.,alat/2.),symbols=&#x27;O&#x27;)</span><br><span class="line">s.append_atom(position=(0.,alat/2.,alat/2.),symbols=&#x27;O&#x27;)</span><br><span class="line"></span><br><span class="line"># if need to store to database</span><br><span class="line"># s.store()</span><br><span class="line"></span><br><span class="line">Dict = DataFactory(&#x27;dict&#x27;)</span><br><span class="line"></span><br><span class="line">parameters = Dict(dict=&#123;</span><br><span class="line">    &#x27;CONTROL&#x27;: &#123;</span><br><span class="line">        &#x27;calculation&#x27;: &#x27;scf&#x27;,</span><br><span class="line">        &#x27;restart_mode&#x27;: &#x27;from_scratch&#x27;,</span><br><span class="line">        &#x27;wf_collect&#x27;: True,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x27;SYSTEM&#x27;: &#123;</span><br><span class="line">        &#x27;ecutwfc&#x27;: 30.,</span><br><span class="line">        &#x27;ecutrho&#x27;: 240.,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x27;ELECTRONS&#x27;: &#123;</span><br><span class="line">        &#x27;conv_thr&#x27;: 1.e-6,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"># parameters.store()</span><br><span class="line"></span><br><span class="line"># define the input dictionary</span><br><span class="line">test_dict = &#123;</span><br><span class="line">    &#x27;CONTROL&#x27;: &#123;</span><br><span class="line">        &#x27;calculation&#x27;: &#x27;scf&#x27;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x27;SYSTEM&#x27;: &#123;</span><br><span class="line">        &#x27;ecutwfc&#x27;: 30.,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x27;ELECTRONS&#x27;: &#123;</span><br><span class="line">        &#x27;conv_thr&#x27;: 1.e-6,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># verify and slightly modifiy input</span><br><span class="line">resdict = CalculationFactory(&#x27;quantumespresso.pw&#x27;).input_helper(test_dict, structure=s)</span><br><span class="line"></span><br><span class="line"># if add the flat_mode=True option to input_helper, the function will reconstruct the correct dictionary to pass as input</span><br><span class="line"># resdict = CalculationFactory(&#x27;quantumespresso.pw&#x27;).input_helper(test_dict, structure=s, flat_mode == True)</span><br><span class="line"></span><br><span class="line">parameters = Dict(dict=resdict)</span><br><span class="line"></span><br><span class="line">KpointsData = DataFactory(&#x27;array.kpoints&#x27;)</span><br><span class="line">kpoints = KpointsData()</span><br><span class="line"></span><br><span class="line"># kpoints.set_kpoints_mesh([4,4,4])</span><br><span class="line">kpoints.set_kpoints_mesh([4,4,4],offset=(0.5,0.5,0.5))</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;# specify kpoints manually</span><br><span class="line">import numpy</span><br><span class="line">kpoints.set_kpoints([[i,i,0] for i in numpy.linspace(0,1,10)],</span><br><span class="line">    weights = [1\. for i in range(10)]) &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line"># pseudopotential</span><br><span class="line">from aiida.orm.nodes.data.upf import get_pseudos_from_structure</span><br><span class="line">builder.pseudos = get_pseudos_from_structure(s, pseudo_family)</span><br><span class="line"></span><br><span class="line"># lable and description</span><br><span class="line">builder.metadata.label = &#x27;My generic title&#x27;</span><br><span class="line">builder.metadata.description = &#x27;a PWscf calculation of BaTiO3&#x27;</span><br><span class="line"></span><br><span class="line"># calc resources</span><br><span class="line">builder.metadata.options.resources = &#123;&#x27;num_machines&#x27;: 1, &#x27;num_mpiprocs_per_machine&#x27; : 1&#125;</span><br><span class="line">builder.metadata.options.max_wallclock_seconds = 1800</span><br><span class="line"></span><br><span class="line"># launch</span><br><span class="line">builder.structure = s</span><br><span class="line">builder.kpoints = kpoints</span><br><span class="line">builder.parameters = parameters</span><br><span class="line"></span><br><span class="line"># run</span><br><span class="line">from aiida.engine import run</span><br><span class="line">results = run(builder)</span><br><span class="line"># export variable results</span><br><span class="line"># results</span><br><span class="line"># export variable builder</span><br><span class="line"># builder</span><br><span class="line"></span><br><span class="line"># without builder</span><br><span class="line"># run(PwCalculation, structure=s, pseudos=builder.pseudos, kpoints = kpoints)</span><br><span class="line"># run(process=code, structure=s, pseudos=builder.pseudos, kpoints = kpoints)</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot; # submit</span><br><span class="line">from aiida.engine import submit</span><br><span class="line">calc = submit(builder) </span><br><span class="line"># retrieve result</span><br><span class="line">calc.res</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">```</span><br></pre></td></tr></table></figure><p>[^2]: the current offical example code(v-3.1.0) isn’t compatible with the latest aiida version, neither doesn’t work with its command-line test tool, change it as follow</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">```py</span><br><span class="line"># builder.metadata.options.resources = &#123;&#x27;num_machines&#x27;: 1&#125;</span><br><span class="line"># resource` need more than one properties such as</span><br><span class="line">builder.metadata.options.resources = &#123;&#x27;num_machines&#x27;: 1, &#x27;num_mpiprocs_per_machine&#x27; : 1&#125;</span><br><span class="line">```</span><br></pre></td></tr></table></figure><p>[^3]: <a href="./ph">ph example code</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">```py</span><br><span class="line">from aiida.plugins import CalculationFactory, DataFactory</span><br><span class="line">from aiida.orm import Code</span><br><span class="line">from aiida import load_profile, orm</span><br><span class="line">from aiida.engine import submit</span><br><span class="line">load_profile()</span><br><span class="line"></span><br><span class="line">#####################</span><br><span class="line"># ADAPT TO YOUR NEEDS</span><br><span class="line"># pw parent calc node pk, ph calc as child proc</span><br><span class="line">parent_id = 140</span><br><span class="line">codename = &#x27;pht@TheHive&#x27;</span><br><span class="line">#####################</span><br><span class="line"></span><br><span class="line">code = Code.get_from_string(codename)</span><br><span class="line"></span><br><span class="line">PhCalculation = CalculationFactory(&#x27;quantumespresso.ph&#x27;)</span><br><span class="line">builder = PhCalculation.get_builder()</span><br><span class="line">builder.code = code</span><br><span class="line"></span><br><span class="line">Dict = DataFactory(&#x27;dict&#x27;)</span><br><span class="line">parameters = Dict(dict=&#123;</span><br><span class="line">    &#x27;INPUTPH&#x27;: &#123;</span><br><span class="line">        &#x27;tr2_ph&#x27;: 1.0e-8,</span><br><span class="line">        &#x27;epsil&#x27;: True,</span><br><span class="line">    &#125;&#125;)</span><br><span class="line"></span><br><span class="line"># QEPwCalc = CalculationFactory(&#x27;quantumespresso.pw&#x27;)</span><br><span class="line">parentcalc = load_node(parent_id)</span><br><span class="line"></span><br><span class="line"># builder = code.get_builder()</span><br><span class="line">builder.metadata.options.resources = &#123;&#x27;num_machines&#x27;: 1, &#x27;num_mpiprocs_per_machine&#x27; : 4&#125;</span><br><span class="line">builder.metadata.options.max_wallclock_seconds = 30*60</span><br><span class="line">builder.metadata.options.withmpi = True</span><br><span class="line"></span><br><span class="line">builder.parameters = parameters</span><br><span class="line">builder.code = code</span><br><span class="line">builder.parent_folder = parentcalc.get_outgoing(node_class=orm.RemoteData, link_label_filter=&#x27;remote_folder&#x27;).one().node</span><br><span class="line"></span><br><span class="line">KpointsData = DataFactory(&#x27;array.kpoints&#x27;)</span><br><span class="line">kpoints = KpointsData()</span><br><span class="line"></span><br><span class="line">kpoints.set_kpoints_mesh([6,6,6])</span><br><span class="line">builder.qpoints = kpoints</span><br><span class="line"># builder.code.store_all()</span><br><span class="line"></span><br><span class="line">print(&quot;created calculation with PK=&quot;, builder.code.pk)</span><br><span class="line">calc = submit(builder)</span><br><span class="line">calc</span><br><span class="line">```</span><br></pre></td></tr></table></figure><p>[^4]: <a href="./nscf">nscf code</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">```py</span><br><span class="line">import os</span><br><span class="line">import numpy as np</span><br><span class="line">from aiida.engine import submit</span><br><span class="line">from aiida import orm</span><br><span class="line"></span><br><span class="line">PwCalculation = CalculationFactory(&#x27;quantumespresso.pw&#x27;)</span><br><span class="line"></span><br><span class="line"># first pw calc node pk</span><br><span class="line">first_pw = load_node(140)</span><br><span class="line">builder = first_pw.get_builder_restart()</span><br><span class="line">updated_parameters = builder.parameters.get_dict()</span><br><span class="line">updated_parameters[&#x27;CONTROL&#x27;][&#x27;calculation&#x27;] = &#x27;nscf&#x27;</span><br><span class="line">updated_parameters[&#x27;SYSTEM&#x27;][&#x27;nbnd&#x27;] = 10</span><br><span class="line"></span><br><span class="line">KpointsData = DataFactory(&#x27;array.kpoints&#x27;)</span><br><span class="line">kpoints = KpointsData()</span><br><span class="line"></span><br><span class="line">klist = np.zeros((216, 3))</span><br><span class="line">tt = 0</span><br><span class="line">for ii in np.arange(0, 1, 1.0/6):</span><br><span class="line">for jj in np.arange(0, 1, 1.0/6):</span><br><span class="line">    for kk in np.arange(0, 1, 1.0/6):</span><br><span class="line">    klist[tt, :] = np.array([ii, jj, kk])</span><br><span class="line">    tt += 1</span><br><span class="line">kpoints.set_kpoints(klist, cartesian = False, weights= np.ones(216)*1.0/216)</span><br><span class="line">kpoints.store()</span><br><span class="line"></span><br><span class="line">builder.kpoints = kpoints</span><br><span class="line">builder.parameters = Dict(dict=updated_parameters)</span><br><span class="line"></span><br><span class="line">builder.parent_folder = first_pw.outputs.remote_folder</span><br><span class="line"></span><br><span class="line">submit(builder)</span><br><span class="line">```</span><br></pre></td></tr></table></figure><p>[^5]: <a href="./bands">bands code</a></p><p>[^6]: <a href="./q2r">q2r code</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">```python</span><br><span class="line">from aiida.engine import submit</span><br><span class="line">from aiida import orm</span><br><span class="line">######set yours here######</span><br><span class="line">ph_pk = 288</span><br><span class="line">q2r_codename = &#x27;q2rt@TheHive&#x27;</span><br><span class="line">##########################</span><br><span class="line"># set ph node pk</span><br><span class="line">ph_calc = load_node(ph_pk)</span><br><span class="line"></span><br><span class="line"># load q2r code</span><br><span class="line">codename = q2r_codename</span><br><span class="line"></span><br><span class="line">code = orm.Code.get_from_string(codename)</span><br><span class="line">builder = code.get_builder()</span><br><span class="line">builder.parent_folder = ph_calc.get_outgoing(</span><br><span class="line">    node_class=orm.RemoteData, link_label_filter=&#x27;remote_folder&#x27;).one().node</span><br><span class="line">builder.metadata.options.update(&#123;</span><br><span class="line">    &#x27;resources&#x27;: &#123;</span><br><span class="line">        &#x27;num_machines&#x27;: 1,</span><br><span class="line">        &#x27;num_mpiprocs_per_machine&#x27;: 4</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x27;max_wallclock_seconds&#x27;: 30*60,</span><br><span class="line">    &#x27;withmpi&#x27;: True</span><br><span class="line">&#125;)</span><br><span class="line">calc = submit(builder)</span><br><span class="line">calc</span><br><span class="line">```</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> aiida </tag>
            
            <tag> materials-science </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>全球化趋势及逆全球化思潮交错背景下的中国战略转型</title>
      <link href="/!archived/%E5%85%A8%E7%90%83%E5%8C%96%E8%B6%8B%E5%8A%BF%E5%8F%8A%E9%80%86%E5%85%A8%E7%90%83%E5%8C%96%E6%80%9D%E6%BD%AE%E4%BA%A4%E9%94%99%E8%83%8C%E6%99%AF%E4%B8%8B%E7%9A%84%E4%B8%AD%E5%9B%BD%E6%88%98%E7%95%A5/"/>
      <url>/!archived/%E5%85%A8%E7%90%83%E5%8C%96%E8%B6%8B%E5%8A%BF%E5%8F%8A%E9%80%86%E5%85%A8%E7%90%83%E5%8C%96%E6%80%9D%E6%BD%AE%E4%BA%A4%E9%94%99%E8%83%8C%E6%99%AF%E4%B8%8B%E7%9A%84%E4%B8%AD%E5%9B%BD%E6%88%98%E7%95%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="全球化趋势及逆全球化思潮交错背景下的中国战略转型"><a href="#全球化趋势及逆全球化思潮交错背景下的中国战略转型" class="headerlink" title="全球化趋势及逆全球化思潮交错背景下的中国战略转型"></a>全球化趋势及逆全球化思潮交错背景下的中国战略转型</h1><p><strong>摘要</strong>：全球化是当今世界发展的主要趋势，然而由于全球化本身也存在一些问题，在大趋势下逆全球化的思潮此起彼伏，世界经济和政治局势正是在这样的背景下不断演化前进。本文分析了全球化的基本内涵和动因，归纳研究了二战后全球化的特征，对比分析了逆全球化运动的现状和产生原因，并从中国的工业化积累和发展的历史出发，介绍了中国应对生产过剩危机的经验，以及身处百年未有之变局新形势下中国的战略转型。作为最大的发展中国家，也是世界最大的工业国和第二大经济体，中国的真实经验和故事对其他发展中国家有着相当的参考和借鉴价值。</p><p><strong>关键字</strong>：全球化；逆全球化；中国经验；中国特色社会主义制度；成本转嫁；一带一路；生态文明</p><p>自地理大发现和第一次工业革命以来，全球联系越来越紧密，经济文化的交流碰撞促进了世界经济的发展和科学技术的进步。在全球化的过程中，中国一直寻求合作共赢的机会，尤其是在完成战略转型后，更是成为全球化重要的参与者和主要的推动者。近年来，日趋萎靡的经济状况和盛行的民粹主义催生的逆全球化思潮对世界的稳定发展造成了极大的冲击。</p><h2 id="一、全球化及其历史背景"><a href="#一、全球化及其历史背景" class="headerlink" title="一、全球化及其历史背景"></a>一、全球化及其历史背景</h2><h3 id="（一）全球化概念"><a href="#（一）全球化概念" class="headerlink" title="（一）全球化概念"></a>（一）全球化概念</h3><p>全球化活动由来已久，而现代意义上的大规模全球化始于19世纪，随着工业革命极大解放了生产力，全球化进程也得到加速。同时，历史证明全球化也一直具有深刻的离间性和分裂性，只是这种后果还没有得到充分的验证。</p><p>相较于全球化活动，全球化本身的概念出现则晚得多，时间上的错位造成了大众对其历史进程的认知与概念定义上的混乱，因而全球化概念自创立以来，就引发了关于定义和解释的争论[1]。国际货币基金组织从”贸易和交易，资本和投资运动，人口的迁移和流动以及知识的传播”四个方面定义了全球化，维基百科对全球化的定义则更为强调各个领域的融合[2]，俞正梁是我国研究全球化较早的学者，其对全球化的定义可以总结为”统一与多样并存、合作与冲突并存的观念与范式转变、多维度不平衡发展的过程”[3]。这里我们所讨论的全球化，主要是经济全球化。</p><h3 id="（二）全球化动因"><a href="#（二）全球化动因" class="headerlink" title="（二）全球化动因"></a>（二）全球化动因</h3><p>当我们研究全球化问题时，很自然地会去思考全球化的动力是什么，这不仅能够建立我们对全球化的基本认识，也能为研究当下的逆全球化运动提供切入点。</p><p>对于全球化的动因，不同学者的观点也各不相同。在何为全球化根本驱动力的问题上，宿景祥从马恩对资本增殖和扩张本性的认识出发，认为全球化不过是资本主义发展的新阶段，而其根本动力则是资本积累的内在驱动[4]。西方学者沃勒斯坦同样强调资本主义在全球化过程中的核心作用，他甚至认为整个世界都在资本主义世界经济的社会分工的架构内运作[5]。与之相对，对大众来说更为直观的认识则是现代科技的革命解放了生产力，改变了生产力的构成要素，从而促使产业结构和生产方式发生质的变化，推动国际产业格局的调整，使世界经济、科技联系更为紧密。罗西瑙甚至把技术及其改造能力看作全球化的首要动力。而从政治逻辑出发，也可以证明”全球化过程是政治因素的产物”，特别是自由主义全球秩序的存在促使主权国家出于国家安全和政治稳定的需要，形成了互动、开放、合作和相互依赖的关系。</p><h3 id="（三）-二战后的全球化"><a href="#（三）-二战后的全球化" class="headerlink" title="（三） 二战后的全球化"></a>（三） 二战后的全球化</h3><p>第二次世界大战是区分前后全球化的一个关键节点。当我们去意识形态地看当时的世界格局时，便能很容易地理解全球化的进程。二战后，帝国主义对世界的控制力下降，一大批新兴主权国家建立，其与宗主国的关系大致可以总结为图表 1的关系，这客观上为解决资本主义生产大过剩提供转移矛盾的途径，避免了第三次世界大战爆发。无论是斯大林领导的苏联还是罗斯福领导的美国，在战后都是事实上的国家资本主义，二者形成双寡头格局，共同瓜分世界，并为自己合理控制世界创造了冷战意识形态。这一时期，主要进行的是地缘控制下向同阵营内国家进行的雁阵式产业转移。</p><table style="border-collapse:collapse" border="0"><colgroup><col style="width:691px"></colgroup><tbody valign="top"><tr><td valign="middle" style="padding-left: 9px; padding-right: 9px"><p style="text-align: center"><img src="https://blog.poryoung.cn/wp-content/uploads/2021/04/041221_0949_1.png" alt=""><span style="font-size:10pt"></span></p><p style="text-align: center"><span style="font-size:10pt"><span style="font-family:黑体">图表</span><span style="font-family:Calibri Light"> 1 </span><span style="font-family:黑体">大多数新兴国家发展的内在逻辑</span></span></p></td></tr></tbody></table><p>苏联解体后，世界进入由西方特别是美国单极霸权主导的全球化，高举经济全球化的大旗，开始了新一轮产业大规模向外转移，主要是转移落后的、高污染、资源高消耗、劳动密集型的产业。于此同时，西方金融资本快速扩张，不仅造成自身普遍出现产业空心化，还在全球进行投机牟利，造成了当下金融资本全球化危机。</p><h2 id="二、逆全球化思潮"><a href="#二、逆全球化思潮" class="headerlink" title="二、逆全球化思潮"></a>二、逆全球化思潮</h2><h3 id="（一）-逆全球化思潮此起彼伏"><a href="#（一）-逆全球化思潮此起彼伏" class="headerlink" title="（一） 逆全球化思潮此起彼伏"></a>（一） 逆全球化思潮此起彼伏</h3><p>据联合国贸易和发展会议（UNCTAD）发布的跨国直接投资（FDI）统计，从2016年到2018年，全球FDI规模不断刷新自2008年以来的低纪录，2018年更是比2017年萎缩了将近五分之一，规模为1.2 兆美元。2007年全球FDI占全球GDP的3.5%，而2018 年这一比重已不足1.5%[6]。世界贸易规模的增长速度从2008年后也明显放缓。从数据来看，全球化已经进入减速阶段。</p><p>从全球化发展规律和趋势来看，”逆全球化”的说法实际不成立，逆全球化实际上是指反对全球化，是一种反对全球化思潮，这种反对全球化的力量与全球化发展伴生，主要体现为由全面开放转向有条件开放，直至封闭的过程，在这一过程中不断为国际间的生产要素流动设置障碍。全球范围来看，反全球化此起彼伏，不容乐观。</p><p>以美国为首的发达国家出现了民粹主义和贸易保护主义抬头的趋势，特朗普在任的4年，推行美国优先，频频退出或威胁退出国际组织，出台各种政策限制要素流动，声称”美国做出了让步和牺牲”，而事实上，美国才是这一轮全球化的主导者。与之相应的，欧洲也有以玛丽• 勒庞领导的法国”国民阵线”和德国的极右民粹政党为代表的右翼政治实力崛起，加上英国脱欧带来的风险和不确定性，极大阻碍了欧洲一体化进程。不仅如此，一些发展中国家也存在不少反对全球化的声音。这些都在不断地冲击着当前的经济全球化。</p><h3 id="（二）-逆全球化动因"><a href="#（二）-逆全球化动因" class="headerlink" title="（二） 逆全球化动因"></a>（二） 逆全球化动因</h3><p>通过分析逆全球化思潮背后的原因，能够有助于我们正确应对逆全球化的挑战。当我们了解全球化的动因，我们就能明白，无论是发达国家还是部分发展中国家，之所以反对全球化，都源于全球性的发展不平衡和分配不均[7–11]。</p><p>对于发达国家，西方宪政体制存在的弊端一直被其高速发展的经济和能在全球范围内转嫁危机和收割财富掩盖，国家能够负担高成本的社会制度，民众也能享受高福利政策。然而自2008年经济危机以来，其代议制民主出现了严重的危机，高成本、低效率、分裂和各自为政的政治制度暴露出来，然而直到现在，这一状况仍然没得到改善，反而更加热衷于在全世界传播所谓普适价值，制造区域冲突和混乱试图掩盖国内矛盾。由于西方国家是全球化的主导者，尤其是美国，能够轻易地向全世界转嫁国内的危机，从全世界特别是发展中国家攫取财富，理应是全球化最坚定的支持者，事实上，很长一段时间都如此。然而当政体体制弊端暴露，政府热衷于向全球输出革命、战争，给许多地区带来深重的灾难，攫取的财富却流入少数人的手里，也未曾投入民生建设，贫富差距极具拉大，社会割裂严重等一系列问题出现后，民众开始纷纷抗议，可在有心人的引导下，他们不是将矛头指向无为的政府，指向金融资本，而是指向了全球化，指向了那些他们认为抢了他们工作的发展中国家。于是，贸易保护主义顺势抬头，反民主、反移民的声音也越来越大。</p><p>对于大多数发展中国家，其内在的发展逻辑在图表 1中有过概括，核心是温铁军提出的成本转嫁论[12]。由于主权负外部性、超前的体制和资本缺乏，导致其内涵使然亲资，面对宗主国的产业转移只能全盘接受，被动地进入全球化，被国内和国外资本双重剥削，结果就是内生性的劳资矛盾、外生性的环境问题也随之出现在发展中国家，这些问题无法得到很好的处理，同时经济基础缺乏使得无法支付高昂的制度成本，导致发达国家越富、发展中国家越穷的情况。当民主发觉全球化并没有给国家经济和民生带来改善时，反对全球化的声音就出现了。</p><h2 id="三、中国历史经验与战略转型"><a href="#三、中国历史经验与战略转型" class="headerlink" title="三、中国历史经验与战略转型"></a>三、中国历史经验与战略转型</h2><p>中国作为最大的发展中国家，已经和即将面临的问题更复杂也更严峻，从建国时的一穷二白到如今成为世界第二大经济体和最大的工业国，走过不少弯路，也积累了相当的经验，这些教训和经验无论是对其他发展中国家还是对当下寻求破解逆全球化困境的中国自身，都是非常值得参考和学习。</p><h3 id="（一）中国的历史经验"><a href="#（一）中国的历史经验" class="headerlink" title="（一）中国的历史经验"></a>（一）中国的历史经验</h3><p>建国以来，中国经济面临的主要问题可以大致归纳为两类：资本的原始积累和周期性生产过剩危机。</p><p>人们常讶异于中国改革开放以来经济的飞速增长和综合国力的迅速提升，却弄不清背后原因，不只其他国家的人民，大部分中国人虽然切身感受着国家的变化，对背后的原因和逻辑也是茫然的。这背后一个重要的原因就是他们简单地将中国历史做了切割，忽略了中国特色社会主义制度与马克思列宁主义、毛泽东思想的传承与发展的关系，特别是一以贯之的”实事求是”精神。</p><ol><li><h4 id="土地革命与土地改革"><a href="#土地革命与土地改革" class="headerlink" title="土地革命与土地改革"></a>土地革命与土地改革</h4></li></ol><p>1949年新中国建立，我们称之为新民主义革命的胜利。相比于同时期其他通过谈判或交易独立或建国的国家，中国显然是通过暴力革命获得相对不具有负外部性的国家主权，官僚资本和西方在中国的资产均被收归国有，为之服务的反动分子和买办被处理，革命者的流血牺牲打破了殖民者和宗主国强加的财产权利，构成了财产平均分配的条件。完整的国家主权也是中国能够历次通过增发国债和增发货币投入基础建设以应对经济危机外需下降造成的生产过剩危机的原因。</p><p>在农村，实质上也是土地革命的完成，实现的是中国农民千年来相同的诉求，通过暴力没收地主土地分给农民，即耕者有其田，而近九成国民是农民，所以从结果来看，此时的中国是由小土地所有者也即小资产阶级组成了社会的根基。这给当时的社会改革和工业化带来很大的困难，因为小资产所有者具有分散性，交易费用理论认为，当交易对象大到一定量时或交易频率过高，交易成本会大量增加，交易便无法进行[13]。无论是资本主义还是马克思主义都无法在由小有产者和小资产阶级为主体的国家贯彻执行。但也正是由于全面的土地革命，保证了中国从建国到现在尽管社会问题不断，但依然是一个超稳态的国家。这一事实从毛泽东土地改革、邓小平家庭联产承包责任制到再承包和胡温新政均有体现，也是新中国新政府的政治合法基础。</p><p>近些年来由于资本下乡和合村并居出现了一系列社会矛盾，正是违背了这一历史经验，试图改变自建国以来反复向小资群体承诺的基本财产权利关系，想要把小资产所有者变成产业工人也即无产者导致的。</p><ol><li><h4 id="内向型工业化"><a href="#内向型工业化" class="headerlink" title="内向型工业化"></a>内向型工业化</h4></li></ol><p>工业领域的内在特点是资本增密、技术增密、排斥劳动，而当时的中国，不仅有民国遗留下来月38%通胀率的超高通胀问题，而且全部黄金储备被蒋介石带往台湾，资本极度稀缺，加之中国不可能、也不会像西方一样通过海外血腥殖民掠夺财富来完成资本原始积累，因此朝鲜战争我们必须要打，不仅是为了捍卫国家主权，同时也是为了靠向苏联阵营，抓住冷战两个超级大国为了相互制衡而向阵营内国家进行双雁阵产业转移的机遇，尤其是重工业生产线。而获得重工业生产能力后，第一次生产过剩危机爆发了。虽然中国一步进入了重工业国家，但此时客观条件是小农经济下的中国无法消化掉这些工业产品，于是就有了第二个重要的历史经验——内向型工业化积累。内向型工业化原始积累的方法主要有两个[14]，一是通过高度组织化，如农村集体化、城市单位化，来占有全体劳动者的劳动剩余价值，同时通过工农产品剪刀差提取农业剩余，在当时就是合作社的形式，并不是为了农业，而是为了承载初步形成工业生产能力但失去苏联继续投资的城市工业；二是通过劳动力资源资本化来大规模地集中使用劳动力投入国家基本建设，以此替代稀缺程度趋零的资本。后来的知青上山下乡、家电下乡、西部开发、振兴东北老工业基地、中部崛起等一系列号召和政策都是在这个思路下进行的，这也是我们现在常说的举国体制，民众协力承担发展成本，在维护国家主权的同时完成工业化的跨越。</p><p>不客气的说，与西方充满残酷掠夺、血腥杀戮的资本原始积累和历次内部经济危机处理不当造成全球动荡乃至爆发战争相比，中国的工业化条件和工业化的实现，是中国人民用自己的鲜血和牺牲换来的。</p><p>综合来看，无论是工业的原始积累还是历次化解生产过剩危机，农村或者叫乡土社会，一直是发展成本最大的承担者，是中国应对危机软着陆的载体，也正是有了广大和稳定的农村，中国才能在短短30年内完成西方几百年靠血淋淋的原始积累才完成的工业化，又在短短40年实现了经济飞跃。只是经过历次成本转嫁和近些年来激进的现代化，现在的中国农村恐怕已经无力再为中国的快速发展承担一次危机了。</p><h3 id="（二）中国的新发展战略"><a href="#（二）中国的新发展战略" class="headerlink" title="（二）中国的新发展战略"></a>（二）中国的新发展战略</h3><p>长久以来，无论是工业的原始积累还是应对生产过剩危机，中国靠的都是内部消化，向农村转移成本和转嫁危机，特别是实行特色社会主义市场经济制度以后，通过增发国债和货币投资基础建设，转化过剩产能成了屡试不爽的方法。</p><p>如今，国内是新一轮生产过剩，国外是西方特别是美国的全方面的围追堵截，为实现和巩固全面建成小康社会，实现两个一百年计划和中华民族伟大复兴的历史任务，中国迫切需要调整发展战略，改变粗放型的发展模式，全面转向高质量稳定发展。十九大报告对未来中国的发展方向和发展策略有着清晰的规划。</p><ol><li><h4 id="“一带一路”的走出去战略和亚区域整合"><a href="#“一带一路”的走出去战略和亚区域整合" class="headerlink" title="“一带一路”的走出去战略和亚区域整合"></a>“一带一路”的走出去战略和亚区域整合</h4></li></ol><p>近些年来美国各种贸易保护主义政策和逆全球化举动对本就陷入困境的全球化来说无疑是雪上加霜，但对中国来说，也是一次走向全球化舞台中心，主导区域全球化的历史机遇。随着西方对中国的制裁和封锁越来越频繁，中国迫切需要改变被围堵的困境，在稳定内部市场的同时，积极走出去开拓国际市场，实现推动国际制度改革、创建参与新机制。”一带一路”正是在这样的背景下提出来的中国倡议。十九大报告明确提到推动形成全面开放新格局，”要以’一带一路’建设为重点，坚持引进来和走出去并重，遵循共商共建共享原则，加强创新能力开放合作，形成陆海内外联动、东西双向互济的开放格局”[15]。</p><p>“一带一路”倡议的提出和系列项目的落实，不仅有利于中国打破西方封锁，实现区域再整合，消化中国过剩产能，减轻国内供给侧压力，也有利于推动沿线国家的产业结构和分工的优化升级，使其与高速发展的中国经济紧密结合，共享发展成果，互利共赢[16]，加快经济全球化发展的自我修复和调节，推动全球化发展朝更加公平、更加包容、更加普惠、更加平衡和更加开放的世界经济方向继续前进[9,17,18]。</p><p>“一带一路”的最终目标是人类命运共同体，在此基础上还有众多走出去的策略方案，然而在走出去的过程中，风险和挑战无时不在，因此对内完成亚区域整合，建设环渤海经济圈、长江经济带和粤港澳大湾区等国内经济循环圈，就是中国应对走出去战略陷入困境时可以回头进行国内建设的又一重要战略。</p><ol><li><h4 id="乡村振兴和生态文明的发展战略"><a href="#乡村振兴和生态文明的发展战略" class="headerlink" title="乡村振兴和生态文明的发展战略"></a>乡村振兴和生态文明的发展战略</h4></li></ol><p>多年来的粗放式发展，给中国的生态环境造成了极大地破坏，同时以”群体文化”为基础的乡土社会正面临瓦解，依靠家庭人力与资源的自我资本化收益以维持”风险内部化”的机制的主要条件正在衰减趋零[14]，其内部社会经济结构和外部宏观环境都发生着变化，开始面临资源流出严重、生态环境难以持续的困境[19]。</p><p>十七大和十八大反复强调的”生态文明”，在十九大报告中再次明确被提到，”发展必须坚持人与自然的和谐共生，生态文明建设是中华民族永续发展的千年大计。必须树立和践行绿水青山就是金山银山的理念······建设美丽中国，为人民创造良好的生产生活环境，为全球生态安全做出贡献。”[15] 习近平总书记说过，21世纪中国经济增长内涵最丰富的领域就是乡村振兴，并指出实施乡村振兴战略是关系全面建设社会主义现代化国家的全局性、历史性任务，强调要”坚持走中国特色乡村振兴之路”。</p><p>中国社会科学院的刘利乐认为，”经济人需要一种生态自觉”，人与自然关系的断裂是当前全球化困境和逆全球化的深层根源。要正确化解经济危机，重新拥抱全球化，经济人要自觉转向生态经济人，要确立人与自然共生的生态人格，养成源于自然多样性和复杂性的生态理性，并追求以自然生态自然承载能力为前提的生态消费[20]。实行生态文明发展战略就是要避免以资源换取短暂利益的盲目行为，建立永续发展的生态自觉。</p><p>乡村振兴也是可持续包容性增长和生态文明发展理念的重要一环。从提出”两型农业”的发展目标到社会主义新农村建设，中国不计投入产出比地对广大农村地区进行基础设施建设，发展以农业为基础的多元化非农经济。乡村振兴最大的好处在于能够短时间内扩充中国的实体化的物业资产，虽然不能反映为GDP的增长，但却带来了货币化的机会，增强了政府金融管控的能力，在这部分资产完成交易后还能转化为资本。连续18年来向乡村的投资已经转化为沉淀成本，只待开发和利用。在这一过程中，要保证让农村的资源性资产由村级集体经济来占用、管理和开发，一方面是能够降低交易成本，更重要的是能让大家共同受益。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>习近平总书记多次在讲话中提到，当今世界正处于百年唯有之大变局，世界经济和政治局势在全球化与逆全球化思潮交错中演变前行，对中国而言，无论我们是否做好准备，我们已经成为了主要矛盾的非主要方面，一场由美国挑起的中美新冷战已然拉开序幕，放弃幻想，准备斗争，积极构建属于中国的话语体系和话语权，向世界讲述中国故事，传递中国价值，分享中国经验，与世界各国一起携手共建人类命运共同体，实现中华民族的伟大复兴是我们努力和奋斗的目标。</p><p><strong>参考文献</strong></p><p>[1]    白卫东. 全球化及其动力研究[J]. 开封教育学院学报, 2019, 39(03): 289–290.</p><p>[2]    Globalization[J]. Wikipedia, 2021.</p><p>[3]    俞正梁. 复旦大学出版社, 2000. 全球化时代的国际关系[M]. , 2000.</p><p>[4]    宿景祥. 全球化是资本主义发展的最新阶段[J]. 教学与研究, 1999(09): 55-60+81.</p><p>[5]    岳长龄. 西方全球化理论面面观[J]. 战略与管理, 1995(06): 84–95.</p><p>[6]    朱云汉. 全球化的裂解与再融合[J]. 经济导刊, 2019(12): 66–75.</p><p>[7]    陈家驹, 张晓芳. 反全球化运动的历史考察与现实转向分析[J]. 晋中学院学报, 2020, 37(02): 60–64.</p><p>[8]    杨平. 逆全球化、资本主义的历史逻辑及未来趋势[J]. 文化纵横, 2019(04): 28-38+142.</p><p>[9]    李曦辉. 中美贸易摩擦:道路之争——兼议”一带一路”与西方主导全球化模式之优劣[J]. 经济导刊, 2019(08): 72–77.</p><p>[10]    杨万东, 张蓓, 方行明. 逆全球化的历史演进与可能走向[J]. 上海经济研究, 2019(01): 99–112.</p><p>[11]    黄建忠. 经济服务化:逆全球化的持续性及其结构动因[J]. 世界知识, 2017(16): 16–17.</p><p>[12]    温铁军. 东方出版社, 2013. 八次危机: 中国的真实经验 (1949-2009)[M]. , 2013.</p><p>[13]    商务印书馆, 2010. 企业的性质: 起源, 演变与发展[M]. , 2010.</p><p>[14]    温铁军, 邱建生, 张俊娜. 理性看待全球危机,自觉转向生态文明[J]. 福建农林大学学报(哲学社会科学版), 2015, 18(04): 1–4.</p><p>[15]    习近平：决胜全面建成小康社会 夺取新时代中国特色社会主义伟大胜利——在中国共产党第十九次全国代表大会上的报告 _ 最新报道 _中国政府网[EB&#x2F;OL]. [2021-04-09]. <a href="http://www.gov.cn/zhuanti/2017-10/27/content/_5234876.htm">http://www.gov.cn/zhuanti/2017-10/27/content\_5234876.htm</a>.</p><p>[16]    黄河周骁, HUANG He Z X. 世界产业分工秩序：特征、挑战与重塑[J]. 《深圳大学学报》（人文社科版）, 38(1): 67–78.</p><p>[17]    权衡. 经济全球化的实践困境与”一带一路”建设的新引擎[J]. 世界经济研究, 2017(12): 3-8+132.</p><p>[18]    陈健, 龚晓莺. “一带一路”战略开启具有”人类命运共同体”意识的全球化发展的新时代[J]. 经济学家, 2017(07): 73–79.</p><p>[19]    中国人民大学经济学院博士后 杨帅　中国人民大学可持续发展高等研究院教授 温铁军. 中国社会科学报, 2013. 什么才是体现中国”比较优势”的现代化[J]. 中国社会科学报, 2013: A07.</p><p>[20]    刘利乐. 逆全球化背景下经济人的伦理困境与生态自觉[J]. 中南林业科技大学学报(社会科学版): 1–7.</p>]]></content>
      
      
      <categories>
          
          <category> anything </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>VSCode配置Fortran环境</title>
      <link href="/!archived/vscode%E9%85%8D%E7%BD%AEfortran%E7%8E%AF%E5%A2%83/"/>
      <url>/!archived/vscode%E9%85%8D%E7%BD%AEfortran%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h1 id="VsCode-Fortran-Settings"><a href="#VsCode-Fortran-Settings" class="headerlink" title="VsCode Fortran Settings"></a>VsCode Fortran Settings</h1><h2 id="Modern-Fortran-Miguel-Carvajal"><a href="#Modern-Fortran-Miguel-Carvajal" class="headerlink" title="Modern Fortran [_Miguel Carvajal_]"></a>Modern Fortran [_Miguel Carvajal_]</h2><p>Fortran highlight plugin.</p><h2 id="C-x2F-C-for-Visual-Studio-Code-Microsoft"><a href="#C-x2F-C-for-Visual-Studio-Code-Microsoft" class="headerlink" title="C&#x2F;C++ for Visual Studio Code [_Microsoft_]"></a>C&#x2F;C++ for Visual Studio Code [_Microsoft_]</h2><p>C&#x2F;C++ debug plugin also supports fortran.</p><p>Toggle debug and modify the example <code>launch.json</code> and <code>tasks.json</code> files.</p><h2 id="Makefile-Tools-Microsoft-optional"><a href="#Makefile-Tools-Microsoft-optional" class="headerlink" title="Makefile Tools [Microsoft, _optional_]"></a>Makefile Tools [<em>Microsoft</em>, _optional_]</h2><p>You can set <code>make</code> command in <code>tasks.json</code> or use this plugin to compile make project.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// vscode settings</span><br><span class="line">&#123;</span><br><span class="line">    &quot;makefile.launchConfigurations&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;cwd&quot;: &quot;/home/user/project&quot;,</span><br><span class="line">            &quot;binaryPath&quot;: &quot;/home/user/project/bin/program&quot;,</span><br><span class="line">            &quot;binaryArgs&quot;: []</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Here is a example for C&#x2F;C++ make project.</p><p><strong>Directory tree</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- bin</span><br><span class="line">-- main</span><br><span class="line">- src</span><br><span class="line">-- main.cpp</span><br><span class="line">-- module.cpp</span><br><span class="line">-- header.h</span><br><span class="line">- Makefile</span><br></pre></td></tr></table></figure><p><strong>Makefile</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">LINK    = @echo linking $@ &amp;&amp; g++</span><br><span class="line">GCC     = @echo compiling $@ &amp;&amp; g++</span><br><span class="line">GC      = @echo compiling $@ &amp;&amp; gcc</span><br><span class="line">AR      = @echo generating static library $@ &amp;&amp; ar crv</span><br><span class="line">FLAGS   = -g -DDEBUG -W -Wall -fPIC</span><br><span class="line">GCCFLAGS =</span><br><span class="line">DEFINES =</span><br><span class="line">HEADER  = -I./</span><br><span class="line">LIBS    =</span><br><span class="line">LINKFLAGS =</span><br><span class="line"></span><br><span class="line">BIN_PATH = bin</span><br><span class="line">SRC = $(wildcard src/*.cpp)</span><br><span class="line">INCLUDES = include</span><br><span class="line">TARGET = main</span><br><span class="line">OBJECT = $(SRC:%.cpp=%.o)</span><br><span class="line"></span><br><span class="line">.SUFFIXES: .cpp .c</span><br><span class="line">.cpp.o:</span><br><span class="line">    $(GCC) -c $(HEADER) $(FLAGS) $(GCCFLAGS) -fpermissive -o $@ #html#lt;</span><br><span class="line"></span><br><span class="line">.c.o:</span><br><span class="line">    $(GC) -c $(HEADER) $(FLAGS) -fpermissive -o $@ #html#lt;</span><br><span class="line"></span><br><span class="line">$(TARGET) : $(OBJECT)</span><br><span class="line">    @echo &quot;============开始编译============&quot;</span><br><span class="line">    $(LINK) $(FLAGS) $(LINKFLAGS) -o $@ $^ $(LIBS)</span><br><span class="line">    mv $(TARGET) $(BIN_PATH)</span><br><span class="line">    @echo &quot;============编译结束============&quot;</span><br><span class="line"></span><br><span class="line">clean:</span><br><span class="line">    rm -rf $(OBJECT) $(TARGET)</span><br></pre></td></tr></table></figure><h2 id="FORTRAN-IntelliSense-Chris-Hansen"><a href="#FORTRAN-IntelliSense-Chris-Hansen" class="headerlink" title="FORTRAN IntelliSense (Chris Hansen)"></a>FORTRAN IntelliSense (<code>Chris Hansen</code>)</h2><p>Install <a href="https://github.com/hansec/fortran-language-server"><code>fortran-language-server</code></a> and create <code>.fortls</code> file if you need to modify the default configuration.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install fortran-language-server</span><br></pre></td></tr></table></figure><p>An example of <code>.fortls</code> to add external source of hdf5 libs.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;ext_source_dirs&quot;: [&quot;/home/user/hdf5/fortran/src&quot;],</span><br><span class="line">    &quot;debug_log&quot;: true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="fprettify-Blamsoft"><a href="#fprettify-Blamsoft" class="headerlink" title="fprettify (Blamsoft)"></a>fprettify (<code>Blamsoft</code>)</h2><p><a href="https://github.com/pseewald/fprettify">Fortran code formatter</a>.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgrade fprettify</span><br></pre></td></tr></table></figure><p>Integrating with VsCode, modify in your need:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// VsCode settings</span><br><span class="line">&#123;</span><br><span class="line">    &quot;fprettify.arguments&quot;: &quot;-i 4 --case 1 1 1 2&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> fortran </tag>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FRP内网穿透 + Nginx代理 + 获取Real IP</title>
      <link href="/!archived/frp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F-nginx%E4%BB%A3%E7%90%86-%E8%8E%B7%E5%8F%96real-ip/"/>
      <url>/!archived/frp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F-nginx%E4%BB%A3%E7%90%86-%E8%8E%B7%E5%8F%96real-ip/</url>
      
        <content type="html"><![CDATA[<h1 id="FRP内网穿透-Nginx代理-获取真实IP"><a href="#FRP内网穿透-Nginx代理-获取真实IP" class="headerlink" title="FRP内网穿透 + Nginx代理 + 获取真实IP"></a>FRP内网穿透 + Nginx代理 + 获取真实IP</h1><p>以下仅列出关键配置</p><h2 id="外网服务端配置"><a href="#外网服务端配置" class="headerlink" title="外网服务端配置"></a>外网服务端配置</h2><p>如果指定反代ip，frp会无法获取host，导致502错误，采用以下方案可以解决，但需要开放<code>fprs https</code>端口，并指定解析<code>$host</code>的DNS服务器</p><h3 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line">    <span class="attribute">server_name</span> your.domain;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl_certificate</span>  ./your.domain.cer;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> ./your.domain.key;</span><br><span class="line">    <span class="attribute">ssl_session_cache</span>    shared:SSL:<span class="number">1m</span>;</span><br><span class="line">    <span class="attribute">ssl_session_timeout</span>  <span class="number">5m</span>;</span><br><span class="line">    <span class="attribute">server_tokens</span> <span class="literal">off</span>;</span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">        <span class="attribute">resolver</span> <span class="number">223.5.5.5</span>; <span class="comment"># dns resolver server</span></span><br><span class="line">        <span class="attribute">proxy_ssl_server_name</span> <span class="literal">on</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>:<span class="variable">$server_port</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">        <span class="attribute">proxy_pass</span> https://<span class="variable">$host</span>:6443; <span class="comment"># frps https port, set $host insead of ip</span></span><br><span class="line">        <span class="attribute">error_page</span> <span class="number">502</span> http://<span class="variable">$host</span>:6080/<span class="variable">$request_uri</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>参考<a href="https://github.com/fatedier/frp/issues/888">issue #888: nginx https反向代理到frp https 报 502错误</a> 参考<a href="https://blog.ray8.cc/archives/frpc-frps-nginx-real-ip-https-rewrite-ssl-cert-pure-code.html/comment-page-1">frpc+frps+nginx反代+解析后端真实IP+双向https自动跳转+https证书配置的纯享版配置文件及操作指导</a></p></blockquote><h3 id="FRP-Server"><a href="#FRP-Server" class="headerlink" title="FRP Server"></a>FRP Server</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">[common] is integral section</span></span><br><span class="line">[common]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">A literal address or host name <span class="keyword">for</span> IPv6 must be enclosed</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="keyword">in</span> square brackets, as <span class="keyword">in</span> <span class="string">&quot;[::1]:80&quot;</span>, <span class="string">&quot;[ipv6-host]:http&quot;</span> or <span class="string">&quot;[ipv6-host%zone]:80&quot;</span></span></span><br><span class="line">bind_addr = 0.0.0.0</span><br><span class="line">bind_port = 5443</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">udp port used <span class="keyword">for</span> kcp protocol, it can be same with <span class="string">&#x27;bind_port&#x27;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="keyword">if</span> not <span class="built_in">set</span>, kcp is disabled <span class="keyword">in</span> frps</span></span><br><span class="line">kcp_bind_port = 5443</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="keyword">if</span> you want to configure or reload frps by dashboard, dashboard_port must be <span class="built_in">set</span></span></span><br><span class="line">dashboard_port = 8090</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">dashboard assets directory(only <span class="keyword">for</span> debug mode)</span></span><br><span class="line">dashboard_user = admin</span><br><span class="line">dashboard_pwd = admin</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">assets_dir = ./static</span></span><br><span class="line">vhost_http_port = 6080</span><br><span class="line">vhost_https_port = 6443</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">console or real logFile path like ./frps.log</span></span><br><span class="line">log_file = ./frps.log</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">debug, info, warn, error</span></span><br><span class="line">log_level = info</span><br><span class="line">log_max_days = 3</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">auth token</span></span><br><span class="line">token = Your_Token</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">It is convenient to use subdomain configure <span class="keyword">for</span> http、https <span class="built_in">type</span> when many people use one frps server together.</span></span><br><span class="line">subdomain_host = your.domain</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">only allow frpc to <span class="built_in">bind</span> ports you list, <span class="keyword">if</span> you <span class="built_in">set</span> nothing, there won<span class="string">&#x27;t be any limit</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="string">allow_ports = 1-65535</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">pool_count in each proxy will change to max_pool_count if they exceed the maximum value</span></span></span><br><span class="line">max_pool_count = 50</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">if tcp stream multiplexing is used, default is true</span></span></span><br><span class="line">tcp_mux = true</span><br></pre></td></tr></table></figure><h2 id="本地客户端配置"><a href="#本地客户端配置" class="headerlink" title="本地客户端配置"></a>本地客户端配置</h2><h3 id="Nginx-1"><a href="#Nginx-1" class="headerlink" title="Nginx"></a>Nginx</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span> ssl http2;</span><br><span class="line">    <span class="attribute">listen</span> [::]:<span class="number">443</span> ssl http2;</span><br><span class="line">    <span class="attribute">server_name</span> <span class="number">172.31.0.1</span>; <span class="comment"># local server ip</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">set_real_ip_from</span> <span class="number">172.31.0.1</span>; <span class="comment"># frp client ip</span></span><br><span class="line">    <span class="attribute">real_ip_header</span> X-Forwarded-For; <span class="comment">#用于接收远端frps服务器上nginx传递的真实IP</span></span><br><span class="line">    <span class="attribute">real_ip_recursive</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl_certificate</span>    ./your.domain.cer;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span>    ./your.domain.key;</span><br><span class="line">    <span class="attribute">ssl_protocols</span> TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span> TLSv1.<span class="number">3</span>;</span><br><span class="line">    <span class="attribute">ssl_ciphers</span> EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;</span><br><span class="line">    <span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">ssl_session_cache</span> shared:SSL:<span class="number">10m</span>;</span><br><span class="line">    <span class="attribute">ssl_session_timeout</span> <span class="number">10m</span>;</span><br><span class="line">    <span class="attribute">add_header</span> Strict-Transport-Security <span class="string">&quot;max-age=31536000&quot;</span>;</span><br><span class="line">    <span class="attribute">error_page</span> <span class="number">497</span>  https://<span class="variable">$host</span><span class="variable">$request_uri</span>;</span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://application; <span class="comment"># your local application ip</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="FRP-Client"><a href="#FRP-Client" class="headerlink" title="FRP Client"></a>FRP Client</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">token = Your_Token</span><br><span class="line">server_addr = server_host</span><br><span class="line">server_port = 5443</span><br><span class="line"></span><br><span class="line">[index]</span><br><span class="line">type = https</span><br><span class="line">local_ip = 172.31.0.1</span><br><span class="line">local_port = 443</span><br><span class="line">custom_domains = your.domain</span><br><span class="line">use_encryption=true</span><br><span class="line">use_compression=true</span><br></pre></td></tr></table></figure><h2 id="获取IP"><a href="#获取IP" class="headerlink" title="获取IP"></a>获取IP</h2><p>以<code>django</code>为例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_ip_address</span>(<span class="params">request</span>):</span><br><span class="line">    ip = request.META.get(<span class="string">&#x27;HTTP_X_REAL_IP&#x27;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> ip:</span><br><span class="line">        ip = request.META.get(<span class="string">&quot;HTTP_X_FORWARDED_FOR&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> ip:</span><br><span class="line">        ip = request.META.get(<span class="string">&#x27;REMOTE_ADDR&#x27;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    client_ip = ip.split(<span class="string">&quot;,&quot;</span>)[-<span class="number">1</span>].strip() <span class="keyword">if</span> ip <span class="keyword">else</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> client_ip</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> frp </tag>
            
            <tag> nginx </tag>
            
            <tag> 内网穿透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《告别百年激进》摘</title>
      <link href="/!archived/%E3%80%8A%E5%91%8A%E5%88%AB%E7%99%BE%E5%B9%B4%E6%BF%80%E8%BF%9B%E3%80%8B%E6%91%98/"/>
      <url>/!archived/%E3%80%8A%E5%91%8A%E5%88%AB%E7%99%BE%E5%B9%B4%E6%BF%80%E8%BF%9B%E3%80%8B%E6%91%98/</url>
      
        <content type="html"><![CDATA[<p>之前看过温老在人民公开课上的专题讲座《告别百年激进》，时间短、内容丰富，许多都只了解个大概，对现代化和现代化问题的认识还很片面，近来才读温老十年演讲结集，也叫《告别百年激进》，却不像看完《八次危机》后那样醍醐灌顶，思路清晰，限于自身理论和水平的局限，很多观点不能理解透彻，权且记录尚觉有意思的观点，以作之后回顾的纲目。</p><p><img src="https://i.loli.net/2019/12/31/o3P5BkSLdrwtyfe.png"></p><blockquote><p><a href="http://mooc.people.cn/publicCourse/index.html#/index/courseDetail?courseId=3865">前往人民网公开课</a></p></blockquote><h2 id="自序-金融全球化成本转嫁与中国生态文明战略"><a href="#自序-金融全球化成本转嫁与中国生态文明战略" class="headerlink" title="自序 金融全球化成本转嫁与中国生态文明战略"></a>自序 金融全球化成本转嫁与中国生态文明战略</h2><p>自序介绍了成书的背景，部分研究成果和观点可见《八次危机》又更详细的阐述，系统地解释了第一代领导集体推进工业化、城市化各项政策的背景和造成的结果，与主流论调不同，但却发人深省。（或者说与所学教科书所讲差别过大，初看却有重塑世界观的感觉，《八次危机》也有相关讲座，经典的可看其在重庆大学、香港大学或中山图书馆的讲座，新提法“十次危机”）</p><h2 id="第一部分-资本全球化的宏大叙事"><a href="#第一部分-资本全球化的宏大叙事" class="headerlink" title="第一部分 资本全球化的宏大叙事"></a>第一部分 资本全球化的宏大叙事</h2><h3 id="成本转嫁论（核心观点）"><a href="#成本转嫁论（核心观点）" class="headerlink" title="成本转嫁论（核心观点）"></a>成本转嫁论（核心观点）</h3><p>现今大多数发展中国家发展的内在逻辑我简单归纳成图1所示内容：</p><p><img src="https://i.loli.net/2019/12/31/1XFWtpdI2MEBfKo.png"></p><p>制度本身是派生的，社会问题与其说是“制度惹得祸”，不如深入去想，所谓的制度由何而来。<em>（客观上西方发达国家主导的三次矛盾转移——殖民地扩张、产业资本扩张、金融资本扩张——造成了发展中国家形成了所谓的现代化制度）</em></p><p><strong>“发展中国家的制度是问题，但不是发展中国家的制度问题”。</strong></p><h3 id="中国经验"><a href="#中国经验" class="headerlink" title="中国经验"></a>中国经验</h3><p>世纪之交的中国，因“生产过剩”（林毅夫认为是劳动力过剩、生产过剩双重过剩，恶性循环）而改出（调整）亲资本的政策体系。（听起来很熟悉，温老也提到过，现在中国面临的问题，其实和过去如出一辙）</p><p>中国经验即是：当时的政策部门工作不受制于海外政客和媒体高度关注的意识形态（如今政治正确在西方愈演愈烈，意识形态之争充斥着互联网），自1999年以来的10年间，中央政府用超过10万亿的国债投资带动就业（西部开发、天然林保护工程、退耕还林还草、高速公路三纵两横——2万多亿，振兴东北工业基地——1万多亿，温总理上任后中部崛起追加的2万亿，新农村建设——3万亿，大地震灾后重建——2万亿，加上2009年4万亿救市），虽然派生了许多问题，但基本上化解了双重过剩危机。</p><p>面对周期性生产过剩这一资本主义的基本矛盾，西方（即使是罗斯福新政）最终是靠战争化解危机。</p><p>萨克斯曾以在苏联推广私有化改制著称，但在解释中国经验时认为应该从集体化时期的经验入手，他认为：<strong>作为学者，首先不是强调自己观点正确，而是尊重客观现实</strong>。</p><p><strong>“要站得比意识形态高，超越价值观，才有认识客观世界的基本条件”。</strong></p><h3 id="历史经验比较"><a href="#历史经验比较" class="headerlink" title="历史经验比较"></a>历史经验比较</h3><p><strong>与文艺复兴同步的是殖民主义，包含着对几千年奴隶制的复兴。</strong>（部分知识分子在鼓吹文艺复兴的伟大历史意义时也要看到内在的问题，这不能怪西方，而是因为人类在不同生产关系下受到的环境约束，人类的战争很大程度上受到自然因素影响资源环境变化的影响）。</p><p>我们中原农耕文化“安土重迁”，似乎从来没有威胁过西方，但被中国汉唐盛世两次打败的民族渐次西迁，客观上确实造成了罗马帝国衰败灭亡和拜占庭帝国的解体，产生了不小的负面影响。</p><p>欧洲千年黑暗的中世纪，恰是中国科技文化、工商业繁荣，政府治理和文官制度最完善的时代，无疑是当时世界最发达的国家，常年对外贸易盈余，带火了阿拉伯，搞穷了欧洲小贵族、小王国。</p><p>从秦汉构建大一统的制度努力到宋代，中国人用上千年形成的维护中央政府法统治理的国家政治，就已经不是西方历史所指的封建主义制度了，不能随便就说中国至今都是由于几千年封建历史遗留的问题。</p><p>西方通过殖民化实现资本主义的原始积累之前的序曲，确实与中国有关——长期贸易逆差导致的白银外流、通货紧缩、财政危机，引发长期白银战争，才有后来的殖民掠夺。（宋明之际，基本不产银的中国白银储备却占世界60%）</p><h3 id="战后双寡头地缘控制下的雁阵式产业转移及西方主导的全球化（输入型危机的原因）"><a href="#战后双寡头地缘控制下的雁阵式产业转移及西方主导的全球化（输入型危机的原因）" class="headerlink" title="战后双寡头地缘控制下的雁阵式产业转移及西方主导的全球化（输入型危机的原因）"></a>战后双寡头地缘控制下的雁阵式产业转移及西方主导的全球化（输入型危机的原因）</h3><h3 id="当代中国市场化进程的结构性变化"><a href="#当代中国市场化进程的结构性变化" class="headerlink" title="当代中国市场化进程的结构性变化"></a>当代中国市场化进程的结构性变化</h3><p>经济、政治“地方化”：地方政府追求工业化收益而同样不承担制度成本，金融风险和投资损失最终由中央承担；地方政府促进形成了更多亲外部资本上层建筑的形成，市场经济无法平等竞争，听任外国拿走中国的钱，反过来再投资到中国占有战略产业并占有高回报。</p><p>生态文明——调整方向和出路：四个文明的提法可合并为“生态化的物质文明和政治化的精神文明”。</p><h3 id="国家竞争的“微笑曲线”"><a href="#国家竞争的“微笑曲线”" class="headerlink" title="国家竞争的“微笑曲线”"></a>国家竞争的“微笑曲线”</h3><p>全球通胀的根本原因——新币缘战略的“三角结构”（军事优势构造的政治强权、石油战略、粮食战略）。</p><p>美元霸权的币缘战略通过三角结构消纳过量增发美元，向全球转嫁巨大代价，这是全球通货膨胀的本源。</p><p>以制造业为主的新兴市场经济国家、实体经济国家，如中国，以自己国内的高通胀对冲了大量增发美元货币带来的全球通胀。美国可以借此不断增发货币，同时靠对外转嫁通胀来消纳过量增发的货币，这是金融全球化内在的经济逻辑。</p><p>亚洲地区相对而言最为稳定，源于其半数的百姓是半自足的农民生产者，使得外部风险内部化。2008年国际组织确定38个国家会发生粮荒，除中国外37个都变成了饥饿国家。</p><p>中国“高利率+低汇率”对接美国“低利率+高汇率”，导致我们成为金融资本危机代价的承载者。（金融和外汇当局都客观上在帮助美国金融资本集团对外转嫁代价）</p><p>相比于俄罗斯的资源型经济，美国的金融型经济，中国的产业型经济在金融资本全球化阶段处于底部，对处于两个上端的俄、美都吃亏，而左右两头，无论意识形态如何对立，二者利益内生性结合，相辅相成。</p><p>唯中国在国际环境上充满变数。美国一方面要求中国不“搭便车”，另一方面又绝不允许中国自己构建海外通道和资源产地的安全体系。</p><h3 id="欧债危机实属政治危机"><a href="#欧债危机实属政治危机" class="headerlink" title="欧债危机实属政治危机"></a>欧债危机实属政治危机</h3><p>加入欧元区的政治主权国家丧失了货币主权（经济主权的核心部门），一方面政治家向市民许诺更高的福利、更少干活以当选并兑现，另一方面又无法渐进地制造通货膨胀迫使百姓承担政府债务转嫁而来的通胀压力，于是不断地积累债务，无从化解。</p><p>中、美可以靠不断发行货币来减少政府债务比重。（增加分母）</p><p>美国可以强迫中国和日本这样的贸易顺差国购买其国债，转嫁“自由民主”制度的高成本，但其他国家只能依靠美国才能维持。（英、日自称永远是与美国保持紧密战略同盟的国家）</p><p>欧洲危机的本质是政府危机，是否会爆发取决于美国是否还需要这个冷战时期遗留下来的伙伴。IMF出手救希腊，很大程度因为这层关系。（美国为使“侵略”不是“侵略”，就需要这些伙伴组成“联合国军”）</p><h3 id="日本经验"><a href="#日本经验" class="headerlink" title="日本经验"></a>日本经验</h3><p>日本“衰退”（失去）的20年，却一直使日本最稳定的时期，既没有高失业，也没有社会动乱。（试想如果中国20年经济零增长的后果）</p><p>日本经验：土地均分制+高度组织化、财阀制度+企业年功制（内部化处理外部性风险的机制），东亚地缘战略中的极端实用主义（紧密结盟美国）</p><p>主权缺失条件下的实用主义对外战略——“搭便车”，节省作为主权独立国家所必须的成本，同时转嫁外向型经济的巨大代价，只需向老大支付巨额赎买成本，这也是为何日本长期居于第二，国际形象一直不错，而中国主权相对完整，成为第二就势必“被敌对”的原因。</p><p>国内稳定上坚持重农主义的基本制度，内生性地形成土地均分制派生的小农+村社为基础的内部化机制（内部化处理外部性问题的一个重要群体理性）。（中国大张旗鼓鼓励外资内商进入农村占有土地是自断稳态社会体系的一只脚）</p><p>综合商社为名的财阀垄断模式（政商结+黑社会“合法化”参与财阀合谋，共同维护着六大财阀控制全国经济，而企业年功制稳定了企业雇佣关系，长期维护员工忠诚度）</p><h3 id="全球资本主义危机"><a href="#全球资本主义危机" class="headerlink" title="全球资本主义危机"></a>全球资本主义危机</h3><p>发展中国家以薄弱的经济基础支撑发达国家最高成本的上层建筑，承担高成本的西方政治体制制造的债务危机。</p><p>主流意识形态认为具有普世价值的发达国家政治体制，如今过分强调政治正确，在发展中国家普遍缺乏基本的经济基础支撑，它在本质上不是一个代表了广大劳动群体的正常所谓关乎人权、民主的自由表达，而是中产阶级追求自己庸俗化、福利化利益的政治化表达。</p><p>对高通胀+高失业+”单一经济“国家来说，无论是否换成西方体制，无论谁当政，都解决不了霸权国家外部性危机转嫁造成的结果。</p><p>越是高福利国家，税收占比越重，如北欧福利社会主义（税收占GDP比在60%以上），莱茵社会资本主义模式国家（一般在50%左右），盎格鲁撒克逊野蛮资本主义模式的美国（在40%左右），进入21世纪中国也才达到20%，此前平均不到15%。由此来看，不能只沉迷于政治现代化想象，不论什么理论，都得先算帐，要看能否像美国那样实现对外转嫁制度成本。</p>]]></content>
      
      
      <categories>
          
          <category> notes </category>
          
          <category> books </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>如何给阿里云ecs开启ipv6访问</title>
      <link href="/!archived/%E5%A6%82%E4%BD%95%E7%BB%99%E9%98%BF%E9%87%8C%E4%BA%91ecs%E5%BC%80%E5%90%AFipv6%E8%AE%BF%E9%97%AE/"/>
      <url>/!archived/%E5%A6%82%E4%BD%95%E7%BB%99%E9%98%BF%E9%87%8C%E4%BA%91ecs%E5%BC%80%E5%90%AFipv6%E8%AE%BF%E9%97%AE/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.bobobk.com/377.html">原文地址</a></p><p>阿里云centos镜像默认是把ipv6给注释掉的，如果要开启的话需要使用IPv4 和 IPv6 双栈网络，这需要申请公测资格，不是很方便，这里我们使用tunnelbroker提供的ipv6隧道来使其支持ipv6访问。而学校电信是可以直接获取ipv6地址的，如果阿里云服务器可以ipv6访问的话就可以免费上网了。</p><h1 id="1-开启ipv6访问"><a href="#1-开启ipv6访问" class="headerlink" title="1.开启ipv6访问"></a>1.开启ipv6访问</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysctl.conf</span><br></pre></td></tr></table></figure><p>把下面这3行内容注释去掉，把1替换成0，变成下图 <img src="https://www.bobobk.com/wp-content/uploads/2019/07/ipv6.webp" alt="ipv6"> 然后使用 <em>sysctl -p</em> 重新载入，就可以支持ipv6了。</p><h1 id="2-通过tunnelbroker获得ipv6地址"><a href="#2-通过tunnelbroker获得ipv6地址" class="headerlink" title="2.通过tunnelbroker获得ipv6地址"></a>2.通过tunnelbroker获得ipv6地址</h1><p>进入<a href="https://tunnelbroker.net/">https://tunnelbroker.net</a> 注册账号，密码要复杂的不然通不过。</p><p>登陆后选择左下角的create regular tunnel，</p><p><img src="https://www.bobobk.com/wp-content/uploads/2019/07/create_tunnel.webp" alt="create_tunnel"></p><p>输入自己ecs的ip地址 注意ecs不能禁ping，否则tunnelbroker拒绝建立隧道。 <img src="https://www.bobobk.com/wp-content/uploads/2019/07/icmp_block.webp" alt="icmp_block"> 最下方点击create tunnel就建好了。 进入tunnel配置页面 <img src="https://www.bobobk.com/wp-content/uploads/2019/07/ipv6_configure-1.webp" alt="ipv6_configure"></p><h2 id="注意-此处地址必须改为阿里云的内网地址，否则外网无法连接，我的内网是172-19开头的"><a href="#注意-此处地址必须改为阿里云的内网地址，否则外网无法连接，我的内网是172-19开头的" class="headerlink" title="注意:此处地址必须改为阿里云的内网地址，否则外网无法连接，我的内网是172.19开头的"></a>注意:此处地址必须改为阿里云的内网地址，否则外网无法连接，我的内网是172.19开头的</h2><p>复制在bash下直接运行就可以了。</p><p>使用ifconfig查看网络配置，可以看到ipv6地址已经有了 <img src="https://www.bobobk.com/wp-content/uploads/2019/07/ipv6_ok.webp" alt="ipv6_ok"></p><p>此时应该已经配置成功了，可以使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -6 www.bobobk.com</span><br></pre></td></tr></table></figure><p>测试下，如果成功返回内容那么就是ipv6配置成功了</p><h1 id="3-修改nginx配置文件使网站可通过ipv6访问"><a href="#3-修改nginx配置文件使网站可通过ipv6访问" class="headerlink" title="3.修改nginx配置文件使网站可通过ipv6访问"></a>3.修改nginx配置文件使网站可通过ipv6访问</h1><p>注：如果使用cloudflare cdn的话是默认可以ipv6访问的 打开nginx配置文件，监听ipv6是[::]:80,[::]:443，修改后如下图 <img src="https://www.bobobk.com/wp-content/uploads/2019/07/nginx_ipv6.webp" alt="nginx_ipv6"></p><p>至此，所有配置都完成了。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><blockquote><p>本文从注册tunnelbroker开启ipv6开始，一步一步设置阿里云ecs 的centos7服务器，最终实现linux网系统对ipv6网站的访问。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> notes </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Elasticsearch for Java趟坑记录</title>
      <link href="/!archived/elasticsearch-for-java%E8%B6%9F%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
      <url>/!archived/elasticsearch-for-java%E8%B6%9F%E5%9D%91%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/PorYoung/Elasticsearch-for-Ocr">项目地址</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li><p>elasticsearch</p><p> 我安装的是<code>6.2.2</code>版本，刚入坑不太敢用新版本的，怕找资料麻烦，这也直接影响后续安装的插件得是<code>6.2.2</code>同是<code>6.x</code>版本的都不行</p></li><li><p>kibana <code>6.2.2</code></p><p> 方便管理elasticsearch的工具，启动后访问<code>localhost:5601</code>可以直接在控制台进行测试</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 查看健康状态，Green为正常</span><br><span class="line">GET /_cat/health?v</span><br><span class="line">GET /_cat/indices?v</span><br><span class="line">GET /_cluster/health?pretty=true</span><br><span class="line"># 如果状态是Yellow，可以进行以下设置</span><br><span class="line">PUT /_settings</span><br><span class="line">&#123;</span><br><span class="line">    &quot;index&quot; : &#123;</span><br><span class="line">        &quot;number_of_replicas&quot; : 0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>elasticsearch-analysis-ik 中文分词插件</p><p> 版本要和elasticsearch一致，即<a href="https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v5.5.1/elasticsearch-analysis-ik-6.2.2.zip">6.2.2</a></p><p> 在<code>elasticsearch</code>安装目录<code>plguins</code>下新建<code>ik</code>文件夹，解压elasticsearch-analysis-ik到<code>ik</code>文件夹</p></li><li><p>自定义词库</p><p> 我是用<a href="http://thuocl.thunlp.org/">清华开放词库</a>的开放词库，选择需要的词典拼在一起，做成<code>userdict.txt</code></p><p> 进入<code>config</code>目录，将自定义词典放在该目录下</p><p> 修改<code>IKAnalyzer.cfg.xml</code>自定义词典的路径</p><p> <code>$xslt &lt;entry key=&quot;ext_dict&quot;&gt;userdict.txt&lt;/entry&gt;</code></p><p> 重启elasticsearch</p></li></ol><h2 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h2><p>以下<code>Ocr</code>和<code>TextResult</code>为自定义的类</p><h3 id="lombok使用"><a href="#lombok使用" class="headerlink" title="lombok使用"></a>lombok使用</h3><p><a href="https://www.jianshu.com/p/20fbe45f7c08">Lombok简介</a></p><h3 id="Jest索引操作-ik中文分词设置"><a href="#Jest索引操作-ik中文分词设置" class="headerlink" title="Jest索引操作 | ik中文分词设置"></a>Jest索引操作 | ik中文分词设置</h3><p>注意<code>ik_smart</code>和<code>ik_max_words</code>区别</p><p>elasticsearch节点基本的设置已经废弃，手动设置索引级别如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable constant_">PUT</span> ocr</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;settings&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;index&quot;</span>: &#123;</span><br><span class="line">           <span class="string">&quot;number_of_shards&quot;</span>: <span class="number">1</span>,</span><br><span class="line">           <span class="string">&quot;number_of_replicas&quot;</span>: <span class="number">1</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;analysis&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;analyzer&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;ik&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;tokenizer&quot;</span>: <span class="string">&quot;ik_smart&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;doc&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;dynamic&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="string">&quot;properties&quot;</span>: &#123;</span><br><span class="line">              <span class="string">&quot;textResult&quot;</span>:&#123;</span><br><span class="line">                <span class="string">&quot;type&quot;</span>: <span class="string">&quot;nested&quot;</span>,</span><br><span class="line">                <span class="string">&quot;properties&quot;</span>: &#123;</span><br><span class="line">                  <span class="string">&quot;text&quot;</span>:&#123;</span><br><span class="line">                    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;analyzer&quot;</span>: <span class="string">&quot;ik_smart&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;search_analyzer&quot;</span>: <span class="string">&quot;ik_smart&quot;</span></span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;,</span><br><span class="line">                <span class="string">&quot;ocrText&quot;</span>: &#123;</span><br><span class="line">                  <span class="string">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">                  <span class="string">&quot;analyzer&quot;</span>: <span class="string">&quot;ik_smart&quot;</span>,</span><br><span class="line">                  <span class="string">&quot;search_analyzer&quot;</span>: <span class="string">&quot;ik_smart&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h4><p>Jest java创建索引的操作方法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> JestResult <span class="title function_">createIndexMapping</span><span class="params">(String index, String settinsJson, String mappingsJson)</span> &#123;</span><br><span class="line">    <span class="type">JestResult</span> <span class="variable">jestResult</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">CreateIndex</span> <span class="variable">createIndex</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CreateIndex</span>.Builder(index)</span><br><span class="line">                .settings(settinsJson)</span><br><span class="line">                .mappings(mappingsJson)</span><br><span class="line">                .build();</span><br><span class="line">        jestResult = jestClient.execute(createIndex);</span><br><span class="line">        log.info(<span class="string">&quot;createIndexMapping result:&#123;&#125;&quot;</span> + jestResult.isSucceeded());</span><br><span class="line">        <span class="keyword">if</span> (!jestResult.isSucceeded()) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;settingIndexMapping error:&#123;&#125;&quot;</span> + jestResult.getErrorMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> jestResult;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>settingsJson</code>和<code>mappingsJson</code>都是以上拼接好的字符串，主要分布要取<code>&quot;settings&quot;:&#123;&#125;</code>和<code>&quot;mappings&quot;:&#123;&#125;</code>内的部分</p><h4 id="判断索引是否存在"><a href="#判断索引是否存在" class="headerlink" title="判断索引是否存在"></a>判断索引是否存在</h4><p>判断索引是否存在，判断<code>result.isSucceeded()</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> JestResult <span class="title function_">indicesExists</span><span class="params">(String index)</span> &#123;</span><br><span class="line">    <span class="type">IndicesExists</span> <span class="variable">indicesExists</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IndicesExists</span>.Builder(index).build();</span><br><span class="line">    <span class="type">JestResult</span> <span class="variable">result</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        result = jestClient.execute(indicesExists);</span><br><span class="line">        log.info(<span class="string">&quot;indicesExists == &quot;</span> + result.getJsonString());</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="获取索引配置"><a href="#获取索引配置" class="headerlink" title="获取索引配置"></a>获取索引配置</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">getIndexSettings</span><span class="params">(String index)</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">JestResult</span> <span class="variable">jestResult</span> <span class="operator">=</span> jestClient.execute(<span class="keyword">new</span> <span class="title class_">GetSettings</span>.Builder().addIndex(index).build());</span><br><span class="line">        log.info(jestResult.getJsonString());</span><br><span class="line">        <span class="keyword">return</span> jestResult.isSucceeded();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="保存"><a href="#保存" class="headerlink" title="保存"></a>保存</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">save</span><span class="params">(Ocr ocr)</span> &#123;</span><br><span class="line">    <span class="type">Index</span> <span class="variable">index</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Index</span>.Builder(ocr).index(INDEX).type(TYPE).build();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">JestResult</span> <span class="variable">jestResult</span> <span class="operator">=</span> jestClient.execute(index);</span><br><span class="line">        log.info(<span class="string">&quot;save返回结果&#123;&#125;&quot;</span>, jestResult.getJsonString());</span><br><span class="line">        <span class="keyword">return</span> jestResult.isSucceeded();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        log.error(<span class="string">&quot;save异常&quot;</span>, e);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="删除索引"><a href="#删除索引" class="headerlink" title="删除索引"></a>删除索引</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> JestResult <span class="title function_">deleteIndex</span><span class="params">(String index)</span> &#123;</span><br><span class="line">    <span class="type">DeleteIndex</span> <span class="variable">deleteIndex</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DeleteIndex</span>.Builder(index).build();</span><br><span class="line">    <span class="type">JestResult</span> <span class="variable">result</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        result = jestClient.execute(deleteIndex);</span><br><span class="line">        log.info(<span class="string">&quot;deleteIndex == &quot;</span> + result.getJsonString());</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Java文件读取Json文件"><a href="#Java文件读取Json文件" class="headerlink" title="Java文件读取Json文件"></a>Java文件读取Json文件</h3><p>使用<code>Apache Commons IO</code>和<code>Alibaba FastJson</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;commons-io&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;commons-io&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.4&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;fastjson&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.2.40&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;File&gt; <span class="title function_">getFileList</span><span class="params">(String strPath, List&lt;File&gt; filelist)</span> &#123;</span><br><span class="line">    <span class="type">File</span> <span class="variable">dir</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(strPath);</span><br><span class="line">    File[] files = dir.listFiles(); <span class="comment">// 该文件目录下文件全部放入数组</span></span><br><span class="line">    <span class="keyword">if</span> (files != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; files.length; i++) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> files[i].getName();</span><br><span class="line">            <span class="keyword">if</span> (files[i].isDirectory()) &#123; <span class="comment">// 判断是文件还是文件夹</span></span><br><span class="line">                getFileList(files[i].getAbsolutePath(), filelist); <span class="comment">// 获取文件绝对路径</span></span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (fileName.endsWith(<span class="string">&quot;json&quot;</span>)) &#123; <span class="comment">// 判断文件名是否以.avi结尾</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">strFileName</span> <span class="operator">=</span> files[i].getAbsolutePath();</span><br><span class="line">                System.out.println(<span class="string">&quot;---&quot;</span> + strFileName);</span><br><span class="line">                filelist.add(files[i]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> filelist;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取Json文件</span></span><br><span class="line"><span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> 文件路径;</span><br><span class="line">List&lt;File&gt; filelist = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;File&gt;();</span><br><span class="line">Utils.getFileList(path, filelist);</span><br><span class="line"><span class="keyword">for</span> (File file : filelist) &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">input</span> <span class="operator">=</span> FileUtils.readFileToString(file, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> JSONObject.parseObject(input);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Jest搜索操作"><a href="#Jest搜索操作" class="headerlink" title="Jest搜索操作"></a>Jest搜索操作</h3><p>手动测试搜索，指令如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"># 模糊搜索</span><br><span class="line"><span class="variable constant_">GET</span> ocr/doc/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;bool&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;should&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&quot;match&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;ocrText&quot;</span>: <span class="string">&quot;$&#123;queryString&#125;&quot;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&quot;nested&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;path&quot;</span>: <span class="string">&quot;textResult&quot;</span>,</span><br><span class="line">            <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">              <span class="string">&quot;match&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;textResult.text&quot;</span>: <span class="string">&quot;$&#123;queryString&#125;&quot;</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;_source&quot;</span>: [<span class="string">&quot;ocrText&quot;</span>,<span class="string">&quot;pdfUrl&quot;</span>,<span class="string">&quot;id&quot;</span>],</span><br><span class="line">  <span class="string">&quot;highlight&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;fields&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;textResult.text&quot;</span>: &#123;&#125;,</span><br><span class="line">      <span class="string">&quot;ocrText&quot;</span>: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 详细信息</span><br><span class="line"><span class="variable constant_">GET</span> ocr/doc/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;bool&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;must&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&quot;match&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;id&quot;</span>: <span class="string">&quot;$&#123;id&#125;&quot;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&quot;nested&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;path&quot;</span>: <span class="string">&quot;textResult&quot;</span>,</span><br><span class="line">            <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">              <span class="string">&quot;match&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;textResult.text&quot;</span>: <span class="string">&quot;$&#123;wd&#125;&quot;</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&quot;inner_hits&quot;</span>:&#123;</span><br><span class="line">              <span class="string">&quot;_source&quot;</span>:[<span class="string">&quot;textResult&quot;</span>]</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;highlight&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;fields&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;textResult.text&quot;</span>: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Get-By-Id"><a href="#Get-By-Id" class="headerlink" title="Get By Id"></a>Get By Id</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Ocr <span class="title function_">get</span><span class="params">(String id)</span> &#123;</span><br><span class="line">    <span class="type">Get</span> <span class="variable">get</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Get</span>.Builder(INDEX, id).type(TYPE).build();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">JestResult</span> <span class="variable">result</span> <span class="operator">=</span> jestClient.execute(get);</span><br><span class="line">        <span class="keyword">if</span> (result.isSucceeded())</span><br><span class="line">            <span class="keyword">return</span> result.getSourceAsObject(Ocr.class);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        log.error(<span class="string">&quot;get异常&quot;</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用json搜索，包含nested搜索和获取inner-hits"><a href="#使用json搜索，包含nested搜索和获取inner-hits" class="headerlink" title="使用json搜索，包含nested搜索和获取inner_hits"></a>使用json搜索，包含nested搜索和获取inner_hits</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> SearchResult <span class="title function_">jsonSearch</span><span class="params">(String json, String indexName, String typeName)</span> &#123;</span><br><span class="line">    <span class="type">Search</span> <span class="variable">search</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Search</span>.Builder(json).addIndex(indexName).addType(typeName).build();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> jestClient.execute(search);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        log.warn(<span class="string">&quot;index:&#123;&#125;, type:&#123;&#125;, search again!! error = &#123;&#125;&quot;</span>, indexName, typeName, e.getMessage());</span><br><span class="line">        sleep(<span class="number">100</span>);</span><br><span class="line">        <span class="keyword">return</span> jsonSearch(json, indexName, typeName);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用以上手动测试的<code>json</code>搜索</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Page&lt;Ocr&gt; <span class="title function_">query</span><span class="params">(String queryString, <span class="type">int</span> pageNo, <span class="type">int</span> size)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">queryJson</span> <span class="operator">=</span> <span class="string">&quot;&#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;  \&quot;query\&quot;: &#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;    \&quot;bool\&quot;: &#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;      \&quot;should\&quot;: [\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;        &#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;          \&quot;match\&quot;: &#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;            \&quot;ocrText\&quot;: \&quot;$&#123;queryString&#125;\&quot;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;          &#125;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;        &#125;,\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;        &#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;          \&quot;nested\&quot;: &#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;            \&quot;path\&quot;: \&quot;textResult\&quot;,\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;            \&quot;query\&quot;: &#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;              \&quot;match\&quot;: &#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;                \&quot;textResult.text\&quot;: \&quot;$&#123;queryString&#125;\&quot;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;              &#125;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;            &#125;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;          &#125;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;        &#125;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;      ]\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;    &#125;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;  &#125;,\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;  \&quot;_source\&quot;: [\&quot;ocrText\&quot;,\&quot;pdfUrl\&quot;,\&quot;id\&quot;], \n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;  \&quot;highlight\&quot;: &#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;    \&quot;fields\&quot;: &#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;      \&quot;textResult.text\&quot;: &#123;&#125;,\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;      \&quot;ocrText\&quot;: &#123;&#125;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;    &#125;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;  &#125;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&#125;&quot;</span>;</span><br><span class="line">    queryJson = queryJson.replace(<span class="string">&quot;$&#123;queryString&#125;&quot;</span>, queryString);</span><br><span class="line">    log.info(<span class="string">&quot;QueryString: &#123;&#125;&quot;</span> + queryJson);</span><br><span class="line">    <span class="type">Search</span> <span class="variable">search</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Search</span>.Builder(queryJson).addIndex(INDEX).addType(TYPE).build();</span><br><span class="line">    <span class="type">SearchResult</span> <span class="variable">searchResult</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        searchResult = jestClient.execute(search);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (searchResult.isSucceeded()) &#123;</span><br><span class="line">            List&lt;SearchResult.Hit&lt;Ocr, Void&gt;&gt; hits = searchResult.getHits(Ocr.class);</span><br><span class="line">            List&lt;Ocr&gt; ocrs = hits.stream().map(hit -&gt; &#123;</span><br><span class="line">                <span class="type">Ocr</span> <span class="variable">ocr</span> <span class="operator">=</span> hit.source;</span><br><span class="line">                Map&lt;String, List&lt;String&gt;&gt; highlight = hit.highlight;</span><br><span class="line">                <span class="keyword">if</span> (highlight.containsKey(<span class="string">&quot;ocrText&quot;</span>)) &#123;</span><br><span class="line">                    Object arr[] = highlight.get(<span class="string">&quot;ocrText&quot;</span>).toArray();</span><br><span class="line">                    List&lt;String&gt; ocrTexts = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">                    <span class="keyword">for</span> (Object o : arr) &#123;</span><br><span class="line">                        ocrTexts.add((String) o);</span><br><span class="line">                    &#125;</span><br><span class="line">                    ocr.setHlOcrText(ocrTexts);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (highlight.containsKey(<span class="string">&quot;textResult.text&quot;</span>)) &#123;</span><br><span class="line">                    Object arr[] = highlight.get(<span class="string">&quot;textResult.text&quot;</span>).toArray();</span><br><span class="line">                    List&lt;String&gt; textResults = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">                    <span class="keyword">for</span> (Object o : arr) &#123;</span><br><span class="line">                        textResults.add((String) o);</span><br><span class="line">                    &#125;</span><br><span class="line">                    ocr.setHlTextResult(textResults);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> ocr;</span><br><span class="line">            &#125;).collect(toList());</span><br><span class="line">            <span class="type">int</span> <span class="variable">took</span> <span class="operator">=</span> searchResult.getJsonObject().get(<span class="string">&quot;took&quot;</span>).getAsInt();</span><br><span class="line">            Page&lt;Ocr&gt; page = Page.&lt;Ocr&gt;builder().list(ocrs).pageNo(pageNo).size(size).total(searchResult.getTotal()).took(took).build();</span><br><span class="line">            <span class="keyword">return</span> page;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            log.warn(<span class="string">&quot;查询失败：index:&#123;&#125;, type:&#123;&#125;, error = &#123;&#125;&quot;</span>, INDEX, TYPE, searchResult.getResponseCode());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        log.error(<span class="string">&quot;执行查询失败，抛出异常：index:&#123;&#125;, type:&#123;&#125;&quot;</span>, INDEX, TYPE);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Ocr <span class="title function_">queryDetail</span><span class="params">(String id, String queryString)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">queryJson</span> <span class="operator">=</span> <span class="string">&quot;&#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;  \&quot;query\&quot;: &#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;    \&quot;bool\&quot;: &#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;      \&quot;must\&quot;: [\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;        &#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;          \&quot;match\&quot;: &#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;            \&quot;id\&quot;: \&quot;$&#123;id&#125;\&quot;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;          &#125;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;        &#125;,\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;        &#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;          \&quot;nested\&quot;: &#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;            \&quot;path\&quot;: \&quot;textResult\&quot;,\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;            \&quot;query\&quot;: &#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;              \&quot;match\&quot;: &#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;                \&quot;textResult.text\&quot;: \&quot;$&#123;queryString&#125;\&quot;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;              &#125;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;            &#125;,\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;            \&quot;inner_hits\&quot;:&#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;              \&quot;_source\&quot;:[\&quot;textResult\&quot;]\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;            &#125;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;          &#125;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;        &#125;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;      ]\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;    &#125;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;  &#125;,\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;  \&quot;highlight\&quot;: &#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;    \&quot;fields\&quot;: &#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;      \&quot;textResult.text\&quot;: &#123;&#125;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;    &#125;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;  &#125;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&#125;&quot;</span>;</span><br><span class="line">    queryJson = queryJson.replace(<span class="string">&quot;$&#123;queryString&#125;&quot;</span>, queryString);</span><br><span class="line">    queryJson = queryJson.replace(<span class="string">&quot;$&#123;id&#125;&quot;</span>, id);</span><br><span class="line">    log.info(<span class="string">&quot;QueryString: &#123;&#125;&quot;</span> + queryJson);</span><br><span class="line">    <span class="type">Search</span> <span class="variable">search</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Search</span>.Builder(queryJson).addIndex(INDEX).addType(TYPE).build();</span><br><span class="line">    <span class="type">SearchResult</span> <span class="variable">searchResult</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        searchResult = jestClient.execute(search);</span><br><span class="line">        <span class="keyword">if</span> (searchResult.isSucceeded()) &#123;</span><br><span class="line">            List&lt;SearchResult.Hit&lt;Ocr, Void&gt;&gt; hits = searchResult.getHits(Ocr.class);</span><br><span class="line">            List&lt;Ocr&gt; ocrs = hits.stream().map(hit -&gt; &#123;</span><br><span class="line">                <span class="type">Ocr</span> <span class="variable">ocr</span> <span class="operator">=</span> hit.source;</span><br><span class="line">                Map&lt;String, List&lt;String&gt;&gt; highlight = hit.highlight;</span><br><span class="line">                <span class="keyword">if</span> (highlight.containsKey(<span class="string">&quot;textResult.text&quot;</span>)) &#123;</span><br><span class="line">                    Object arr[] = highlight.get(<span class="string">&quot;textResult.text&quot;</span>).toArray();</span><br><span class="line">                    List&lt;String&gt; textResults = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">                    <span class="keyword">for</span> (Object o : arr) &#123;</span><br><span class="line">                        textResults.add((String) o);</span><br><span class="line">                    &#125;</span><br><span class="line">                    ocr.setHlTextResult(textResults);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> ocr;</span><br><span class="line">            &#125;).collect(toList());</span><br><span class="line">            <span class="comment">// 获取inner_hits</span></span><br><span class="line">            <span class="type">JsonObject</span> <span class="variable">innerHits</span> <span class="operator">=</span> searchResult.getJsonObject().get(<span class="string">&quot;hits&quot;</span>).getAsJsonObject().get(<span class="string">&quot;hits&quot;</span>).getAsJsonArray().get(<span class="number">0</span>).getAsJsonObject().get(<span class="string">&quot;inner_hits&quot;</span>).getAsJsonObject();</span><br><span class="line">            <span class="type">JsonArray</span> <span class="variable">innerHitsResultArray</span> <span class="operator">=</span> innerHits.get(<span class="string">&quot;textResult&quot;</span>).getAsJsonObject().get(<span class="string">&quot;hits&quot;</span>).getAsJsonObject().get(<span class="string">&quot;hits&quot;</span>).getAsJsonArray();</span><br><span class="line">            List&lt;TextResult&gt; textResults = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">            <span class="keyword">for</span> (JsonElement result : innerHitsResultArray) &#123;</span><br><span class="line">                <span class="type">JsonObject</span> <span class="variable">source</span> <span class="operator">=</span> result.getAsJsonObject().get(<span class="string">&quot;_source&quot;</span>).getAsJsonObject();</span><br><span class="line">                <span class="type">TextResult</span> <span class="variable">textResult</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TextResult</span>();</span><br><span class="line">                textResult.setCharNum(source.get(<span class="string">&quot;charNum&quot;</span>).getAsInt());</span><br><span class="line">                textResult.setHandwritten(source.get(<span class="string">&quot;isHandwritten&quot;</span>).getAsBoolean());</span><br><span class="line">                textResult.setLeftBottom(source.get(<span class="string">&quot;leftBottom&quot;</span>).getAsString());</span><br><span class="line">                textResult.setLeftTop(source.get(<span class="string">&quot;leftTop&quot;</span>).getAsString());</span><br><span class="line">                textResult.setRightBottom(source.get(<span class="string">&quot;rightBottom&quot;</span>).getAsString());</span><br><span class="line">                textResult.setRightTop(source.get(<span class="string">&quot;rightTop&quot;</span>).getAsString());</span><br><span class="line">                textResult.setText(source.get(<span class="string">&quot;text&quot;</span>).getAsString());</span><br><span class="line">                textResults.add(textResult);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">Ocr</span> <span class="variable">ocr</span> <span class="operator">=</span> ocrs.get(<span class="number">0</span>);</span><br><span class="line">            ocr.setTextResult(textResults);</span><br><span class="line">            <span class="keyword">return</span> ocr;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            log.error(<span class="string">&quot;执行查询失败，抛出异常：index:&#123;&#125;, type:&#123;&#125;&quot;</span>, INDEX, TYPE);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        log.error(<span class="string">&quot;执行查询失败，抛出异常：index:&#123;&#125;, type:&#123;&#125;&quot;</span>, INDEX, TYPE);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">int</span> <span class="title function_">from</span><span class="params">(<span class="type">int</span> pageNo, <span class="type">int</span> size)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (pageNo - <span class="number">1</span>) * size &lt; <span class="number">0</span> ? <span class="number">0</span> : (pageNo - <span class="number">1</span>) * size;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://i.loli.net/2019/07/14/5d2a95418c84a43268.gif" alt="预览"></p>]]></content>
      
      
      <categories>
          
          <category> articles </category>
          
      </categories>
      
      
        <tags>
            
            <tag> elasticsearch </tag>
            
            <tag> jest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySql分类统计</title>
      <link href="/!archived/mysql%E5%88%86%E7%B1%BB%E7%BB%9F%E8%AE%A1/"/>
      <url>/!archived/mysql%E5%88%86%E7%B1%BB%E7%BB%9F%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<p>表1记录物品信息，表2记录物品收藏信息，通过联表查询获取物品信息和物品收藏数。</p><p>表1：house_info <img src="https://blog.poryoung.cn/wp-content/uploads/2019/05/050519_0141_MySql1.png" alt="Image NotFound"></p><p>表2：house_collect <img src="https://blog.poryoung.cn/wp-content/uploads/2019/05/050519_0141_MySql2.png" alt="Image NotFound"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    h.house_id,</span><br><span class="line">    h.user_id,</span><br><span class="line">    h.region,</span><br><span class="line">    h.address,</span><br><span class="line">    h.price,</span><br><span class="line">    h.pet,</span><br><span class="line">    h.facility,</span><br><span class="line">    h.house_image,</span><br><span class="line">    h.house_rent_staus,</span><br><span class="line">    IFNULL( t_collect_count, <span class="number">0</span> ) <span class="keyword">AS</span> collect_count </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    house_info <span class="keyword">AS</span> h</span><br><span class="line">    <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> ( <span class="keyword">SELECT</span> c.house_id, <span class="built_in">COUNT</span>( <span class="operator">*</span> ) t_collect_count <span class="keyword">FROM</span> house_collect <span class="keyword">AS</span> c <span class="keyword">GROUP</span> <span class="keyword">BY</span> c.house_id ) t <span class="keyword">ON</span> h.house_id <span class="operator">=</span> t.house_id;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> notes </category>
          
          <category> temp </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SSE：服务器发送事件</title>
      <link href="/!archived/sse%EF%BC%9A%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8F%91%E9%80%81%E4%BA%8B%E4%BB%B6/"/>
      <url>/!archived/sse%EF%BC%9A%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8F%91%E9%80%81%E4%BA%8B%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>传统的网页都是浏览器向服务器“查询”数据，但是很多场合，最有效的方式是服务器向浏览器“发送”数据。比如，每当收到新的电子邮件，服务器就向浏览器发送一个“通知”，这要比浏览器按时向服务器查询（polling）更有效率，服务器发送事件（Server-Sent Events，简称SSE）就是为了解决这个问题，而提出的一种新API，部署在EventSource对象上。目前，除了IE，其他主流浏览器都支持。</p><p><a href="https://www.cnblogs.com/goody9807/p/4257192.html">转：SSE：服务器发送事件,使用长链接进行通讯</a></p>]]></content>
      
      
      <categories>
          
          <category> notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> http </tag>
            
            <tag> sse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ofiice中输入LaTeX公式</title>
      <link href="/!archived/ofiice%E4%B8%AD%E8%BE%93%E5%85%A5latex%E5%85%AC%E5%BC%8F/"/>
      <url>/!archived/ofiice%E4%B8%AD%E8%BE%93%E5%85%A5latex%E5%85%AC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>Ofiice已经支持直接输入LaTex公式，相应的设置方法可以参考官方文档。</p><p>同时介绍一个LaTex公式工具：识别手写和图片中的公式，转换成LaTex代码的神器<a href="https://mathpix.com/">Mathpix</a>。</p><p>参考官方说明：</p><p><a href="https://blogs.msdn.microsoft.com/murrays/2017/07/30/latex-math-in-office/">LaTeX Math in Office</a></p><p><a href="https://support.office.com/en-us/article/linear-format-equations-using-unicodemath-and-latex-in-word-2e00618d-b1fd-49d8-8cb4-8d17f25754f8?ui=en-US&rs=en-US&ad=US">Linear format equations using UnicodeMath and LaTeX in Word</a></p>]]></content>
      
      
      <categories>
          
          <category> notes </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Let’s Encrypt免费泛域名证书申请</title>
      <link href="/!archived/lets-encrypt%E5%85%8D%E8%B4%B9%E6%B3%9B%E5%9F%9F%E5%90%8D%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7/"/>
      <url>/!archived/lets-encrypt%E5%85%8D%E8%B4%B9%E6%B3%9B%E5%9F%9F%E5%90%8D%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/Neilpang/acme.sh">访问项目主页</a></p>]]></content>
      
      
      <categories>
          
          <category> notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> https </tag>
            
            <tag> lets-encrypt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MQTT + NodeJS + Weixin Small-Program</title>
      <link href="/!archived/mqtt-nodejs-weixin-small-program/"/>
      <url>/!archived/mqtt-nodejs-weixin-small-program/</url>
      
        <content type="html"><![CDATA[<p>使用NodeJS、mosca模块搭建本地HTTPS和MQTT服务器，并在微信小程序中测试连接服务器。<a href="https://github.com/PorYoung/node-mqtt-demo">Demo完整代码见Github</a></p><h2 id="MQTT协议介绍"><a href="#MQTT协议介绍" class="headerlink" title="MQTT协议介绍"></a><a href="https://cn.bing.com/">MQTT协议介绍</a></h2><h2 id="基于NodeJS的MQTT服务器搭建"><a href="#基于NodeJS的MQTT服务器搭建" class="headerlink" title="基于NodeJS的MQTT服务器搭建"></a>基于NodeJS的MQTT服务器搭建</h2><p>以下仅为本地开发环境搭建过程记录，操作系统为win10。</p><h3 id="NodeJS环境搭建"><a href="#NodeJS环境搭建" class="headerlink" title="NodeJS环境搭建"></a>NodeJS环境搭建</h3><p>NodeJS环境搭建较为简单，访问<a href="https://nodejs.org/">NodeJS官网</a>，根据系统不同选择不同方式安装。</p><h3 id="搭建HTPPS和MQTT服务器"><a href="#搭建HTPPS和MQTT服务器" class="headerlink" title="搭建HTPPS和MQTT服务器"></a>搭建HTPPS和MQTT服务器</h3><p>NodeJS可以使用<a href="https://github.com/mcollina/mosca">mosca</a>模块搭建MQTT服务器。</p><p>mosca可以单独使用，也可以和https服务器一起运行。<strong>也可以使用http服务器，但在微信小程序中，即使选择不校验域名和HTTPS，也会报错（websocket failed: Error in connection establishment: net::ERR_SSL_PROTOCOL_ERROR）</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mosca = <span class="built_in">require</span>(<span class="string">&#x27;mosca&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> https = <span class="built_in">require</span>(<span class="string">&#x27;https&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MqttServer</span> = <span class="keyword">new</span> mosca.<span class="title class_">Server</span>(&#123;</span><br><span class="line">  <span class="attr">port</span>: <span class="number">1883</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * HTTP方式</span></span><br><span class="line"><span class="comment"> * const httpServer = require(&#x27;http&#x27;).createServer((req, res) =&gt; &#123;</span></span><br><span class="line"><span class="comment">  res.end(&#x27;hello world!&#x27;);</span></span><br><span class="line"><span class="comment">&#125;).listen(3000); */</span></span><br><span class="line"><span class="comment">// HTTPS证书位置</span></span><br><span class="line"><span class="keyword">const</span> options = &#123;</span><br><span class="line">  <span class="attr">key</span>: fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;server.key&#x27;</span>),</span><br><span class="line">  <span class="attr">cert</span>: fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;server.crt&#x27;</span>)</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> httpsServer = https.<span class="title function_">createServer</span>(options, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// HTTPS服务器</span></span><br><span class="line">  res.<span class="title function_">end</span>(<span class="string">&#x27;hello world!&#x27;</span>);</span><br><span class="line">&#125;).<span class="title function_">listen</span>(<span class="number">443</span>);</span><br><span class="line"><span class="comment">//通过attachHttpServer()，使得可以从浏览器或其他方式以https端口连接MQTT服务器</span></span><br><span class="line"><span class="comment">//微信小程序连接地址（使用MQTT.js包）为：wxs://localhost</span></span><br><span class="line"><span class="title class_">MqttServer</span>.<span class="title function_">attachHttpServer</span>(httpsServer);</span><br></pre></td></tr></table></figure><h3 id="MQTT验证用户身份"><a href="#MQTT验证用户身份" class="headerlink" title="MQTT验证用户身份"></a>MQTT验证用户身份</h3><p>mosca提供<code>authenticate</code>、<code>autenticatePunlish</code>和<code>authenticateSubscribe</code>方法对连接请求进行验证，均可以被覆盖。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//连接认证，验证上传的用户名和密码与服务器保存的信息（如数据库）一致</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">User</span> = &#123;</span><br><span class="line">  <span class="attr">username</span>: <span class="string">&#x27;test&#x27;</span>,</span><br><span class="line">  <span class="attr">password</span>: <span class="string">&#x27;123456&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">authenticate</span> = (<span class="params">client, username, password, callback</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> flag = (username == <span class="title class_">User</span>.<span class="property">username</span> &amp;&amp; password == <span class="title class_">User</span>.<span class="property">password</span>);</span><br><span class="line">  <span class="keyword">if</span> (flag) client.<span class="property">user</span> = username;</span><br><span class="line">  <span class="title function_">callback</span>(<span class="literal">null</span>, flag);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//发布校验，授权可以发布&#x27;/users/user/&#x27;或者&#x27;/public/&#x27;下的主题</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">authenticatePublish</span> = (<span class="params">client, topic, payload, callback</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> t = topic.<span class="title function_">split</span>(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">  <span class="keyword">if</span> (t[<span class="number">1</span>] == <span class="string">&#x27;public&#x27;</span>) &#123;</span><br><span class="line">    <span class="title function_">callback</span>(<span class="literal">null</span>, <span class="literal">true</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (t[<span class="number">1</span>] == <span class="string">&#x27;users&#x27;</span>) &#123;</span><br><span class="line">    <span class="title function_">callback</span>(<span class="literal">null</span>, client.<span class="property">user</span> == t[<span class="number">2</span>]);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">callback</span>(<span class="literal">null</span>, <span class="literal">false</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//订阅校验，授权可以订阅&#x27;/users/user/&#x27;或者&#x27;/public/&#x27;下的主题</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">authenticateSubscribe</span> = (<span class="params">client, topic, callback</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> t = topic.<span class="title function_">split</span>(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">  <span class="keyword">if</span> (t[<span class="number">1</span>] == <span class="string">&#x27;public&#x27;</span>) &#123;</span><br><span class="line">    <span class="title function_">callback</span>(<span class="literal">null</span>, <span class="literal">true</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (t[<span class="number">1</span>] == <span class="string">&#x27;users&#x27;</span>) &#123;</span><br><span class="line">    <span class="title function_">callback</span>(<span class="literal">null</span>, client.<span class="property">user</span> == t[<span class="number">2</span>]);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">callback</span>(<span class="literal">null</span>, <span class="literal">false</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">MqttServer</span>.<span class="title function_">on</span>(<span class="string">&#x27;ready&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Mqtt Server is running...&#x27;</span>);</span><br><span class="line">  <span class="title class_">MqttServer</span>.<span class="property">authenticate</span> = authenticate;</span><br><span class="line">  <span class="title class_">MqttServer</span>.<span class="property">authorizePublish</span> = authenticatePublish;</span><br><span class="line">  <span class="title class_">MqttServer</span>.<span class="property">authorizeSubscribe</span> = authenticateSubscribe;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="监听事件"><a href="#监听事件" class="headerlink" title="监听事件"></a>监听事件</h3><p>mosca可以监听的事件参考官方文档。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//部分事件示例如下</span></span><br><span class="line"><span class="title class_">MqttServer</span>.<span class="title function_">on</span>(<span class="string">&#x27;clientConnected&#x27;</span>, <span class="function">(<span class="params">client</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;client connected:&#x27;</span>, client.<span class="property">id</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="title class_">MqttServer</span>.<span class="title function_">on</span>(<span class="string">&#x27;subscribed&#x27;</span>, <span class="function">(<span class="params">topic, client</span>) =&gt;</span> &#123; <span class="comment">//订阅</span></span><br><span class="line">  <span class="keyword">let</span> qtt = &#123;</span><br><span class="line">    <span class="attr">topic</span>: <span class="string">&#x27;/public/systemInfo&#x27;</span>,</span><br><span class="line">    <span class="attr">payload</span>: client.<span class="property">user</span> + <span class="string">&#x27; has subscribed topic: &#x27;</span> + topic</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="title class_">MqttServer</span>.<span class="title function_">publish</span>(qtt);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="title class_">MqttServer</span>.<span class="title function_">on</span>(<span class="string">&#x27;unSubscribed&#x27;</span>, <span class="function">(<span class="params">topic, client</span>) =&gt;</span> &#123; <span class="comment">//取消订阅</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;unSubscribed: &#x27;</span>, topic);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="title class_">MqttServer</span>.<span class="title function_">on</span>(<span class="string">&#x27;clientDisConnected&#x27;</span>, <span class="function">(<span class="params">client</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;client disconnected&#x27;</span>, client.<span class="property">id</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="title class_">MqttServer</span>.<span class="title function_">on</span>(<span class="string">&#x27;published&#x27;</span>, <span class="function">(<span class="params">packet, client</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> topic = packet.<span class="property">topic</span>;</span><br><span class="line">  <span class="keyword">let</span> qtt = &#123;</span><br><span class="line">    <span class="attr">topic</span>: <span class="string">&#x27;other&#x27;</span>,</span><br><span class="line">    <span class="attr">payload</span>: <span class="string">&#x27;This is server&#x27;</span></span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">switch</span>(topic)&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;test1&#x27;</span>:&#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(packet.<span class="property">payload</span>.<span class="title function_">toString</span>());</span><br><span class="line">      <span class="title class_">MqttServer</span>.<span class="title function_">publish</span>(qtt); <span class="comment">//服务器自身也会收到消息</span></span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;other&#x27;</span>:&#123;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="NodeJS搭建本地HTTPS服务器"><a href="#NodeJS搭建本地HTTPS服务器" class="headerlink" title="NodeJS搭建本地HTTPS服务器"></a>NodeJS搭建本地HTTPS服务器</h3><p>NodeJS本地启动https服务需要密钥和证书，可以使用<a href="https://www.openssl.org/source/">openssl</a>对自身签证。</p><p>Window平台可以选择其他开源平台提供的工具，如<a href="http://slproweb.com/products/Win32OpenSSL.html">http://slproweb.com/products/Win32OpenSSL.html</a>，选择32位或64位<strong>Light</strong>版（小但能用）。</p><p>安装好之后，可能需要手动配置环境变量，在<code>Path</code>中添加安装路径中的<code>bin</code>目录，即<code>openssl.exe</code>所在的目录）。</p><p>以管理员模式启动CMD，进入想要保存证书的目录，输入如下命令：(参考<a href="https://blog.csdn.net/liuniansilence/article/details/78668578">node.js在本地启动https服务</a>)。</p><ol><li>为服务器端和客户端准备公钥、私钥</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 生成服务器端私钥</span><br><span class="line">openssl genrsa -out server.key 1024</span><br><span class="line">// 生成服务器端公钥</span><br><span class="line">openssl rsa -<span class="keyword">in</span> server.key -pubout -out server.pem</span><br><span class="line">// 生成客户端私钥</span><br><span class="line">openssl genrsa -out client.key 1024</span><br><span class="line">// 生成客户端公钥</span><br><span class="line">openssl rsa -<span class="keyword">in</span> client.key -pubout -out client.pem</span><br></pre></td></tr></table></figure><ol start="2"><li>生成 CA 证书</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 生成 CA 私钥</span><br><span class="line">openssl genrsa -out ca.key 1024</span><br><span class="line">// X.509 Certificate Signing Request (CSR) Management.</span><br><span class="line">openssl req -new -key ca.key -out ca.csr</span><br><span class="line">// X.509 Certificate Data Management.</span><br><span class="line">openssl x509 -req -<span class="keyword">in</span> ca.csr -signkey ca.key -out ca.crt</span><br></pre></td></tr></table></figure><blockquote><p>第2步中的Organization Name (eg, company) [Internet Widgits Pty Ltd]: 后面生成客户端和服务器端证书的时候也需要填写，不要写成一样的</p></blockquote><ol start="3"><li>生成服务器端证书和客户端证书</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 服务器端需要向 CA 机构申请签名证书，在申请签名证书之前依然是创建自己的 CSR 文件  </span><br><span class="line">openssl req -new -key server.key -out server.csr  </span><br><span class="line">// 向自己的CA机构申请证书，签名过程需要CA的证书和私钥参与，最终颁发一个带有CA签名的证书</span><br><span class="line">openssl x509 -req -CA ca.crt -CAkey ca.key -CAcreateserial -<span class="keyword">in</span> server.csr -out server.crt</span><br><span class="line">// client 端</span><br><span class="line">openssl req -new -key client.key -out client.csr</span><br><span class="line">// client 端到 CA 签名</span><br><span class="line">openssl x509 -req -CA ca.crt -CAkey ca.key -CAcreateserial -<span class="keyword">in</span> client.csr -out client.crt</span><br></pre></td></tr></table></figure><p>完成后，所在文件夹下生成如下文件:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">├── ca.crt</span><br><span class="line">├── ca.csr</span><br><span class="line">├── ca.key</span><br><span class="line">├── ca.srl</span><br><span class="line">├── client.crt</span><br><span class="line">├── client.csr</span><br><span class="line">├── client.key</span><br><span class="line">├── client.pem</span><br><span class="line">├── server.crt</span><br><span class="line">├── server.csr</span><br><span class="line">├── server.key</span><br><span class="line">└── server.pem</span><br></pre></td></tr></table></figure><p>再使用NodeJS的<code>HTTPS</code>模块启动https服务即可，配置方法见<a href="https://www.w3cschool.cn/nodejs/85n21its.html">Node.js HTTPS</a>.</p><h3 id="微信小程序使用MQTT-js连接服务器"><a href="#微信小程序使用MQTT-js连接服务器" class="headerlink" title="微信小程序使用MQTT.js连接服务器"></a>微信小程序使用<code>MQTT.js</code>连接服务器</h3><p><a href="https://github.com/mqttjs/MQTT.js"><code>MQTT.js文档</code></a>，下载打包好的<code>MQTT.js</code>可以访问<a href="https://unpkg.com/mqtt/dist/mqtt.min.js">http://unpkg.com</a>.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mqtt = <span class="built_in">require</span>(<span class="string">&#x27;../../utils/mqtt.min.js&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> mqttOptions = &#123;</span><br><span class="line">  username,</span><br><span class="line">  password,</span><br><span class="line">  clientId</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> mqttHost = <span class="string">&#x27;wxs://localhost&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> mqttClient = mqtt.<span class="title function_">connect</span>(mqttHost, mqttOptions);</span><br><span class="line"></span><br><span class="line">mqttClient.<span class="title function_">on</span>(<span class="string">&#x27;connect&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;connect&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">mqttClient.<span class="title function_">on</span>(<span class="string">&#x27;message&#x27;</span>, <span class="keyword">function</span>(<span class="params">topic, message</span>) &#123;</span><br><span class="line">  <span class="comment">// message is Buffer</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;收到来自&#x27;</span>, topic, <span class="string">&#x27;的消息&#x27;</span>, message.<span class="title function_">toString</span>())</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">mqttClient.<span class="title function_">on</span>(<span class="string">&#x27;reconnect&#x27;</span>, <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;正在重连:&#x27;</span>, error)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">mqttClient.<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;连接失败:&#x27;</span>, error)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//以下是发布和订阅的方法，其他方法详见文档</span></span><br><span class="line">mqttClient.<span class="title function_">publish</span>(topic, message, [options], [callback]);</span><br><span class="line">mqttClient.<span class="title function_">subscribe</span>(topic/topic array/topic object, [options], [callback]);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> articles </category>
          
          <category> project </category>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> https </tag>
            
            <tag> mqtt </tag>
            
            <tag> node-js </tag>
            
            <tag> wechat-small-program </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OnlineChat - Egg+Webpack+Socket.IO</title>
      <link href="/!archived/onlinechat-eggwebpacksocket-io/"/>
      <url>/!archived/onlinechat-eggwebpacksocket-io/</url>
      
        <content type="html"><![CDATA[<p>See project <a href="https://github.com/PorYoung/allChat">PorYoung&#x2F;allChat</a>, an online chat web application based on egg.js and sockt.io.</p><h1 id="Egg-Webpack-Socket-io-Notes"><a href="#Egg-Webpack-Socket-io-Notes" class="headerlink" title="Egg + Webpack + Socket.io Notes"></a>Egg + Webpack + Socket.io Notes</h1><h2 id="Directory-Structure"><a href="#Directory-Structure" class="headerlink" title="Directory Structure"></a>Directory Structure</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">- app</span><br><span class="line">  - controller</span><br><span class="line">  - extend</span><br><span class="line">  - middleware</span><br><span class="line">  - model</span><br><span class="line">  - service</span><br><span class="line">  - public</span><br><span class="line">    - dist  /* webpack output directory */</span><br><span class="line">  - io  /* socket.io */</span><br><span class="line">    - controller</span><br><span class="line">    - middleware</span><br><span class="line">  - view</span><br><span class="line">  - router.js</span><br><span class="line">- config</span><br><span class="line">  - config.default.js</span><br><span class="line">  - plugin.js</span><br><span class="line">- build /* webpack */    </span><br><span class="line">  - src</span><br><span class="line">  - webpack.config.js</span><br><span class="line">- ...</span><br></pre></td></tr></table></figure><h2 id="Egg"><a href="#Egg" class="headerlink" title="Egg"></a>Egg</h2><h3 id="Quick-Usage"><a href="#Quick-Usage" class="headerlink" title="Quick Usage"></a>Quick Usage</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm i egg-init -g</span><br><span class="line">egg-init egg-example --type=simple</span><br><span class="line">cd egg-example</span><br><span class="line">npm i</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p>The server listens on 7001.</p><p>See <a href="https://eggjs.org/">egg</a> for more detail.</p><h3 id="Config"><a href="#Config" class="headerlink" title="Config"></a>Config</h3><h4 id="config-config-default-js-default-content"><a href="#config-config-default-js-default-content" class="headerlink" title="config/config.default.js default content"></a><code>config/config.default.js</code> default content</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="function"><span class="params">appInfo</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> config = <span class="built_in">exports</span> = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// use for cookie sign key, should change to your own and keep security</span></span><br><span class="line">  config.<span class="property">keys</span> = appInfo.<span class="property">name</span> + <span class="string">&#x27;your_keys&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// add your config here</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> config;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="middleware"><a href="#middleware" class="headerlink" title="middleware"></a>middleware</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// add your middleware</span></span><br><span class="line">config.<span class="property">middleware</span> = [<span class="string">&#x27;permission&#x27;</span>,<span class="string">&#x27;middleware2&#x27;</span>];</span><br><span class="line"><span class="comment">// your middleware config, which will be the param &#x27;options&#x27; you can access later</span></span><br><span class="line">config.<span class="property">permission</span> = &#123;</span><br><span class="line">  <span class="attr">excludeUrl</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;ALL&#x27;</span>: [<span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;/login&#x27;</span>, <span class="string">&#x27;/register&#x27;</span>],</span><br><span class="line">    <span class="string">&#x27;POST&#x27;</span>: [],</span><br><span class="line">    <span class="string">&#x27;GET&#x27;</span>: [<span class="string">&#x27;/register/checkUserid&#x27;</span>],</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="plugin"><a href="#plugin" class="headerlink" title="plugin"></a>plugin</h4><ul><li>ejs</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// egg-view-view plugin</span></span><br><span class="line">config.<span class="property">view</span> = &#123;</span><br><span class="line">  <span class="attr">mapping</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;.html&#x27;</span>: <span class="string">&#x27;ejs&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">defaultViewEngine</span>: <span class="string">&#x27;ejs&#x27;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>mongoose</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// egg-mongoose plugin, [What is egg-mongoose](https://www.npmjs.com/package/egg-mongoose)</span></span><br><span class="line">config.<span class="property">mongoose</span> = &#123;</span><br><span class="line">  <span class="attr">client</span>: &#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;mongodb://127.0.0.1/chat&#x27;</span>,</span><br><span class="line">    <span class="attr">options</span>: &#123;&#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>egg security and session</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// egg security solutions, see [egg Security](https://eggjs.org/en/core/security.html) for detail</span></span><br><span class="line"><span class="comment">// you have to send csrftoken before your request</span></span><br><span class="line">config.<span class="property">security</span> = &#123;</span><br><span class="line">  <span class="attr">csrf</span>: &#123;</span><br><span class="line">    <span class="attr">headerName</span>: <span class="string">&#x27;x-csrf-token&#x27;</span>, <span class="comment">// 通过 header 传递 CSRF token 的默认字段为 x-csrf-token</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">config.<span class="property">session</span> = &#123;</span><br><span class="line">  <span class="attr">key</span>: <span class="string">&#x27;EGG_SESS&#x27;</span>,</span><br><span class="line">  <span class="attr">maxAge</span>: <span class="number">24</span> * <span class="number">3600</span> * <span class="number">1000</span>, <span class="comment">// 1 天</span></span><br><span class="line">  <span class="attr">httpOnly</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">encrypt</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">renew</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>use <code>csrfAjax.js</code> to bind beforeSend event to ajax.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Cookies</span> <span class="keyword">from</span> <span class="string">&#x27;js-cookie&#x27;</span></span><br><span class="line"><span class="keyword">const</span> csrftoken = <span class="title class_">Cookies</span>.<span class="title function_">get</span>(<span class="string">&#x27;csrfToken&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">csrfSafeMethod</span>(<span class="params">method</span>) &#123;</span><br><span class="line">  <span class="comment">// these HTTP methods do not require CSRF protection</span></span><br><span class="line">  <span class="keyword">return</span> (<span class="regexp">/^(GET|HEAD|OPTIONS|TRACE)$/</span>.<span class="title function_">test</span>(method));</span><br><span class="line">&#125;</span><br><span class="line">$.<span class="title function_">ajaxSetup</span>(&#123;</span><br><span class="line">  <span class="attr">beforeSend</span>: <span class="keyword">function</span> (<span class="params">xhr, settings</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_">csrfSafeMethod</span>(settings.<span class="property">type</span>) &amp;&amp; !<span class="variable language_">this</span>.<span class="property">crossDomain</span>) &#123;</span><br><span class="line">      xhr.<span class="title function_">setRequestHeader</span>(<span class="string">&#x27;x-csrf-token&#x27;</span>, csrftoken);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>socket.io</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// see [egg Socket.IO](https://eggjs.org/en/tutorials/socketio.html) for detail</span></span><br><span class="line">config.<span class="property">io</span> = &#123;</span><br><span class="line">  <span class="attr">namespace</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;/allChat&#x27;</span>: &#123;</span><br><span class="line">      <span class="attr">connectionMiddleware</span>: [<span class="string">&#x27;auth&#x27;</span>],</span><br><span class="line">      <span class="attr">packetMiddleware</span>: [],</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>global config</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// define global configuration and variabels yourself</span></span><br><span class="line">config.<span class="property">appConfig</span> = &#123;</span><br><span class="line">  <span class="attr">defaultAvatarArr</span>: [<span class="string">&#x27;/public/image/default_avatar.jpg&#x27;</span>, <span class="string">&#x27;/public/image/default_avatar_1.jpg&#x27;</span>, <span class="string">&#x27;/public/image/default_avatar_2.jpg&#x27;</span>,],</span><br><span class="line">  <span class="attr">imagePublicPath</span>: <span class="string">&#x27;/public/image&#x27;</span>,</span><br><span class="line">  <span class="attr">defaultChatRoom</span>: <span class="string">&#x27;default&#x27;</span>,</span><br><span class="line">  <span class="attr">defaultChatRoomMax</span>: <span class="number">999</span>,</span><br><span class="line">  <span class="attr">messageSplitLimit</span>: <span class="number">8</span>,</span><br><span class="line">  <span class="attr">allowReconnectionTime</span>: <span class="number">10</span> * <span class="number">1000</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="Upload-File-and-Form"><a href="#Upload-File-and-Form" class="headerlink" title="Upload File and Form"></a>Upload File and Form</h3><h4 id="use-Formidable-in-egg"><a href="#use-Formidable-in-egg" class="headerlink" title="use Formidable in egg"></a>use <code>Formidable</code> in egg</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/controller/xxx.js</span></span><br><span class="line"><span class="keyword">const</span> formidable = <span class="built_in">require</span>(<span class="string">&#x27;formidable&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// It&#x27;s ok use formidable to wait the `form` end event to send response, but wrong in egg.</span></span><br><span class="line"><span class="comment">// You have to return a promise.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// handle function</span></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">formParse</span>(<span class="params">req, filename, config</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> form = <span class="keyword">new</span> formidable.<span class="title class_">IncomingForm</span>();</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    form.<span class="property">uploadDir</span> = path.<span class="title function_">join</span>(process.<span class="title function_">cwd</span>(), <span class="string">&#x27;app&#x27;</span>, config.<span class="property">appConfig</span>.<span class="property">imagePublicPath</span>);</span><br><span class="line">    form.<span class="title function_">parse</span>(req);</span><br><span class="line">    form.<span class="title function_">on</span>(<span class="string">&#x27;fileBegin&#x27;</span>, <span class="function">(<span class="params">name, file</span>) =&gt;</span> &#123;</span><br><span class="line">      file.<span class="property">name</span> = filename</span><br><span class="line">      file.<span class="property">path</span> = path.<span class="title function_">join</span>(process.<span class="title function_">cwd</span>(), <span class="string">&#x27;app&#x27;</span>, config.<span class="property">appConfig</span>.<span class="property">imagePublicPath</span>, filename)</span><br><span class="line">    &#125;)</span><br><span class="line">    form.<span class="title function_">on</span>(<span class="string">&#x27;end&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">resolve</span>(path.<span class="title function_">join</span>(config.<span class="property">appConfig</span>.<span class="property">imagePublicPath</span>, filename));</span><br><span class="line">    &#125;)</span><br><span class="line">    form.<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">reject</span>(<span class="string">&#x27;-1&#x27;</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// usage</span></span><br><span class="line"><span class="comment">// const result = await this.formParse(ctx.req, filename, config);</span></span><br></pre></td></tr></table></figure><h3 id="mongoose"><a href="#mongoose" class="headerlink" title="mongoose"></a>mongoose</h3><h4 id="use-mongoose-in-egg"><a href="#use-mongoose-in-egg" class="headerlink" title="use mongoose in egg"></a>use <code>mongoose</code> in egg</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// take login for example</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// app/model/user.js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="function"><span class="params">app</span> =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">const</span> mongoose = app.<span class="property">mongoose</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Schema</span> = mongoose.<span class="property">Schema</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">UserSchema</span> = <span class="keyword">new</span> <span class="title class_">Schema</span>(&#123;</span><br><span class="line">  <span class="attr">_id</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">unique</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// mongoose aliases</span></span><br><span class="line">    <span class="attr">alias</span>: <span class="string">&#x27;userid&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">username</span>: <span class="title class_">String</span>,</span><br><span class="line">  <span class="attr">password</span>: <span class="title class_">String</span>,</span><br><span class="line">&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// app/service/user.js</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Service</span> = <span class="built_in">require</span>(<span class="string">&#x27;egg&#x27;</span>).<span class="property">Service</span>;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserService</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Service</span> &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">findOneByUserid</span>(<span class="params">userid</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> docs = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">model</span>.<span class="property">User</span>.<span class="title function_">findOne</span>(&#123;</span><br><span class="line">      <span class="attr">_id</span>: userid,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">if</span> (docs) &#123;</span><br><span class="line">      <span class="comment">// mongoose virtuals</span></span><br><span class="line">      <span class="keyword">return</span> docs.<span class="title function_">toObject</span>(&#123;</span><br><span class="line">        <span class="attr">virtuals</span>: <span class="literal">true</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> docs;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// app/controller/user.js</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Controller</span> = <span class="built_in">require</span>(<span class="string">&#x27;egg&#x27;</span>).<span class="property">Controller</span>;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserController</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Controller</span> &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">login</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123;</span><br><span class="line">      ctx,</span><br><span class="line">      service</span><br><span class="line">    &#125; = <span class="variable language_">this</span>;</span><br><span class="line">    <span class="keyword">let</span> &#123;</span><br><span class="line">      userid,</span><br><span class="line">      password,</span><br><span class="line">      rememberMe</span><br><span class="line">    &#125; = ctx.<span class="property">request</span>.<span class="property">body</span>;</span><br><span class="line">    <span class="keyword">let</span> userinfo = <span class="keyword">await</span> service.<span class="property">user</span>.<span class="title function_">findOneByUserid</span>(userid);</span><br><span class="line">    <span class="keyword">if</span> (userinfo &amp;&amp; userinfo.<span class="property">password</span> == password) &#123;</span><br><span class="line">      ctx.<span class="property">session</span>.<span class="property">user</span> = <span class="title class_">Object</span>.<span class="title function_">assign</span>(userinfo, &#123;</span><br><span class="line">        <span class="attr">ipAddress</span>: ctx.<span class="property">request</span>.<span class="property">ip</span></span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">if</span> (rememberMe) ctx.<span class="property">session</span>.<span class="property">maxAge</span> = <span class="title function_">ms</span>(<span class="string">&#x27;30d&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span> ctx.<span class="property">body</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ctx.<span class="property">body</span> = <span class="string">&#x27;-1&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">UserController</span>;</span><br></pre></td></tr></table></figure><h4 id="or-and"><a href="#or-and" class="headerlink" title="$or, $and"></a><code>$or</code>, <code>$and</code></h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">model.<span class="title function_">find</span>(&#123;</span><br><span class="line">  <span class="attr">$or</span>:[&#123;</span><br><span class="line">    <span class="attr">criterion_1</span>: <span class="number">1</span></span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    <span class="attr">$and</span>: [&#123;</span><br><span class="line">      <span class="attr">criterion_2</span>: <span class="number">2</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      <span class="attr">criterion_3</span>: <span class="number">3</span></span><br><span class="line">    &#125;]</span><br><span class="line">  &#125;]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="alias-and-virtuals"><a href="#alias-and-virtuals" class="headerlink" title="alias and virtuals"></a><code>alias</code> and <code>virtuals</code></h4><p><a href="https://mongoosejs.com/docs/guide.html#aliases">Aliaes</a> and <a href="https://mongoosejs.com/docs/guide.html#virtuals">Virtuals</a> for more detail.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">UserSchema</span> = <span class="keyword">new</span> <span class="title class_">Schema</span>(&#123;</span><br><span class="line">    <span class="attr">_id</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">      <span class="attr">unique</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">alias</span>: <span class="string">&#x27;userid&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// you can use _id or userid in getter and setter</span></span><br><span class="line"><span class="comment">// assume `doc` is the query doc</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(doc.<span class="title function_">toObject</span>(&#123; <span class="attr">virtuals</span>: <span class="literal">true</span> &#125;)); <span class="comment">// &#123; _id: &#x27;xxx&#x27;, userid: &#x27;xxx&#x27; &#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(doc.<span class="property">userid</span>); <span class="comment">// &quot;xxx&quot;</span></span><br></pre></td></tr></table></figure><h4 id="Populate"><a href="#Populate" class="headerlink" title="Populate"></a>Populate</h4><p><a href="https://mongoosejs.com/docs/populate.html">Populate</a> for more detail. You must set <code>ref</code> to <code>_id</code>, other fields are not avalible;</p><blockquote><p>Note: ObjectId, Number, String, and Buffer are valid for use as refs. However, you should use ObjectId unless you are an advanced user and have a good reason for doing so.</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// take `User` model and `Message` model for example,</span></span><br><span class="line"><span class="comment">// which user have more than one messages,</span></span><br><span class="line"><span class="comment">// `Message` have attributes that ref to `_id` alias `userid` here.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// app/model/message.js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="function"><span class="params">app</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> mongoose = app.<span class="property">mongoose</span>;</span><br><span class="line">  <span class="keyword">const</span> <span class="title class_">Schema</span> = mongoose.<span class="property">Schema</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title class_">MessageSchema</span> = <span class="keyword">new</span> <span class="title class_">Schema</span>(&#123;</span><br><span class="line">    <span class="attr">from</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">      <span class="attr">ref</span>: <span class="string">&#x27;User&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">to</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">      <span class="attr">ref</span>: <span class="string">&#x27;User&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> mongoose.<span class="title function_">model</span>(<span class="string">&#x27;Message&#x27;</span>, <span class="title class_">MessageSchema</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// now you can access user infomation while query message</span></span><br><span class="line">  <span class="comment">// Message.find(citerion).populate(&#x27;from&#x27;,&#x27;userid username&#x27;).populate(&#x27;to&#x27;,&#x27;userid username&#x27;);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Find-by-pagination"><a href="#Find-by-pagination" class="headerlink" title="Find by pagination"></a>Find by pagination</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// in app/service/message.js</span></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">findByPagination</span>(<span class="params">criterion, limit, page</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> total = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">model</span>.<span class="property">Message</span>.<span class="title function_">count</span>(criterion);</span><br><span class="line">  <span class="keyword">const</span> totalPageNum = <span class="built_in">parseInt</span>(total / limit);</span><br><span class="line">  <span class="keyword">if</span> (page &gt; totalPageNum) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> start = limit * page;</span><br><span class="line">  <span class="keyword">const</span> queryArr = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">model</span>.<span class="property">Message</span></span><br><span class="line">    .<span class="title function_">where</span>(criterion)</span><br><span class="line">    <span class="comment">// sort by date desc</span></span><br><span class="line">    .<span class="title function_">sort</span>(&#123;</span><br><span class="line">      <span class="attr">date</span>: -<span class="number">1</span></span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">limit</span>(limit)</span><br><span class="line">    .<span class="title function_">skip</span>(start)</span><br><span class="line">    .<span class="title function_">populate</span>(<span class="string">&#x27;from&#x27;</span>,<span class="string">&#x27;userid username avatar&#x27;</span>)</span><br><span class="line">    .<span class="title function_">populate</span>(<span class="string">&#x27;to&#x27;</span>,<span class="string">&#x27;userid username avatar&#x27;</span>);</span><br><span class="line">  <span class="keyword">let</span> resArr = [];</span><br><span class="line">  queryArr.<span class="title function_">forEach</span>(<span class="function">(<span class="params">doc</span>)=&gt;</span>&#123;</span><br><span class="line">    resArr.<span class="title function_">push</span>(doc.<span class="title function_">toObject</span>(&#123;<span class="attr">virtuals</span>: <span class="literal">true</span>&#125;));</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> resArr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Helper"><a href="#Helper" class="headerlink" title="Helper"></a>Helper</h3><h4 id="get-remote-IP"><a href="#get-remote-IP" class="headerlink" title="get remote IP"></a>get remote IP</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ctx.request.ip</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// use socket.io to get ip address</span></span><br><span class="line"><span class="comment">// socket.handshake.address</span></span><br><span class="line"><span class="comment">// maybe you need to parse the IP address</span></span><br><span class="line"><span class="title function_">parseIPAddress</span>(<span class="params">ip</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (ip.<span class="title function_">indexOf</span>(<span class="string">&#x27;::ffff:&#x27;</span>) !== -<span class="number">1</span>) &#123;</span><br><span class="line">    ip = ip.<span class="title function_">substring</span>(<span class="number">7</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ip;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Socket-IO"><a href="#Socket-IO" class="headerlink" title="Socket.IO"></a>Socket.IO</h3><h4 id="use-socket-io-in-egg"><a href="#use-socket-io-in-egg" class="headerlink" title="use socket.io in egg"></a>use socket.io in egg</h4><ol><li>controller extends <code>app.controller</code></li><li>middleware</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/io/middleware/auth.js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; app, socket, logger, helper, service &#125; = ctx;</span><br><span class="line">    <span class="keyword">const</span> sid = socket.<span class="property">id</span>;</span><br><span class="line">    <span class="keyword">const</span> nsp = app.<span class="property">io</span>.<span class="title function_">of</span>(<span class="string">&#x27;/allChat&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> query = socket.<span class="property">handshake</span>.<span class="property">query</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="get-socketid"><a href="#get-socketid" class="headerlink" title="get socketid"></a>get socketid</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// by the socket object, get the connector id</span></span><br><span class="line"><span class="keyword">const</span> sid = socket.<span class="property">id</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// get online user socketid in room by the namespace adapter, except current connector id</span></span><br><span class="line">nsp.<span class="property">adapter</span>.<span class="title function_">clients</span>(rooms, <span class="function">(<span class="params">err, clients</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//clients is an socketid arrs</span></span><br><span class="line">  logger.<span class="title function_">info</span>(<span class="string">&#x27;#online&#x27;</span>, clients);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="disconnect-or-refresh-event"><a href="#disconnect-or-refresh-event" class="headerlink" title="disconnect or refresh event"></a>disconnect or refresh event</h4><p>When user refresh current page in browser, it will trigger disconnection and leave event, then the join event. Try to use a <code>timer</code>(<strong>setTimeout function</strong>) to solve this problem, but it might not be a good solution.</p><p>See <a href="https://github.com/PorYoung/allChat/blob/master/app/io/middleware/auth.js">auth.js</a>.</p><h4 id="send-message-to-users-in-room"><a href="#send-message-to-users-in-room" class="headerlink" title="send message to users in room"></a>send message to users in room</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">socket.<span class="title function_">to</span>(room).<span class="title function_">emit</span>(<span class="string">&#x27;room_message&#x27;</span>, message);</span><br></pre></td></tr></table></figure><h4 id="send-private-message-to-user"><a href="#send-private-message-to-user" class="headerlink" title="send private message to user"></a>send private message to user</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// sender</span></span><br><span class="line"><span class="keyword">let</span> userinfo = <span class="keyword">await</span> service.<span class="property">user</span>.<span class="title function_">findOneByUserid</span>(ctx.<span class="property">session</span>.<span class="property">user</span>.<span class="property">userid</span>);</span><br><span class="line">message.<span class="property">from</span> = &#123;</span><br><span class="line">  <span class="attr">userid</span>: userinfo.<span class="property">userid</span>,</span><br><span class="line">  <span class="attr">username</span>: userinfo.<span class="property">username</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// receiver</span></span><br><span class="line"><span class="keyword">let</span> toUserinfo = <span class="keyword">await</span> service.<span class="property">user</span>.<span class="title function_">findOneByUserid</span>(message.<span class="property">to</span>);</span><br><span class="line"><span class="keyword">if</span> (!toUserinfo) &#123;</span><br><span class="line">  socket.<span class="title function_">emit</span>(socket.<span class="property">id</span>, helper.<span class="title function_">parseMsg</span>(<span class="string">&#x27;warning&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>,</span><br><span class="line">    <span class="attr">content</span>: <span class="string">&#x27;该用户不见了=_=!&#x27;</span>,</span><br><span class="line">  &#125;));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  message.<span class="property">to</span> = &#123;</span><br><span class="line">    <span class="attr">userid</span>: toUserinfo.<span class="property">userid</span>,</span><br><span class="line">    <span class="attr">username</span>: toUserinfo.<span class="property">username</span>,</span><br><span class="line">    <span class="attr">socketid</span>: toUserinfo.<span class="property">socketid</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">let</span> messageParsed = helper.<span class="title function_">parseMsg</span>(<span class="string">&#x27;private_message&#x27;</span>, message);</span><br><span class="line">  socket.<span class="title function_">to</span>(message.<span class="property">to</span>.<span class="property">socketid</span>).<span class="title function_">emit</span>(message.<span class="property">to</span>.<span class="property">socketid</span>, messageParsed);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="use-socket-io-in-front-end"><a href="#use-socket-io-in-front-end" class="headerlink" title="use socket.io in front end"></a>use socket.io in front end</h4><p>instead of <code>&lt;script src=&quot;/socket.io/socket.io.js&quot;&gt;&lt;/scrupt&gt;</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> socketClient = <span class="built_in">require</span>(<span class="string">&#x27;socket.io-client&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> allChat = <span class="title function_">socketClient</span>(config.<span class="property">host</span>.<span class="title function_">concat</span>(<span class="string">&#x27;/allChat&#x27;</span>), &#123;</span><br><span class="line">  <span class="attr">query</span>: &#123;</span><br><span class="line">    <span class="attr">room</span>: config.<span class="property">socket</span>.<span class="property">room</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">transports</span>: [<span class="string">&#x27;websocket&#x27;</span>],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">allChat.<span class="title function_">on</span>(<span class="string">&quot;connect&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> sid = allChat.<span class="property">id</span>;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;#connected&#x27;</span>, sid, allChat);</span><br><span class="line">  <span class="comment">// 监听自身 id 以实现 p2p 通讯</span></span><br><span class="line">  allChat.<span class="title function_">on</span>(sid, <span class="function"><span class="params">msg</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;#receive,&#x27;</span>, msg);</span><br><span class="line">    <span class="keyword">switch</span> (msg.<span class="property">data</span>.<span class="property">action</span>) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;deny&#x27;</span>:</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;welcome&#x27;</span>:</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;warning&#x27;</span>:</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;private_message&#x27;</span>:</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 系统事件</span></span><br><span class="line">allChat.<span class="title function_">on</span>(<span class="string">&#x27;disconnect&#x27;</span>, <span class="function"><span class="params">msg</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;#disconnect&#x27;</span>, msg);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">allChat.<span class="title function_">on</span>(<span class="string">&#x27;disconnecting&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;#disconnecting&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">allChat.<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;#error&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h4><ol><li><p>the <code>socktid</code> get from <code>Namespace.adapter.clients</code> contain the room <code>#room</code> at the head.</p></li><li><p>get room the current connector joined, <code>Object.keys(socket.rooms)[0];</code></p></li></ol><h2 id="Webpack-4-0"><a href="#Webpack-4-0" class="headerlink" title="Webpack 4.0"></a>Webpack 4.0</h2><p>you can use <code>egg-webpack</code> in egg or use <code>webpack-cli</code>.</p><p>see <a href="https://github.com/PorYoung/allChat/blob/master/build/webpack.config.js">webpack.config.js</a>.</p><h3 id="spiltChunks"><a href="#spiltChunks" class="headerlink" title="spiltChunks"></a>spiltChunks</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">optimization</span>: &#123;</span><br><span class="line">  <span class="attr">splitChunks</span>: &#123;</span><br><span class="line">    <span class="attr">cacheGroups</span>: &#123;</span><br><span class="line">      <span class="attr">common</span>: &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;common&quot;</span>,</span><br><span class="line">        <span class="attr">chunks</span>: <span class="string">&quot;all&quot;</span>,</span><br><span class="line">        <span class="attr">minSize</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">priority</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">minChunks</span>: <span class="number">2</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">vendors</span>: &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;vendors&quot;</span>,</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/[\\/]node_modules[\\/]/</span>,</span><br><span class="line">        <span class="attr">chunks</span>: <span class="string">&quot;all&quot;</span>,</span><br><span class="line">        <span class="attr">priority</span>: <span class="number">10</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="extract-text-webpack-plugin"><a href="#extract-text-webpack-plugin" class="headerlink" title="extract-text-webpack-plugin"></a>extract-text-webpack-plugin</h3><p>to support webpack 4.0, install <code>extract-text-webpack-plugin@next</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//module rules</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">test</span>: <span class="regexp">/\.css/</span>,</span><br><span class="line">  <span class="attr">use</span>: <span class="title class_">ExtractTextPlugin</span>.<span class="title function_">extract</span>(&#123;</span><br><span class="line">    <span class="attr">fallback</span>: <span class="string">&#x27;style-loader&#x27;</span>,</span><br><span class="line">    <span class="attr">use</span>: [<span class="string">&#x27;css-loader&#x27;</span>]</span><br><span class="line">  &#125;),</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">test</span>: <span class="regexp">/\.(less)/</span>,</span><br><span class="line">  <span class="attr">use</span>: <span class="title class_">ExtractTextPlugin</span>.<span class="title function_">extract</span>(&#123;</span><br><span class="line">    <span class="attr">fallback</span>: <span class="string">&#x27;style-loader&#x27;</span>,</span><br><span class="line">    <span class="attr">use</span>: [&#123;</span><br><span class="line">        <span class="attr">loader</span>: <span class="string">&#x27;css-loader&#x27;</span>,</span><br><span class="line">        <span class="attr">options</span>: &#123;</span><br><span class="line">          <span class="attr">alias</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;@&#x27;</span>: path.<span class="title function_">resolve</span>(staticPath, <span class="string">&#x27;image&#x27;</span>) <span class="comment">// &#x27;~@/logo.png&#x27; 这种写法，会去找src/img/logo.png这个文件</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&#x27;postcss-loader&#x27;</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">loader</span>: <span class="string">&#x27;less-loader&#x27;</span>,</span><br><span class="line">        <span class="attr">options</span>: &#123;</span><br><span class="line">          <span class="attr">lessPlugins</span>: [</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">LessPluginCleanCSS</span>(&#123;</span><br><span class="line">              <span class="attr">advanced</span>: <span class="literal">true</span>,</span><br><span class="line">            &#125;),</span><br><span class="line">          ],</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;),</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">ExtractTextPlugin</span>(&#123;</span><br><span class="line">  <span class="attr">filename</span>: <span class="string">&#x27;css/[name].bundle-[hash].css&#x27;</span>,</span><br><span class="line">&#125;),</span><br></pre></td></tr></table></figure><h3 id="import-jquery"><a href="#import-jquery" class="headerlink" title="import jquery"></a>import jquery</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> webpack.<span class="title class_">ProvidePlugin</span>(&#123;</span><br><span class="line">    <span class="string">&quot;$&quot;</span>: <span class="string">&quot;jquery&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jQuery&quot;</span>: <span class="string">&quot;jquery&quot;</span>,</span><br><span class="line">    <span class="string">&quot;window.jQuery&quot;</span>: <span class="string">&quot;jquery&quot;</span>,</span><br><span class="line">    <span class="comment">// underscore</span></span><br><span class="line">    <span class="string">&quot;_&quot;</span>: <span class="string">&#x27;underscore&#x27;</span></span><br><span class="line">  &#125;),</span><br></pre></td></tr></table></figure><h2 id="Utils"><a href="#Utils" class="headerlink" title="Utils"></a>Utils</h2><h3 id="TouchEvent"><a href="#TouchEvent" class="headerlink" title="TouchEvent"></a>TouchEvent</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myTouchEvent = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> swip_time = <span class="number">300</span>,</span><br><span class="line">    swip_dis = <span class="number">30</span>,</span><br><span class="line">    point_start,</span><br><span class="line">    point_end,</span><br><span class="line">    time_start,</span><br><span class="line">    time_end,</span><br><span class="line">    <span class="comment">//1 上 2 右 3 下 4左</span></span><br><span class="line">    result;</span><br><span class="line">  <span class="keyword">if</span> (<span class="string">&quot;ontouchstart&quot;</span> <span class="keyword">in</span> <span class="variable language_">window</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> startEvt = <span class="string">&quot;touchstart&quot;</span>,</span><br><span class="line">      moveEvt = <span class="string">&quot;touchmove&quot;</span>,</span><br><span class="line">      endEvt = <span class="string">&quot;touchend&quot;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> startEvt = <span class="string">&quot;mousedown&quot;</span>,</span><br><span class="line">      moveEvt = <span class="string">&quot;mousemove&quot;</span>,</span><br><span class="line">      endEvt = <span class="string">&quot;mouseup&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> getPos = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> touches = e.<span class="property">touches</span>;</span><br><span class="line">    <span class="keyword">if</span> (touches &amp;&amp; touches[<span class="number">0</span>]) &#123;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">x</span>: touches[<span class="number">0</span>].<span class="property">clientX</span>,</span><br><span class="line">        <span class="attr">y</span>: touches[<span class="number">0</span>].<span class="property">clientY</span></span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">x</span>: e.<span class="property">clientX</span>,</span><br><span class="line">      <span class="attr">y</span>: e.<span class="property">clientY</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> getDistance = <span class="keyword">function</span> (<span class="params">p1, p2</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">parseInt</span>(<span class="title class_">Math</span>.<span class="title function_">sqrt</span>(<span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="title class_">Math</span>.<span class="title function_">abs</span>(p1.<span class="property">x</span> - p2.<span class="property">x</span>), <span class="number">2</span>) + <span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="title class_">Math</span>.<span class="title function_">abs</span>(p1.<span class="property">y</span> - p2.<span class="property">y</span>), <span class="number">2</span>)));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> getDirection = <span class="keyword">function</span> (<span class="params">p1, p2</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> angle = <span class="title class_">Math</span>.<span class="title function_">atan2</span>(p1.<span class="property">y</span> - p2.<span class="property">y</span>, p2.<span class="property">x</span> - p1.<span class="property">x</span>) * <span class="number">180</span> / <span class="title class_">Math</span>.<span class="property">PI</span>;</span><br><span class="line">    <span class="keyword">if</span> (angle &lt;= <span class="number">45</span> &amp;&amp; angle &gt;= -<span class="number">45</span>) <span class="keyword">return</span> <span class="string">&quot;right&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (angle &gt;= <span class="number">45</span> &amp;&amp; angle &lt;= <span class="number">135</span>) <span class="keyword">return</span> <span class="string">&quot;up&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (angle &gt;= <span class="number">135</span> || angle &lt;= -<span class="number">135</span>) <span class="keyword">return</span> <span class="string">&quot;left&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (angle &lt;= -<span class="number">45</span> &amp;&amp; angle &gt;= -<span class="number">135</span>) <span class="keyword">return</span> <span class="string">&quot;down&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> startEvtHandle = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> pos = <span class="title function_">getPos</span>(e);</span><br><span class="line">    <span class="keyword">var</span> touches = e.<span class="property">touches</span>;</span><br><span class="line">    <span class="keyword">if</span> (!touches || touches.<span class="property">length</span> == <span class="number">1</span>) &#123;</span><br><span class="line">      point_start = <span class="title function_">getPos</span>(e);</span><br><span class="line">      time_start = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//显示刷新图标</span></span><br><span class="line">    $(<span class="string">&quot;#notification&quot;</span>).<span class="title function_">css</span>(&#123;</span><br><span class="line">      <span class="attr">height</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">overflow</span>: <span class="string">&quot;hidden&quot;</span></span><br><span class="line">    &#125;).<span class="title function_">html</span>(<span class="string">&quot;&lt;i class=&#x27;fa fa-spinner fa-pulse fa-2x fa-fw&#x27;&gt;&lt;/i&gt;&lt;span class=&#x27;sr-only&#x27;&gt;释放加载更多&lt;/span&gt;&quot;</span>).<span class="title function_">show</span>();</span><br><span class="line">    point_end = pos;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> transformYPre = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">var</span> moveEvtHandle = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">    point_end = <span class="title function_">getPos</span>(e);</span><br><span class="line">    <span class="keyword">var</span> y = point_end.<span class="property">y</span> - point_start.<span class="property">y</span>;</span><br><span class="line">    <span class="keyword">if</span> (y &gt; <span class="number">0</span> &amp;&amp; y &gt; <span class="number">80</span>) &#123;</span><br><span class="line">      y = <span class="number">80</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (y &lt; <span class="number">0</span>) &#123;</span><br><span class="line">      y = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    transformYPre += y - transformYPre;</span><br><span class="line">    $(<span class="string">&quot;#listPanel&quot;</span>).<span class="title function_">css</span>(&#123;</span><br><span class="line">      <span class="attr">transition</span>: <span class="string">&quot;all 1s&quot;</span>,</span><br><span class="line">      <span class="attr">transform</span>: <span class="string">&quot;translate3d(0,&quot;</span> + transformYPre + <span class="string">&quot;px,0)&quot;</span></span><br><span class="line">    &#125;)</span><br><span class="line">    $(<span class="string">&quot;#notification&quot;</span>).<span class="title function_">css</span>(&#123;</span><br><span class="line">      <span class="attr">transition</span>: <span class="string">&quot;all 1s&quot;</span>,</span><br><span class="line">      <span class="attr">height</span>: transformYPre + <span class="string">&quot;px&quot;</span>,</span><br><span class="line">      <span class="attr">lineHeight</span>: transformYPre + <span class="string">&quot;px&quot;</span></span><br><span class="line">    &#125;)</span><br><span class="line">    e.<span class="title function_">preventDefault</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> endEvtHandle = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">    time_end = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>();</span><br><span class="line">    <span class="keyword">var</span> dis = <span class="title function_">getDistance</span>(point_start, point_end);</span><br><span class="line">    <span class="keyword">var</span> time = time_end - time_start;</span><br><span class="line">    <span class="comment">//构成滑动事件</span></span><br><span class="line">    <span class="keyword">if</span> (dis &gt;= swip_dis &amp;&amp; time &gt;= swip_time) &#123;</span><br><span class="line">      <span class="keyword">var</span> dir = <span class="title function_">getDirection</span>(point_start, point_end),</span><br><span class="line">        disY = point_end.<span class="property">y</span> - point_start.<span class="property">y</span>,</span><br><span class="line">        disX = point_end.<span class="property">x</span> - point_start.<span class="property">x</span>;</span><br><span class="line">      <span class="keyword">if</span> (disY &gt;= <span class="number">80</span> &amp;&amp; dir == <span class="string">&quot;down&quot;</span>) &#123;</span><br><span class="line">        result = <span class="number">3</span>;</span><br><span class="line">        <span class="comment">//下拉行为有效</span></span><br><span class="line">        <span class="title function_">loadMessage</span>(++page);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;加载中&#x27;</span>);</span><br><span class="line">        <span class="comment">//加载完成后释放 等待30s</span></span><br><span class="line">        <span class="keyword">var</span> timer = <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">          <span class="keyword">if</span> (loadMessageFlag) &#123;</span><br><span class="line">            $(<span class="string">&quot;#listPanel&quot;</span>).<span class="title function_">css</span>(&#123;</span><br><span class="line">              <span class="attr">transition</span>: <span class="string">&quot;all 1s&quot;</span>,</span><br><span class="line">              <span class="attr">transform</span>: <span class="string">&quot;translate3d(0,0,0)&quot;</span></span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="comment">//显示加载成功</span></span><br><span class="line">            <span class="keyword">if</span> (loadMessageFlag == <span class="number">1</span>) $(<span class="string">&quot;#notification&quot;</span>).<span class="title function_">html</span>(<span class="string">&quot;&lt;i class=&#x27;fa fa-check-circle-o fa-2x fa-fw&#x27; style=&#x27;color: #00EE00&#x27;&gt;&lt;/i&gt;&lt;span class=&#x27;sr-only&#x27;&gt;Success&lt;/span&gt;&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (loadMessageFlag == <span class="number">2</span>) $(<span class="string">&quot;#notification&quot;</span>).<span class="title function_">html</span>(<span class="string">&quot;没有更多消息了=_=&quot;</span>);</span><br><span class="line">            loadMessageFlag = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">              $(<span class="string">&quot;#notification&quot;</span>).<span class="title function_">css</span>(&#123;</span><br><span class="line">                <span class="attr">height</span>: <span class="string">&quot;30px&quot;</span>,</span><br><span class="line">                <span class="attr">lineHeight</span>: <span class="string">&quot;30px&quot;</span></span><br><span class="line">              &#125;).<span class="title function_">html</span>(<span class="string">&quot;&quot;</span>).<span class="title function_">hide</span>();</span><br><span class="line">              <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">            &#125;, <span class="number">300</span>);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//30s后停止</span></span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">          <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">          <span class="comment">//显示加载失败</span></span><br><span class="line">          $(<span class="string">&quot;#notification&quot;</span>).<span class="title function_">html</span>(<span class="string">&quot;&lt;i class=&#x27;fa fa-remove fa-4x fa-fw&#x27; style=&#x27;color: #00EE00&#x27;&gt;&lt;/i&gt;&lt;span class=&#x27;sr-only&#x27;&gt;Failed&lt;/span&gt;&quot;</span>);</span><br><span class="line">          loadMessageFlag = <span class="literal">false</span>;</span><br><span class="line">          <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            $(<span class="string">&quot;#notification&quot;</span>).<span class="title function_">css</span>(&#123;</span><br><span class="line">              <span class="attr">height</span>: <span class="string">&quot;30px&quot;</span>,</span><br><span class="line">              <span class="attr">lineHeight</span>: <span class="string">&quot;30px&quot;</span></span><br><span class="line">            &#125;).<span class="title function_">html</span>(<span class="string">&quot;&quot;</span>).<span class="title function_">hide</span>();</span><br><span class="line">          &#125;, <span class="number">300</span>);</span><br><span class="line">        &#125;, <span class="number">31000</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (disX &gt;= <span class="number">80</span> &amp;&amp; dir == <span class="string">&quot;right&quot;</span>) &#123;</span><br><span class="line">        result = <span class="number">2</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (disX &lt; -<span class="number">30</span> &amp;&amp; dir == <span class="string">&quot;left&quot;</span>) &#123;</span><br><span class="line">        result = <span class="number">4</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (disY &lt; -<span class="number">30</span> &amp;&amp; dir == <span class="string">&quot;up&quot;</span>) &#123;</span><br><span class="line">        $(<span class="string">&quot;#listPanel&quot;</span>).<span class="title function_">scrollTop</span>(<span class="built_in">parseInt</span>(<span class="title class_">Math</span>.<span class="title function_">abs</span>(point_end.<span class="property">y</span> - point_start.<span class="property">y</span>)));</span><br><span class="line">        result = <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      $(<span class="string">&quot;#listPanel&quot;</span>).<span class="title function_">css</span>(&#123;</span><br><span class="line">        <span class="attr">transition</span>: <span class="string">&quot;all 1s&quot;</span>,</span><br><span class="line">        <span class="attr">transform</span>: <span class="string">&quot;translate3d(0,0,0)&quot;</span></span><br><span class="line">      &#125;).<span class="title function_">animate</span>(&#123;</span><br><span class="line">        <span class="attr">scrollTop</span>: <span class="string">&#x27;30px&#x27;</span></span><br><span class="line">      &#125;, <span class="number">300</span>);</span><br><span class="line">      $(<span class="string">&quot;#notification&quot;</span>).<span class="title function_">css</span>(&#123;</span><br><span class="line">        <span class="attr">height</span>: <span class="string">&quot;30px&quot;</span>,</span><br><span class="line">        <span class="attr">lineHeight</span>: <span class="string">&quot;30px&quot;</span></span><br><span class="line">      &#125;).<span class="title function_">html</span>(<span class="string">&quot;&quot;</span>).<span class="title function_">hide</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  $(<span class="string">&quot;#listPanel&quot;</span>).<span class="title function_">on</span>(startEvt, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> ($(<span class="variable language_">this</span>).<span class="title function_">scrollTop</span>() &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="title function_">startEvtHandle</span>(e);</span><br><span class="line">      $(<span class="variable language_">this</span>).<span class="title function_">on</span>(moveEvt, moveEvtHandle);</span><br><span class="line">      $(<span class="variable language_">this</span>).<span class="title function_">on</span>(endEvt, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="title function_">endEvtHandle</span>(e);</span><br><span class="line">        $(<span class="variable language_">this</span>).<span class="title function_">off</span>(moveEvt).<span class="title function_">off</span>(endEvt);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Scroll-To-Bottom"><a href="#Scroll-To-Bottom" class="headerlink" title="Scroll To Bottom"></a>Scroll To Bottom</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">scrollToBottom</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> scrollHeight = $(<span class="string">&quot;#listPanel&quot;</span>)[<span class="number">0</span>].<span class="property">scrollHeight</span> - $(<span class="string">&quot;#listPanel&quot;</span>)[<span class="number">0</span>].<span class="property">clientHeight</span>;</span><br><span class="line">  $(<span class="string">&quot;#listPanel&quot;</span>).<span class="title function_">animate</span>(&#123;</span><br><span class="line">    <span class="attr">scrollTop</span>: scrollHeight</span><br><span class="line">  &#125;, <span class="number">300</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> articles </category>
          
          <category> project </category>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
            <tag> node-js </tag>
            
            <tag> egg </tag>
            
            <tag> mongoose </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10 TensorFlow GPU环境搭建记录</title>
      <link href="/!archived/win10-tensorflow-gpu%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/"/>
      <url>/!archived/win10-tensorflow-gpu%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="win10-TensorFlow-GPU环境搭建记录"><a href="#win10-TensorFlow-GPU环境搭建记录" class="headerlink" title="win10 TensorFlow GPU环境搭建记录"></a>win10 TensorFlow GPU环境搭建记录</h1><blockquote><p>By PorYoung 2018-10-17 <a href="https://blog.csdn.net/qq_36624899/article/details/83118989">在CSDN查看</a></p></blockquote><h2 id="机器配置"><a href="#机器配置" class="headerlink" title="机器配置"></a>机器配置</h2><ul><li>win 10(64bit)</li><li>GTX 960m</li></ul><h2 id="本次搭建所需文件"><a href="#本次搭建所需文件" class="headerlink" title="本次搭建所需文件"></a>本次搭建所需文件</h2><ul><li>VS2017</li><li>CUDA</li><li>cuDNN</li><li>Anaconda</li></ul><h2 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h2><ol><li><p>安装（已安装则选择修改单个组件）并配置vs2017，添加如下组件：</p><ul><li><p>VC++ 2017版本 15.4 v14.11工具集</p></li><li><p>用于CMake的Visual C++工具</p></li><li><p>适用于桌面的VC++ 2015.3 V14.00(V140)工具集</p><ul><li>首次安装CUDA时出现Visual Studio Integration无法安装，添加该组建后重新安装成功，不知道是不是受它的影响</li></ul></li></ul></li><li><p>安装Anaconda</p><ol><li><p>Anaconda包含了conda、Python等180多个科学包及其依赖项，功能十分强大</p></li><li><p><a href="https://www.anaconda.com/download/">下载地址：https://www.anaconda.com/download/</a></p></li><li><p>此处选择了Python <code>3.7</code>版本</p><ol><li>后来发现目前Tensorflow不支持pythob <code>3.7</code>版本，在安装Tensorflow时会提示找不到包</li><li>此外，安装部分版本不兼容的CUDA、cuDNN也会导致安装失败</li><li><a href="https://github.com/fo40225/tensorflow-windows-wheel">对应版本解决方案：https://github.com/fo40225/tensorflow-windows-wheel</a>，查看大神编译的各种版本tensorflow的地址，此次配置的为蓝色框线内的版本，Anaconda可以在后续修改环境为python <code>3.6</code> <img src="https://img-blog.csdn.net/20181017224013177?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NjI0ODk5/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"></li></ol></li><li><p>安装</p><ul><li>第一项可选可不选，不选的话需要自行配置环境变量 <img src="https://img-blog.csdn.net/20181017224100177?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NjI0ODk5/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"></li><li>第一项未选需要配置的环境变量 <img src="https://img-blog.csdn.net/20181017224113288?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NjI0ODk5/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"></li></ul></li></ol></li><li><p>安装CUDA（<strong>注意版本</strong>:exclamation:）</p><ol><li><p>安装前注意</p><ol><li>GTX 960m运算能力为<code>5.0</code>，本次选择最新<code>v10.0</code></li><li>网上许多资料都表示存在tensorflow、CUDA和cuDNN版本不兼容无法支持等问题，未一一测试，均选择当时最新版本。比较谨慎的，可以参考相关博文。</li></ol></li><li><p><a href="https://developer.nvidia.com/cuda-gpus">查看显卡支持：https://developer.nvidia.com/cuda-gpus</a></p></li><li><p><a href="https://developer.nvidia.com/cuda-toolkit-archive">选择对应版本下载：https://developer.nvidia.com/cuda-toolkit-archive</a></p></li><li><p>安装</p><ol><li>选择自定义安装</li><li>一般不需要安装GeForce Experience</li></ol></li><li><p>安装可能存在的问题</p><ol><li>Visual Studio Intergration无法安装 &gt; 可能的解决方法 &gt; 1. 参考安装VS2017的过程，可能缺少组件 &gt; 2. <a href="https://blog.csdn.net/zzpong/article/details/80282814">参考教程：CUDA安装失败解决方法</a></li></ol></li></ol></li><li><p>下载cuDNN（<strong>注意版本</strong>:exclamation:），需要注册</p><ol><li><a href="https://developer.nvidia.com/rdp/cudnn-download">下载链接：https://developer.nvidia.com/rdp/cudnn-download</a></li><li>此处选择和<code>CUDA v10.0</code>搭配的<code>cudnn-10.0-windows10-x64-v7.3.1.20</code></li><li>解压到<code>CUDA</code>安装根目录，共三个文件夹：<code>bin</code>、<code>include</code>、<code>lib</code></li></ol></li><li><p>安装Tensorflow运行环境</p><ol><li><p>打开Anaconda prompt</p></li><li><p>配置清华仓库镜，输入指令: <code>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ conda config --set show_channel_urls yes</code></p></li><li><p>创建运行环境，名称为tensorflow-gpu，python版本为<code>3.6</code> <code>conda create -n tensorflow-gpu python=3.6</code> 名称作为与其他环境隔离的标志，版本可自行更换</p></li><li><p>激活并进入该环境 <code>activate tensorflow-gpu</code> 其他指令可以参考Anaconda教程</p></li><li><p>升级pip <code>python -m pip install --upgrade pip</code></p></li><li><p>安装相关依赖包</p><ul><li>如果确定所安装的版本兼容，可以直接安装 <code>pip install --ignore-installed --upgrade tensorflow-gpu</code></li><li>如果使用的是编译的tensorflow版本则需要进入下载目录进行安装，如进入<code>D:\Files</code>目录，有从github下载的编译版本<code>tensorflow_gpu-1.11.0-cp36-cp36m-win_amd64.whl</code>，执行安装命令即可 <code>pip install tensorflow_gpu-1.11.0-cp36-cp36m-win_amd64.whl</code></li></ul></li><li><p>测试Tensorflow</p><ol><li><p>进入环境，运行python</p></li><li><p>键入 <code>import tensorflow as tf</code></p></li><li><p>未报错则安装成功</p></li><li><p>可能存在的问题</p><ol><li>报DLL找不到模块，可能是版本选择的问题</li><li>其他问题尚未可知</li></ol></li></ol></li></ol></li></ol><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ol><li><a href="https://blog.csdn.net/weixin_39290638/article/details/80045236">Win10下Tensorflow(GPU版)安装趟坑实录</a></li><li><a href="https://blog.csdn.net/wwtor/article/details/80603296">Win10 64 位Tensorflow-gpu安装（VS2017+CUDA9.2+cuDNN7.1.4+python3.6.5）</a></li><li><a href="https://blog.csdn.net/wxtcstt/article/details/82771447?utm_source=blogxgwz0">Win10+VS2017+CUDA9.2 安装调试笔记</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tensorflow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10搜索失效解决方法</title>
      <link href="/!archived/win10%E6%90%9C%E7%B4%A2%E5%A4%B1%E6%95%88%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
      <url>/!archived/win10%E6%90%9C%E7%B4%A2%E5%A4%B1%E6%95%88%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<blockquote><p>答案来自<a href="https://www.zhihu.com/question/35197845">知乎提问</a></p></blockquote><h4 id="方法1-重新安装Cortana"><a href="#方法1-重新安装Cortana" class="headerlink" title="方法1. 重新安装Cortana"></a>方法1. 重新安装Cortana</h4><p>以管理员模式运行powershell，输入以下内容并确认</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-AppXPackage -Name Microsoft.Windows.Cortana | Foreach &#123;Add-AppxPackage -DisableDevelopmentMode -Register <span class="string">&quot;<span class="subst">$($_.InstallLocation)</span>\AppXManifest.xml&quot;</span>&#125;</span><br></pre></td></tr></table></figure><h4 id="方法2-扫描修复系统"><a href="#方法2-扫描修复系统" class="headerlink" title="方法2. 扫描修复系统"></a>方法2. 扫描修复系统</h4><p>以管理员模式运行powershell，键入并回车</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfc /scannow</span><br></pre></td></tr></table></figure><h4 id="方法3-重新运行资源管理器explorer-exe"><a href="#方法3-重新运行资源管理器explorer-exe" class="headerlink" title="方法3. 重新运行资源管理器explorer.exe"></a>方法3. 重新运行资源管理器explorer.exe</h4>]]></content>
      
      
      <categories>
          
          <category> notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tips </tag>
            
            <tag> win10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to build MCloud</title>
      <link href="/!archived/how-to-build-mcloud/"/>
      <url>/!archived/how-to-build-mcloud/</url>
      
        <content type="html"><![CDATA[<p>随着各大网盘关闭和被墙，网络云盘可选的服务商越来越少，某度云收费太高，限制太多，加上某些个人资料不便上传，此时私有云的作用就凸显出来了，搭配离线下载工具和同步工具，一个比较完整成熟的云应用就呈现出来了</p><h1 id="LNMP"><a href="#LNMP" class="headerlink" title="LNMP"></a>LNMP</h1><p>预置环境配置<code>LNMP</code>（或<code>LAMP</code>），可使用一键安装包，也可以自己逐个安装配置</p><h1 id="KodExplorer"><a href="#KodExplorer" class="headerlink" title="KodExplorer"></a>KodExplorer</h1><p>对比使用<code>OwnCloud</code>和<code>NextCloud</code>后，个人感觉<code>KodExplorer</code>功能更加强大，也比较稳定，在WEB能像<code>windows</code>一样操作，此外<code>KodExplorer</code>无需配置数据库（后续可能将支持数据库），安装便利。唯一不足的，<code>KodExplorer</code>移动端支持不友好（后续也将支持移动端）。</p><p><a href="http://demo.kodcloud.com/">官方演示Demo</a>，用户名&#x2F;密码均为demo</p><p><a href="https://kodcloud.com/download/">官方下载页面</a></p><p>在Linux中安装:</p><p>移至需要安装<code>KodExplorer</code>的web目录，如<code>/var/www/KodExplorer</code>，请手动更改至最新版本号：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/www/KodExplorer</span><br><span class="line">wget http://static.kodcloud.com/update/download/kodexplorer4.32.zip</span><br><span class="line">unzip kodexplorer4.32.zip</span><br><span class="line"><span class="built_in">chmod</span> -Rf 777 ./*</span><br></pre></td></tr></table></figure><p>配置好<code>Nginx</code>和<code>PHP</code>后，访问服务器，设置密码即可登陆使用，默认有三个账户<code>admin</code>、<code>demo</code>、<code>guest</code>。</p><h1 id="Aria2"><a href="#Aria2" class="headerlink" title="Aria2"></a>Aria2</h1><h2 id="Aria2后台"><a href="#Aria2后台" class="headerlink" title="Aria2后台"></a>Aria2后台</h2><p>Ubuntu 16.04直接使用<code>apt</code>安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install aria2</span><br></pre></td></tr></table></figure><p>可以直接使用命令行参数设置配置并启动，也可以创建并编辑配置文件<code>aria2.conf</code>，可参考如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#用户名</span></span><br><span class="line"><span class="comment">#rpc-user=user</span></span><br><span class="line"><span class="comment">#密码</span></span><br><span class="line"><span class="comment">#rpc-passwd=passwd</span></span><br><span class="line"><span class="comment">#上面的认证方式不建议使用,建议使用下面的token方式</span></span><br><span class="line"><span class="comment">#设置加密的密钥</span></span><br><span class="line">rpc-secret=XXXXXX</span><br><span class="line"><span class="comment">#允许rpc</span></span><br><span class="line">enable-rpc=<span class="literal">true</span></span><br><span class="line"><span class="comment">#允许所有来源, web界面跨域权限需要</span></span><br><span class="line">rpc-allow-origin-all=<span class="literal">true</span></span><br><span class="line"><span class="comment">#允许外部访问，false的话只监听本地端口</span></span><br><span class="line">rpc-listen-all=<span class="literal">true</span></span><br><span class="line"><span class="comment">#RPC端口, 仅当默认端口被占用时修改</span></span><br><span class="line">rpc-listen-port=6800</span><br><span class="line"><span class="comment">#最大同时下载数(任务数), 路由建议值: 3</span></span><br><span class="line">max-concurrent-downloads=5</span><br><span class="line"><span class="comment">#断点续传</span></span><br><span class="line"><span class="built_in">continue</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment">#同服务器连接数</span></span><br><span class="line">max-connection-per-server=16</span><br><span class="line"><span class="comment">#最小文件分片大小, 下载线程数上限取决于能分出多少片, 对于小文件重要</span></span><br><span class="line">min-split-size=10M</span><br><span class="line"><span class="comment">#单文件最大线程数, 路由建议值: 5</span></span><br><span class="line"><span class="built_in">split</span>=16</span><br><span class="line"><span class="comment">#下载速度限制</span></span><br><span class="line">max-overall-download-limit=0</span><br><span class="line"><span class="comment">#单文件速度限制</span></span><br><span class="line">max-download-limit=0</span><br><span class="line"><span class="comment">#上传速度限制</span></span><br><span class="line">max-overall-upload-limit=0</span><br><span class="line"><span class="comment">#单文件速度限制</span></span><br><span class="line">max-upload-limit=0</span><br><span class="line"><span class="comment">#断开速度过慢的连接</span></span><br><span class="line"><span class="comment">#lowest-speed-limit=0</span></span><br><span class="line"><span class="comment">#验证用，需要1.16.1之后的release版本</span></span><br><span class="line"><span class="comment">#referer=*</span></span><br><span class="line"><span class="comment">#文件保存路径, 默认为当前启动位置</span></span><br><span class="line"><span class="built_in">dir</span>=/var/www/html/downloads/</span><br><span class="line"><span class="comment">#禁用IP V6</span></span><br><span class="line">disable-ipv6=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## BT/PT下载相关 ##</span></span><br><span class="line"><span class="comment"># 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true</span></span><br><span class="line"><span class="comment">#follow-torrent=true</span></span><br><span class="line"><span class="comment"># BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999</span></span><br><span class="line"><span class="comment">#listen-port=51413</span></span><br><span class="line"><span class="comment"># 单个种子最大连接数, 默认:55</span></span><br><span class="line"><span class="comment">#bt-max-peers=55</span></span><br><span class="line"><span class="comment"># 打开DHT功能, PT需要禁用, 默认:true</span></span><br><span class="line">enable-dht=<span class="literal">false</span></span><br><span class="line"><span class="comment"># 打开IPv6 DHT功能, PT需要禁用</span></span><br><span class="line"><span class="comment">#enable-dht6=false</span></span><br><span class="line"><span class="comment"># DHT网络监听端口, 默认:6881-6999</span></span><br><span class="line"><span class="comment">#dht-listen-port=6881-6999</span></span><br><span class="line"><span class="comment"># 本地节点查找, PT需要禁用, 默认:false</span></span><br><span class="line"><span class="comment">#bt-enable-lpd=false</span></span><br><span class="line"><span class="comment"># 种子交换, PT需要禁用, 默认:true</span></span><br><span class="line">enable-peer-exchange=<span class="literal">false</span></span><br><span class="line"><span class="comment"># 每个种子限速, 对少种的PT很有用, 默认:50K</span></span><br><span class="line"><span class="comment">#bt-request-peer-speed-limit=50K</span></span><br><span class="line"><span class="comment"># 客户端伪装, PT需要</span></span><br><span class="line">peer-id-prefix=-TR2770-</span><br><span class="line">user-agent=Transmission/2.77</span><br><span class="line"><span class="comment"># 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0</span></span><br><span class="line">seed-ratio=0</span><br><span class="line"><span class="comment"># 强制保存会话, 即使任务已经完成, 默认:false</span></span><br><span class="line"><span class="comment"># 较新的版本开启后会在任务完成后依然保留.aria2文件</span></span><br><span class="line"><span class="comment">#force-save=false</span></span><br><span class="line"><span class="comment"># BT校验相关, 默认:true</span></span><br><span class="line"><span class="comment">#bt-hash-check-seed=true</span></span><br><span class="line"><span class="comment"># 继续之前的BT任务时, 无需再次校验, 默认:false</span></span><br><span class="line">bt-seed-unverified=<span class="literal">true</span></span><br><span class="line"><span class="comment"># 保存磁力链接元数据为种子文件(.torrent文件), 默认:false</span></span><br><span class="line">bt-save-metadata=<span class="literal">true</span></span><br><span class="line"><span class="comment">#添加额外的tracker</span></span><br><span class="line">bt-tracker=udp://tracker1.wasabii.com.tw:6969/announce,udp://tracker2.wasabii.com.tw:6969/announce,http://mgtracker.org:6969/announce,http://tracker.mg64.net:6881/announce,http://share.camoe.cn:8080/announce,udp://tracker.opentrackr.org:1337/announce</span><br></pre></td></tr></table></figure><p>保存并使用该配置启动：<code>aria2c --conf-path=aria2.conf</code> 可使用<code>Screen</code>后台运行:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建aria2c活动</span></span><br><span class="line">screen -S aria2c</span><br><span class="line"><span class="comment">#运行aria2c</span></span><br><span class="line">aria2c --conf-path=aria2.conf</span><br><span class="line"><span class="comment">#使用ctrl+d再按a离开，使用screen -r aria2c重新进入该活动</span></span><br></pre></td></tr></table></figure><h2 id="Aria2前端"><a href="#Aria2前端" class="headerlink" title="Aria2前端"></a>Aria2前端</h2><p>可使用<code>aria2 WebUI</code>也可使用UI更加好看（个人感觉）的<code>aria-Ng</code></p><p><code>aria-Ng</code>项目地址：<code>https://github.com/mayswind/AriaNg</code> <code>aria-Ng</code>下载地址：<code>https://github.com/mayswind/AriaNg/releases</code></p><p>和<code>KodExplorer</code>类似，解压到WEB目录，配置好后访问域名或IP</p><p><img src="https://blog.poryoung.cn/wp-content/uploads/2018/08/1e34e061abeb5639ff1772ace9067e95.png"></p><p>填好RPC密钥连接即可</p><blockquote><p>p.s. 在使用aria2 WebUI时遇到点问题，使用https访问会连接失败，即使开启了SSL&#x2F;TLS，使用http访问并使用SSL连接可正常使用 在aria-Ng没有这个问题，不知道是不是配置的问题</p></blockquote><h1 id="Syncthing同步神器"><a href="#Syncthing同步神器" class="headerlink" title="Syncthing同步神器"></a>Syncthing同步神器</h1><p>光有云盘和离线下载还不够，没有云备份和云同步功能还不能称得上MCloud，这里推荐目前仍然存活的同步神器Syncthing，随时随地任何设备间进行同步。</p><p>Github下载地址：<code>https://github.com/syncthing/syncthing/releases/tag/v0.14.49</code>，根据不同的客户端下载</p><p>Ubuntu 16.04下载后并解压，复制其中的<code>syncthing</code>可执行文件到系统环境目录，首次运行将创建配置文件，然后结束进程，编辑配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.config/syncthing/config.xml</span><br></pre></td></tr></table></figure><p>找到如下几行并修改<code>address</code>为<code>0.0.0.0:8384</code>端口随意：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;gui enabled=&quot;true&quot; tls=&quot;false&quot; debugging=&quot;false&quot;&gt;</span><br><span class="line">    &lt;address&gt;127.0.0.1:8384&lt;/address&gt;</span><br><span class="line">    &lt;apikey&gt;2GeGJK9z6tXKP3nHJYU56ZHoYSYnqQ9S&lt;/apikey&gt;</span><br><span class="line">    &lt;theme&gt;default&lt;/theme&gt;</span><br><span class="line">&lt;/gui&gt;</span><br></pre></td></tr></table></figure><p>注意防火墙，需要开启端口</p><p>若要用域名访问可以用Nginx做反向代理，<a href="https://blog.poryoung.cn/?p=929">见这里：Nginx端口转发</a></p><p>访问后即可查看设备ID，用于连接其他设备，同时可设置共享文件夹（不同设备相同文件夹ID会自动共享）</p><p>window端可下载官方提供的工具方便管理<a href="https://github.com/canton7/SyncTrayzor/releases/tag/v1.1.21">SyncTrayzor</a></p><p>Android和IOS同样有客户端，可以设置共享</p><p>此外Syncthing还支持版本管理。</p><h1 id="OSS"><a href="#OSS" class="headerlink" title="OSS"></a>OSS</h1><p>不管是国内还是国外，VPS存储容量还是有限的，这个时候可以考虑使用OSS进行挂载，目前阿里云夏日活动，1TB存储3年只要99元</p><p>挂载方法可以查看阿里云详细教程</p>]]></content>
      
      
      <categories>
          
          <category> notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mcloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【转】Nginx实现端口转发</title>
      <link href="/!archived/%E3%80%90%E8%BD%AC%E3%80%91nginx%E5%AE%9E%E7%8E%B0%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/"/>
      <url>/!archived/%E3%80%90%E8%BD%AC%E3%80%91nginx%E5%AE%9E%E7%8E%B0%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/zhaoyingjie/p/7248678.html">查看原文：Nginx 实现端口转发——星河赵博客</a></p><h3 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h3><p>Nginx在监听某一端口（如80端口）时，通过配置负载均衡池，根据不同的域名，将同一端口的HTTP&#x2F;HTTPS请求分发到不同的端口。</p><p>实例如下：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##负载均衡池</span></span><br><span class="line"><span class="section">upstream</span> one_pool&#123;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">127.0.0.1:5000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">upstream</span> two_pool&#123;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">127.0.0.1:6000</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">##server one</span></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="comment">#listenning on 80</span></span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> one.poryoung.cn;</span><br><span class="line">    <span class="comment">#redirect to https</span></span><br><span class="line">    <span class="attribute">return</span> <span class="number">301</span> https://<span class="variable">$server_name</span><span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span>;</span><br><span class="line">    <span class="attribute">server_name</span> one.poryoung.cn;</span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://one_pool;</span><br><span class="line">        <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Connection <span class="string">&#x27;upgrade&#x27;</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">        <span class="attribute">proxy_cache_bypass</span> <span class="variable">$http_upgrade</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#Allow HTTPS</span></span><br><span class="line">    <span class="attribute">ssl</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="comment"># Let&#x27;s Encrypt生成的SSL证书:</span></span><br><span class="line">    <span class="attribute">ssl_certificate</span> /.../<span class="regexp">*.poryoung.cn</span>/fullchain.cer;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /.../<span class="regexp">*.poryoung.cn.key</span>;</span><br><span class="line">    <span class="attribute">ssl_session_timeout</span> <span class="number">5m</span>;</span><br><span class="line">    <span class="attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span>;</span><br><span class="line">    <span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">ssl_ciphers</span> <span class="string">&#x27;EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">##server two</span></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="comment">#listenning on 80</span></span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> two.poryoung.cn;</span><br><span class="line">    <span class="comment">#redirect to https</span></span><br><span class="line">    <span class="attribute">return</span> <span class="number">301</span> https://<span class="variable">$server_name</span><span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span>;</span><br><span class="line">    <span class="attribute">server_name</span> two.poryoung.cn;</span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://two_pool;</span><br><span class="line">        <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Connection <span class="string">&#x27;upgrade&#x27;</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">        <span class="attribute">proxy_cache_bypass</span> <span class="variable">$http_upgrade</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#Allow HTTPS</span></span><br><span class="line">    <span class="attribute">ssl</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="comment"># Let&#x27;s Encrypt生成的SSL证书:</span></span><br><span class="line">    <span class="attribute">ssl_certificate</span> /.../<span class="regexp">*.poryoung.cn</span>/fullchain.cer;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /.../<span class="regexp">*.poryoung.cn.key</span>;</span><br><span class="line">    <span class="attribute">ssl_session_timeout</span> <span class="number">5m</span>;</span><br><span class="line">    <span class="attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span>;</span><br><span class="line">    <span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">ssl_ciphers</span> <span class="string">&#x27;EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中的域名和证书部分需要替换。</p><p>Let’s Encrypt已经支持<strong>泛域名</strong>证书申请，网上有许多教程，比较详细的如<a href="https://www.xxorg.com/archives/4870">Let’s Encrypt免费泛域名证书申请教程步骤</a>，使用<code>ACME.sh</code>申请。</p><p>在申请过程中，<code>./acme.sh --issue -d *.xxorg.com -d xxorg.com --dns</code>和<code>./acme.sh --renew -d *.xxorg.com -d xxorg.com</code>命令可能会遇到<code>dns manual mode</code>警告而失败的情况，在其后加上<code>--yes-I-know-dns-manual-mode-enough-go-ahead-please</code>即可</p>]]></content>
      
      
      <categories>
          
          <category> notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> https </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mark My Ideas</title>
      <link href="/!archived/mark-my-ideas/"/>
      <url>/!archived/mark-my-ideas/</url>
      
        <content type="html"><![CDATA[<h1 id="INFO"><a href="#INFO" class="headerlink" title="INFO"></a>INFO</h1><p>There are many ideas in your mind, some are matrue and others are naive. All of these ideas will go away, some maybe never come back to your mind, even if they are really close to come true.</p><p>I’ve heard many people have done this from a very early time, with konwing they are successful, I haven’t tried. From now, I’ll mark all ideas in my mind, even if they are ridiculous sometimes.</p><h1 id="IDEAS"><a href="#IDEAS" class="headerlink" title="IDEAS"></a>IDEAS</h1><h2 id="A-idea-community"><a href="#A-idea-community" class="headerlink" title="A idea community"></a>A idea community</h2><p>This a community for exchanging ideas. Everyone can mark or publish their thought whatever kinds of they are. Then the system will create a project progress under this idea, which also can note what you have done and remind you to come ture your idea according to the progress and feasiability. If your idea is public, then other people can help you or clone your idea if they are more easier to come ture.</p><h2 id="New-mode-of-taking-after-left-behind-children-refer-to-A-Love-Coffee-for-autisms-in-Shanghai"><a href="#New-mode-of-taking-after-left-behind-children-refer-to-A-Love-Coffee-for-autisms-in-Shanghai" class="headerlink" title="New mode of taking after left-behind children refer to A Love Coffee for autisms in Shanghai"></a>New mode of taking after left-behind children refer to A Love Coffee for autisms in Shanghai</h2>]]></content>
      
      
      <categories>
          
          <category> anything </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Node版本切换</title>
      <link href="/!archived/node%E7%89%88%E6%9C%AC%E5%88%87%E6%8D%A2/"/>
      <url>/!archived/node%E7%89%88%E6%9C%AC%E5%88%87%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<h4 id="In-the-lastest-nodejs-version-the-Buffer-constructor-has-been-deprecated"><a href="#In-the-lastest-nodejs-version-the-Buffer-constructor-has-been-deprecated" class="headerlink" title="In the lastest nodejs version the Buffer() constructor has been deprecated"></a>In the lastest nodejs version the Buffer() constructor has been deprecated</h4><blockquote><p>DEP0005: Buffer() constructor# Type: Runtime (supports –pending-deprecation) The Buffer() function and new Buffer() constructor are deprecated due to API usability issues that can potentially lead to accidental security issues. As an alternative, use of the following methods of constructing Buffer objects is strongly recommended: Buffer.alloc(size[, fill[, encoding]]) - Create a Buffer with initialized memory. Buffer.allocUnsafe(size) - Create a Buffer with uninitialized memory. Buffer.allocUnsafeSlow(size) - Create a Buffer with uninitialized memory. Buffer.from(array) - Create a Buffer with a copy of array Buffer.from(arrayBuffer[, byteOffset[, length]]) - Create a Buffer that wraps the given arrayBuffer. Buffer.from(buffer) - Create a Buffer that copies buffer. Buffer.from(string[, encoding]) - Create a Buffer that copies string. As of v10.0.0, a deprecation warning is printed at runtime when –pending-deprecation is used or when the calling code is outside node_modules in order to better target developers, rather than users.</p></blockquote><h4 id="how-to-switch-diffirent-versions"><a href="#how-to-switch-diffirent-versions" class="headerlink" title="how to switch diffirent versions"></a>how to switch diffirent versions</h4><p><strong>use module n</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install n -g</span><br></pre></td></tr></table></figure><p>Use<code>sudo n version</code>to install specific version</p><p>And use <code>sudo n</code>to switch</p><p>Howerver if you try to install a older version while a new version has been installed, the new one will be uninstalled.</p><p><strong>what if n doesn’t work</strong> One reason causing this maybe the diffirence between n’s path, which is <code>/usr/local</code> and node’s installtion path, while you can use <code>which node</code> to check.</p><p>Then you can set environment value to solve this problem.</p><p>For more, <a href="http://www.jb51.net/article/98153.htm">read this</a>.</p>]]></content>
      
      
      <categories>
          
          <category> notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
            <tag> node-js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript MD5 function</title>
      <link href="/!archived/javascript-md5-function/"/>
      <url>/!archived/javascript-md5-function/</url>
      
        <content type="html"><![CDATA[<p><strong>default 32bit</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line">const md5 = function (message, bit) &#123;</span><br><span class="line">  var sMessage = new String(message);</span><br><span class="line">  function RotateLeft(lValue, iShiftBits) &#123; return (lValue &lt;&lt; iShiftBits) | (lValue &gt;&gt;&gt; (32 - iShiftBits)); &#125;</span><br><span class="line">  function AddUnsigned(lX, lY) &#123;</span><br><span class="line">    var lX4, lY4, lX8, lY8, lResult;</span><br><span class="line">    lX8 = (lX &amp; 0x80000000);</span><br><span class="line">    lY8 = (lY &amp; 0x80000000);</span><br><span class="line">    lX4 = (lX &amp; 0x40000000);</span><br><span class="line">    lY4 = (lY &amp; 0x40000000);</span><br><span class="line">    lResult = (lX &amp; 0x3FFFFFFF) + (lY &amp; 0x3FFFFFFF);</span><br><span class="line">    if (lX4 &amp; lY4) return (lResult ^ 0x80000000 ^ lX8 ^ lY8);</span><br><span class="line">    if (lX4 | lY4) &#123;</span><br><span class="line">      if (lResult &amp; 0x40000000) return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);</span><br><span class="line">      else return (lResult ^ 0x40000000 ^ lX8 ^ lY8);</span><br><span class="line">    &#125; else return (lResult ^ lX8 ^ lY8);</span><br><span class="line">  &#125;</span><br><span class="line">  function F(x, y, z) &#123; return (x &amp; y) | ((~x) &amp; z); &#125;</span><br><span class="line">  function G(x, y, z) &#123; return (x &amp; z) | (y &amp; (~z)); &#125;</span><br><span class="line">  function H(x, y, z) &#123; return (x ^ y ^ z); &#125;</span><br><span class="line">  function I(x, y, z) &#123; return (y ^ (x | (~z))); &#125;</span><br><span class="line">  function FF(a, b, c, d, x, s, ac) &#123;</span><br><span class="line">    a = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, c, d), x), ac));</span><br><span class="line">    return AddUnsigned(RotateLeft(a, s), b);</span><br><span class="line">  &#125;</span><br><span class="line">  function GG(a, b, c, d, x, s, ac) &#123;</span><br><span class="line">    a = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, c, d), x), ac));</span><br><span class="line">    return AddUnsigned(RotateLeft(a, s), b);</span><br><span class="line">  &#125;</span><br><span class="line">  function HH(a, b, c, d, x, s, ac) &#123;</span><br><span class="line">    a = AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, c, d), x), ac));</span><br><span class="line">    return AddUnsigned(RotateLeft(a, s), b);</span><br><span class="line">  &#125;</span><br><span class="line">  function II(a, b, c, d, x, s, ac) &#123;</span><br><span class="line">    a = AddUnsigned(a, AddUnsigned(AddUnsigned(I(b, c, d), x), ac));</span><br><span class="line">    return AddUnsigned(RotateLeft(a, s), b);</span><br><span class="line">  &#125;</span><br><span class="line">  function ConvertToWordArray(sMessage) &#123;</span><br><span class="line">    var lWordCount;</span><br><span class="line">    var lMessageLength = sMessage.length;</span><br><span class="line">    var lNumberOfWords_temp1 = lMessageLength + 8;</span><br><span class="line">    var lNumberOfWords_temp2 = (lNumberOfWords_temp1 - (lNumberOfWords_temp1 % 64)) / 64;</span><br><span class="line">    var lNumberOfWords = (lNumberOfWords_temp2 + 1) * 16;</span><br><span class="line">    var lWordArray = Array(lNumberOfWords - 1);</span><br><span class="line">    var lBytePosition = 0;</span><br><span class="line">    var lByteCount = 0;</span><br><span class="line">    while (lByteCount &lt; lMessageLength) &#123;</span><br><span class="line">      lWordCount = (lByteCount - (lByteCount % 4)) / 4;</span><br><span class="line">      lBytePosition = (lByteCount % 4) * 8;</span><br><span class="line">      lWordArray[lWordCount] = (lWordArray[lWordCount] | (sMessage.charCodeAt(lByteCount) &lt;&lt; lBytePosition));</span><br><span class="line">      lByteCount++;</span><br><span class="line">    &#125;</span><br><span class="line">    lWordCount = (lByteCount - (lByteCount % 4)) / 4;</span><br><span class="line">    lBytePosition = (lByteCount % 4) * 8;</span><br><span class="line">    lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80 &lt;&lt; lBytePosition);</span><br><span class="line">    lWordArray[lNumberOfWords - 2] = lMessageLength &lt;&lt; 3;</span><br><span class="line">    lWordArray[lNumberOfWords - 1] = lMessageLength &gt;&gt;&gt; 29;</span><br><span class="line">    return lWordArray;</span><br><span class="line">  &#125;</span><br><span class="line">  function WordToHex(lValue) &#123;</span><br><span class="line">    var WordToHexValue = &quot;&quot;, WordToHexValue_temp = &quot;&quot;, lByte, lCount;</span><br><span class="line">    for (lCount = 0; lCount &lt;= 3; lCount++) &#123;</span><br><span class="line">      lByte = (lValue &gt;&gt;&gt; (lCount * 8)) &amp; 255;</span><br><span class="line">      WordToHexValue_temp = &quot;0&quot; + lByte.toString(16);</span><br><span class="line">      WordToHexValue = WordToHexValue + WordToHexValue_temp.substr(WordToHexValue_temp.length - 2, 2);</span><br><span class="line">    &#125;</span><br><span class="line">    return WordToHexValue;</span><br><span class="line">  &#125;</span><br><span class="line">  var x = Array();</span><br><span class="line">  var k, AA, BB, CC, DD, a, b, c, d</span><br><span class="line">  var S11 = 7, S12 = 12, S13 = 17, S14 = 22;</span><br><span class="line">  var S21 = 5, S22 = 9, S23 = 14, S24 = 20;</span><br><span class="line">  var S31 = 4, S32 = 11, S33 = 16, S34 = 23;</span><br><span class="line">  var S41 = 6, S42 = 10, S43 = 15, S44 = 21;</span><br><span class="line">  // Steps 1 and 2. Append padding bits and length and convert to words </span><br><span class="line">  x = ConvertToWordArray(sMessage);</span><br><span class="line">  // Step 3. Initialise </span><br><span class="line">  a = 0x67452301; b = 0xEFCDAB89; c = 0x98BADCFE; d = 0x10325476;</span><br><span class="line">  // Step 4. Process the message in 16-word blocks </span><br><span class="line">  for (k = 0; k &lt; x.length; k += 16) &#123;</span><br><span class="line">    AA = a; BB = b; CC = c; DD = d;</span><br><span class="line">    a = FF(a, b, c, d, x[k + 0], S11, 0xD76AA478);</span><br><span class="line">    d = FF(d, a, b, c, x[k + 1], S12, 0xE8C7B756);</span><br><span class="line">    c = FF(c, d, a, b, x[k + 2], S13, 0x242070DB);</span><br><span class="line">    b = FF(b, c, d, a, x[k + 3], S14, 0xC1BDCEEE);</span><br><span class="line">    a = FF(a, b, c, d, x[k + 4], S11, 0xF57C0FAF);</span><br><span class="line">    d = FF(d, a, b, c, x[k + 5], S12, 0x4787C62A);</span><br><span class="line">    c = FF(c, d, a, b, x[k + 6], S13, 0xA8304613);</span><br><span class="line">    b = FF(b, c, d, a, x[k + 7], S14, 0xFD469501);</span><br><span class="line">    a = FF(a, b, c, d, x[k + 8], S11, 0x698098D8);</span><br><span class="line">    d = FF(d, a, b, c, x[k + 9], S12, 0x8B44F7AF);</span><br><span class="line">    c = FF(c, d, a, b, x[k + 10], S13, 0xFFFF5BB1);</span><br><span class="line">    b = FF(b, c, d, a, x[k + 11], S14, 0x895CD7BE);</span><br><span class="line">    a = FF(a, b, c, d, x[k + 12], S11, 0x6B901122);</span><br><span class="line">    d = FF(d, a, b, c, x[k + 13], S12, 0xFD987193);</span><br><span class="line">    c = FF(c, d, a, b, x[k + 14], S13, 0xA679438E);</span><br><span class="line">    b = FF(b, c, d, a, x[k + 15], S14, 0x49B40821);</span><br><span class="line">    a = GG(a, b, c, d, x[k + 1], S21, 0xF61E2562);</span><br><span class="line">    d = GG(d, a, b, c, x[k + 6], S22, 0xC040B340);</span><br><span class="line">    c = GG(c, d, a, b, x[k + 11], S23, 0x265E5A51);</span><br><span class="line">    b = GG(b, c, d, a, x[k + 0], S24, 0xE9B6C7AA);</span><br><span class="line">    a = GG(a, b, c, d, x[k + 5], S21, 0xD62F105D);</span><br><span class="line">    d = GG(d, a, b, c, x[k + 10], S22, 0x2441453);</span><br><span class="line">    c = GG(c, d, a, b, x[k + 15], S23, 0xD8A1E681);</span><br><span class="line">    b = GG(b, c, d, a, x[k + 4], S24, 0xE7D3FBC8);</span><br><span class="line">    a = GG(a, b, c, d, x[k + 9], S21, 0x21E1CDE6);</span><br><span class="line">    d = GG(d, a, b, c, x[k + 14], S22, 0xC33707D6);</span><br><span class="line">    c = GG(c, d, a, b, x[k + 3], S23, 0xF4D50D87);</span><br><span class="line">    b = GG(b, c, d, a, x[k + 8], S24, 0x455A14ED);</span><br><span class="line">    a = GG(a, b, c, d, x[k + 13], S21, 0xA9E3E905);</span><br><span class="line">    d = GG(d, a, b, c, x[k + 2], S22, 0xFCEFA3F8);</span><br><span class="line">    c = GG(c, d, a, b, x[k + 7], S23, 0x676F02D9);</span><br><span class="line">    b = GG(b, c, d, a, x[k + 12], S24, 0x8D2A4C8A);</span><br><span class="line">    a = HH(a, b, c, d, x[k + 5], S31, 0xFFFA3942);</span><br><span class="line">    d = HH(d, a, b, c, x[k + 8], S32, 0x8771F681);</span><br><span class="line">    c = HH(c, d, a, b, x[k + 11], S33, 0x6D9D6122);</span><br><span class="line">    b = HH(b, c, d, a, x[k + 14], S34, 0xFDE5380C);</span><br><span class="line">    a = HH(a, b, c, d, x[k + 1], S31, 0xA4BEEA44);</span><br><span class="line">    d = HH(d, a, b, c, x[k + 4], S32, 0x4BDECFA9);</span><br><span class="line">    c = HH(c, d, a, b, x[k + 7], S33, 0xF6BB4B60);</span><br><span class="line">    b = HH(b, c, d, a, x[k + 10], S34, 0xBEBFBC70);</span><br><span class="line">    a = HH(a, b, c, d, x[k + 13], S31, 0x289B7EC6);</span><br><span class="line">    d = HH(d, a, b, c, x[k + 0], S32, 0xEAA127FA);</span><br><span class="line">    c = HH(c, d, a, b, x[k + 3], S33, 0xD4EF3085);</span><br><span class="line">    b = HH(b, c, d, a, x[k + 6], S34, 0x4881D05);</span><br><span class="line">    a = HH(a, b, c, d, x[k + 9], S31, 0xD9D4D039);</span><br><span class="line">    d = HH(d, a, b, c, x[k + 12], S32, 0xE6DB99E5);</span><br><span class="line">    c = HH(c, d, a, b, x[k + 15], S33, 0x1FA27CF8);</span><br><span class="line">    b = HH(b, c, d, a, x[k + 2], S34, 0xC4AC5665);</span><br><span class="line">    a = II(a, b, c, d, x[k + 0], S41, 0xF4292244);</span><br><span class="line">    d = II(d, a, b, c, x[k + 7], S42, 0x432AFF97);</span><br><span class="line">    c = II(c, d, a, b, x[k + 14], S43, 0xAB9423A7);</span><br><span class="line">    b = II(b, c, d, a, x[k + 5], S44, 0xFC93A039);</span><br><span class="line">    a = II(a, b, c, d, x[k + 12], S41, 0x655B59C3);</span><br><span class="line">    d = II(d, a, b, c, x[k + 3], S42, 0x8F0CCC92);</span><br><span class="line">    c = II(c, d, a, b, x[k + 10], S43, 0xFFEFF47D);</span><br><span class="line">    b = II(b, c, d, a, x[k + 1], S44, 0x85845DD1);</span><br><span class="line">    a = II(a, b, c, d, x[k + 8], S41, 0x6FA87E4F);</span><br><span class="line">    d = II(d, a, b, c, x[k + 15], S42, 0xFE2CE6E0);</span><br><span class="line">    c = II(c, d, a, b, x[k + 6], S43, 0xA3014314);</span><br><span class="line">    b = II(b, c, d, a, x[k + 13], S44, 0x4E0811A1);</span><br><span class="line">    a = II(a, b, c, d, x[k + 4], S41, 0xF7537E82);</span><br><span class="line">    d = II(d, a, b, c, x[k + 11], S42, 0xBD3AF235);</span><br><span class="line">    c = II(c, d, a, b, x[k + 2], S43, 0x2AD7D2BB);</span><br><span class="line">    b = II(b, c, d, a, x[k + 9], S44, 0xEB86D391);</span><br><span class="line">    a = AddUnsigned(a, AA); b = AddUnsigned(b, BB); c = AddUnsigned(c, CC); d = AddUnsigned(d, DD);</span><br><span class="line">  &#125;</span><br><span class="line">  if (bit == 16) &#123;</span><br><span class="line">    return WordToHex(b) + WordToHex(c);</span><br><span class="line">  &#125;</span><br><span class="line">  else &#123;</span><br><span class="line">    return WordToHex(a) + WordToHex(b) + WordToHex(c) + WordToHex(d);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> crypto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jquery Ajax Upload File (html5 FormData)</title>
      <link href="/!archived/jquery-ajax-upload-file/"/>
      <url>/!archived/jquery-ajax-upload-file/</url>
      
        <content type="html"><![CDATA[<h3 id="How-to-use-Jquery-Ajax-to-upload-files-with-uploading-progress"><a href="#How-to-use-Jquery-Ajax-to-upload-files-with-uploading-progress" class="headerlink" title="How to use Jquery Ajax to upload files with uploading progress"></a>How to use Jquery Ajax to upload files with uploading progress</h3><hr><h4 id="get-single-file"><a href="#get-single-file" class="headerlink" title="get single file"></a>get single file</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let data = $(&#x27;input[tpye=file]&#x27;)[0].files[0]</span><br><span class="line">let file = new FormData()</span><br><span class="line">file.append(&#x27;file&#x27;,data)</span><br></pre></td></tr></table></figure><h4 id="pakage-uploading-progress-xhr-function"><a href="#pakage-uploading-progress-xhr-function" class="headerlink" title="pakage uploading progress xhr function"></a>pakage uploading progress xhr function</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">function onprogress()&#123;</span><br><span class="line">    var loaded = evt.loaded;</span><br><span class="line">    var tot = evt.total;</span><br><span class="line">    var per = Math.floor(100*loaded/tot)</span><br><span class="line">    console.log(per)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function xhr()&#123;</span><br><span class="line">    let xhr = $.ajaxSettings.xhr()</span><br><span class="line">    if(onprogress &amp;&amp; xhr.upload)&#123;</span><br><span class="line">        xhr.upload.addEventListener(&quot;progress&quot; , onprogress, false);</span><br><span class="line">        return xhr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="use-ajax-to-upload"><a href="#use-ajax-to-upload" class="headerlink" title="use $.ajax() to upload"></a>use $.ajax() to upload</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    url:&#x27;url address&#x27;,</span><br><span class="line">    type:&#x27;POST&#x27;,</span><br><span class="line">    contentType:false,</span><br><span class="line">    processData:false,</span><br><span class="line">    data:file,</span><br><span class="line">    xhr:xhr,</span><br><span class="line">    success:function(res)&#123;</span><br><span class="line">        //handle funciton</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="more-about-jquery-ajax"><a href="#more-about-jquery-ajax" class="headerlink" title="more about jquery ajax"></a><a href="https://www.cnblogs.com/zhuxiaojie/p/4783939.html">more about jquery ajax</a></h4>]]></content>
      
      
      <categories>
          
          <category> notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ajax </tag>
            
            <tag> jquery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大国崛起——百年维新</title>
      <link href="/!archived/%E5%A4%A7%E5%9B%BD%E5%B4%9B%E8%B5%B7-%E7%99%BE%E5%B9%B4%E7%BB%B4%E6%96%B0/"/>
      <url>/!archived/%E5%A4%A7%E5%9B%BD%E5%B4%9B%E8%B5%B7-%E7%99%BE%E5%B9%B4%E7%BB%B4%E6%96%B0/</url>
      
        <content type="html"><![CDATA[<p>日本是个善于学习的国家，善于变革的国家，尤其是近代以来，不囿于地域的局限，通过学习、改革、创新，终成世界风云格局中不可忽视的力量。</p><p>何以日本能成为东方国家中率先摆脱西方殖民统治的国家？何以日本能成为东方世界中第一个能与西方列强平起平坐的国家？在铭记历史的同时，我们也需要从历史中汲取教训。</p><p>在被西方坚船利炮敲开国门后，同清政府的消极不同，日本下定决心要改变状态。无论是出国考察的规模，财政支出的庞大，都前所未闻。在满清政府勾心斗角、纸醉金迷的时候，明治政府为支持工业，支持教育，已经在缩减皇族支出，官员自愿拿出部分薪资以支持政府改革。</p><p>各国有各国的国情，在历史的重要转折期，小国往往能更快转型。中国的历史包袱太过沉重，一直以来的天朝上国的高傲不允许中国放下身段向西方学习。这仿佛是一个垂垂老者最后的固执。</p><p>始惊、陶醉、终狂，是对日本变革的很好的总结。</p><p>此外，从日本变革的过程中，我又看到了，青年人跳动的脉搏，滚热的鲜血。</p><p>涩泽荣一，大久保利通、伊藤博文等等，一批批青年人，出现在这个历史舞台上，散发自己的光热。</p><p>战后二十年，日本又创造了奇迹，从一片废墟之上，建立起了现代化的国家，这背后的原因，值得深思。</p><p>回望历史，尤其是近代历史，每一个中国人都会发自内心的感到悲伤，屈辱，甚至愤恨。然而，铭记历史，不是为了让我们种下仇恨的种子，而是植入自强的基因，平和地看待历史，以史为鉴，是我们应该有的正确态度。</p><p>如今，中国正处于历史最关键的时期，这个国家确实存在这许多问题，然而，她自己也意识到了，只是，她的依靠不是外国的施舍，这些问题也不是靠外国的指指点点就能解决，她唯一的依靠，是我们，是处于这个风云时代的，每一个中国人。批判谁都会，而有效的不是一味的批判，是行之有效的解决办法。年轻人，共勉之！</p>]]></content>
      
      
      <categories>
          
          <category> anything </category>
          
          <category> 有感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感悟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Install Nginx On Ubuntu 16.04</title>
      <link href="/!archived/install-nginx-on-ubuntu-16-04/"/>
      <url>/!archived/install-nginx-on-ubuntu-16-04/</url>
      
        <content type="html"><![CDATA[<h4 id="【原文】How-To-Install-Nginx-on-Ubuntu-16-04"><a href="#【原文】How-To-Install-Nginx-on-Ubuntu-16-04" class="headerlink" title="【原文】How To Install Nginx on Ubuntu 16.04"></a>【原文】<a href="https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-16-04">How To Install Nginx on Ubuntu 16.04</a></h4><h4 id="install-nginx"><a href="#install-nginx" class="headerlink" title="install nginx"></a>install nginx</h4><p>Nginx is available in Ubuntu’s default repositories, so the installation is rather straight forward.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install nginx</span><br></pre></td></tr></table></figure><h4 id="Adjust-the-Firewall-use-ufw"><a href="#Adjust-the-Firewall-use-ufw" class="headerlink" title="Adjust the Firewall (use ufw)"></a>Adjust the Firewall (use <code>ufw</code>)</h4><p>get a listing of the application profiles</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw app list</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//Output</span><br><span class="line">Available applications:</span><br><span class="line">  Nginx Full</span><br><span class="line">  Nginx HTTP</span><br><span class="line">  Nginx HTTPS</span><br><span class="line">  OpenSSH</span><br></pre></td></tr></table></figure><p>enable</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow &#x27;Nginx HTTP&#x27;</span><br></pre></td></tr></table></figure><p>verify</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw status</span><br></pre></td></tr></table></figure><h4 id="Check-your-Web-Server"><a href="#Check-your-Web-Server" class="headerlink" title="Check your Web Server"></a>Check your Web Server</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status nginx</span><br></pre></td></tr></table></figure><h4 id="Manage-the-Nginx-Process"><a href="#Manage-the-Nginx-Process" class="headerlink" title="Manage the Nginx Process"></a>Manage the Nginx Process</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl stop nginx</span><br><span class="line">sudo systemctl start nginx</span><br><span class="line">sudo systemctl restart nginx</span><br><span class="line">//If you are simply making configuration changes, Nginx can often reload without dropping connections. To do this, this command can be used:</span><br><span class="line">sudo systemctl reload nginx</span><br></pre></td></tr></table></figure><p>By default, Nginx is configured to start automatically when the server boots. If this is not what you want, you can disable this behavior by typing:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl disable nginx</span><br></pre></td></tr></table></figure><p>To re-enable the service to start up at boot, you can type:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable nginx</span><br></pre></td></tr></table></figure><h4 id="Get-Familiar-with-Important-Nginx-Files-and-Directories"><a href="#Get-Familiar-with-Important-Nginx-Files-and-Directories" class="headerlink" title="Get Familiar with Important Nginx Files and Directories"></a>Get Familiar with Important Nginx Files and Directories</h4><p><strong>Content</strong> <code>/var/www/html</code>: The actual web content, which by default only consists of the default Nginx page you saw earlier, is served out of the <code>/var/www/html</code> directory. This can be changed by altering Nginx configuration files.</p><p><strong>Server Configuration</strong> <code>/etc/nginx</code>: The Nginx configuration directory. All of the Nginx configuration files reside here.</p><p><code>/etc/nginx/nginx.conf</code>: The main Nginx configuration file. This can be modified to make changes to the Nginx global configuration.</p><p><code>/etc/nginx/sites-available/</code>: The directory where per-site “server blocks” can be stored. Nginx will not use the configuration files found in this directory unless they are linked to the sites-enabled directory (see below). Typically, all server block configuration is done in this directory, and then enabled by linking to the other directory.</p><p><code>/etc/nginx/sites-enabled/</code>: The directory where enabled per-site “server blocks” are stored. Typically, these are created by linking to configuration files found in the sites-available directory.</p><p><code>/etc/nginx/snippets</code>: This directory contains configuration fragments that can be included elsewhere in the Nginx configuration. Potentially repeatable configuration segments are good candidates for refactoring into snippets.</p><p><strong>Server Logs</strong> <code>/var/log/nginx/access.log</code>: Every request to your web server is recorded in this log file unless Nginx is configured to do otherwise.</p><p><code>/var/log/nginx/error.log</code>: Any Nginx errors will be recorded in this log.</p>]]></content>
      
      
      <categories>
          
          <category> notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> notes </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【转】Ubuntu 16.04安装配置Nginx使用Let&#39;s Encrypt</title>
      <link href="/!archived/%E3%80%90%E8%BD%AC%E3%80%91ubuntu-16-04%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEnginx%E4%BD%BF%E7%94%A8lets-encrypt/"/>
      <url>/!archived/%E3%80%90%E8%BD%AC%E3%80%91ubuntu-16-04%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEnginx%E4%BD%BF%E7%94%A8lets-encrypt/</url>
      
        <content type="html"><![CDATA[<h3 id="【原文】Ubuntu-16-04安装配置Nginx使用Let’s-Encrypt"><a href="#【原文】Ubuntu-16-04安装配置Nginx使用Let’s-Encrypt" class="headerlink" title="【原文】Ubuntu 16.04安装配置Nginx使用Let’s Encrypt"></a>【原文】<a href="http://topspeedsnail.com/ubuntu-nginx-let-encrypt/">Ubuntu 16.04安装配置Nginx使用Let’s Encrypt</a></h3><p>Let’s Encrypt是新的认证授权（CA）方式，使用它可以获得免费的TLS&#x2F;SSL证书－使用HTTPS加密web server。Let’s Encrypt依然在测试阶段，目前，它只支持在Apache web服务器上实现自动安装。但是，Let’s Encrypt允许我们非常容易的获得一个免费的SSL证书，之后我们可以在web服务器上手动配置安装。</p><h4 id="本文涉及："><a href="#本文涉及：" class="headerlink" title="本文涉及："></a>本文涉及：</h4><ul><li><p>在Ubuntu 16.04上安装Nginx</p></li><li><p>使用Let’s Encrypt获得免费的SSL证书</p></li><li><p>配置Nginx使用SSL证书</p></li><li><p>怎么自动更新SSL证书</p></li></ul><h4 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h4><p>你必须有一个域名 域名的A记录指向要配置的web服务器 你还要有Ubuntu 16.04的root权限 我使用<code>test.com</code>和<code>www.test.com</code>域名做示例，本文中所有涉及<code>test.com</code>的地方，需要替换为你的域名。</p><h4 id="下载Let’s-Encrypt客户端"><a href="#下载Let’s-Encrypt客户端" class="headerlink" title="下载Let’s Encrypt客户端"></a>下载Let’s Encrypt客户端</h4><p>首先使用Let’s Encrypt获得SSL证书，下载letsencrypt。</p><p>letsencrypt托管在github，使用git clone下载。</p><p>如果没有安装git，安装它：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install git</span><br></pre></td></tr></table></figure><p>我把Let’s Encrypt clone到&#x2F;opt目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo git clone https://github.com/letsencrypt/letsencrypt /opt/letsencrypt</span><br></pre></td></tr></table></figure><h4 id="获得SSL证书"><a href="#获得SSL证书" class="headerlink" title="获得SSL证书"></a>获得SSL证书</h4><p>如果你没有安装Nginx，安装它：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install nginx</span><br></pre></td></tr></table></figure><p>配置Nginx：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/nginx/sites-available/default</span><br></pre></td></tr></table></figure><p>在server块内添加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location ~ /.well-known &#123;</span><br><span class="line">    allow all;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>/.well-known</code>的用处：Let’s Encrypt服务器要对你的web服务器进行验证，确保是你的域名，你的服务器。</p><p>你也可以更改网站根目录，默认是<code>/var/www/html</code></p><p>重新加载Nginx使更改生效：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl reload nginx</span><br></pre></td></tr></table></figure><p>获得SSL证书：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd /opt/letsencrypt</span><br><span class="line">$ ./letsencrypt-auto certonly -a webroot --webroot-path=/var/www/html -d test.com -d www.test.com</span><br></pre></td></tr></table></figure><p>在安装过程中提示输入邮箱，用来恢复密钥</p><p>接受协议</p><p>如果成功，会输出如下信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">IMPORTANT NOTES:</span><br><span class="line">...</span><br><span class="line"> - Congratulations! Your certificate and chain have been saved at</span><br><span class="line">   /etc/letsencrypt/live/test.com/fullchain.pem. Your</span><br><span class="line">   cert will expire on 2016-06-15. To obtain a new version of the</span><br><span class="line">   certificate in the future, simply run Let&#x27;s Encrypt again.</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>注意证书保存路径和过期时间。</p><p>如果有错误，注意打开防火墙的80和443端口。</p><p>其实证书文件保存在<code>/etc/letsencrypt/archive</code>目录中，<code>/etc/letsencrypt/live/test.com</code>里的证书只是指向<code>/etc/letsencrypt/archive</code>最新证书的链接。获得的证书文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ls -l /etc/letsencrypt/live/test.com</span><br></pre></td></tr></table></figure><ul><li>cert.pem: 你域名的证书</li><li>chain.pem: Let’s Encrypt chain证书</li><li>fullchain.pem: cert.pem 和 chain.pem 合并</li><li>privkey.pem: 你的证书密钥</li></ul><p>为了增加安全，你应该生成Diffie-Hellman：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048</span><br></pre></td></tr></table></figure><p>下面你需要配置Nginx使用fullchain.pem做为证书文件，privkey.pem做为密钥。</p><h4 id="配置Nginx使用TLS-x2F-SSL"><a href="#配置Nginx使用TLS-x2F-SSL" class="headerlink" title="配置Nginx使用TLS&#x2F;SSL"></a>配置Nginx使用TLS&#x2F;SSL</h4><p>现在已经有了SSL证书，下面来配置Nginx使用证书。</p><p>编辑Nginx配置文件<code>/etc/nginx/sites-available/default</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/nginx/sites-available/default</span><br></pre></td></tr></table></figure><p>找到server块，注释或删除掉以下行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">listen 80 default_server;</span><br><span class="line">listen [::]:80 default_server;</span><br></pre></td></tr></table></figure><p>在server块内添加如下配置代码使用HTTPS：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">listen 443 ssl;</span><br><span class="line"></span><br><span class="line">server_name test.com www.test.com;</span><br><span class="line"></span><br><span class="line">ssl_certificate /etc/letsencrypt/live/test.com/fullchain.pem;</span><br><span class="line">ssl_certificate_key /etc/letsencrypt/live/test.com/privkey.pem;</span><br></pre></td></tr></table></figure><p>在server块内添加如下代码配置SSL协议：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">ssl_prefer_server_ciphers on;</span><br><span class="line">ssl_dhparam /etc/ssl/certs/dhparam.pem;</span><br><span class="line">ssl_ciphers &#x27;ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA&#x27;;</span><br><span class="line">ssl_session_timeout 1d;</span><br><span class="line">ssl_session_cache shared:SSL:50m;</span><br><span class="line">ssl_stapling on;</span><br><span class="line">ssl_stapling_verify on;</span><br><span class="line">add_header Strict-Transport-Security max-age=15768000;</span><br></pre></td></tr></table></figure><p>最后我们还需要添加一个server块，用来重定向http请求（80-&gt;443）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name test.com www.test.com;</span><br><span class="line">    return 301 https://$host$request_uri;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存退出。</p><p>重新加载Nginx使更改生效：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl reload nginx</span><br></pre></td></tr></table></figure><p>OK，现在你的web服务器应该支持HTTPS了。</p><h4 id="自动更新SSL证书"><a href="#自动更新SSL证书" class="headerlink" title="自动更新SSL证书"></a>自动更新SSL证书</h4><p>Let’s Encrypt证书的有效期是3个月，但是我建议你每两个月更新一下证书。</p><p>更新证书命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /opt/letsencrypt/letsencrypt-auto renew</span><br></pre></td></tr></table></figure><p>使用cron计划任务实现自动更新证书：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo crontab -e</span><br></pre></td></tr></table></figure><p>添加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">30 2 * * 1 /opt/letsencrypt/letsencrypt-auto renew &gt;&gt; /var/log/le-renew.log</span><br><span class="line">35 2 * * 1 /bin/systemctl reload nginx</span><br></pre></td></tr></table></figure><p>保存退出。</p><p>如果你需要更新letsencrypt客户端，简单的执行git pull：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd /opt/letsencrypt</span><br><span class="line">$ sudo git pull</span><br></pre></td></tr></table></figure><p><a href="http://topspeedsnail.com/ubuntu-nginx-let-encrypt/">Written on April 3, 2016</a></p>]]></content>
      
      
      <categories>
          
          <category> notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> notes </tag>
            
            <tag> ubuntu </tag>
            
            <tag> https </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【转】教你一分钟实现动态模糊效果</title>
      <link href="/!archived/%E3%80%90%E8%BD%AC%E3%80%91%E6%95%99%E4%BD%A0%E4%B8%80%E5%88%86%E9%92%9F%E5%AE%9E%E7%8E%B0%E5%8A%A8%E6%80%81%E6%A8%A1%E7%B3%8A%E6%95%88%E6%9E%9C/"/>
      <url>/!archived/%E3%80%90%E8%BD%AC%E3%80%91%E6%95%99%E4%BD%A0%E4%B8%80%E5%88%86%E9%92%9F%E5%AE%9E%E7%8E%B0%E5%8A%A8%E6%80%81%E6%A8%A1%E7%B3%8A%E6%95%88%E6%9E%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="【原文】教你一分钟实现动态模糊效果"><a href="#【原文】教你一分钟实现动态模糊效果" class="headerlink" title="【原文】教你一分钟实现动态模糊效果"></a>【原文】<a href="http://blog.csdn.net/wl9739/article/details/51955598">教你一分钟实现动态模糊效果</a></h3>]]></content>
      
      
      <categories>
          
          <category> notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【转】配置Nginx做Node.js应用的反向代理 (HTTPS)</title>
      <link href="/!archived/%E3%80%90%E8%BD%AC%E3%80%91%E9%85%8D%E7%BD%AEnginx%E5%81%9Anode-js%E5%BA%94%E7%94%A8%E7%9A%84%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86-https/"/>
      <url>/!archived/%E3%80%90%E8%BD%AC%E3%80%91%E9%85%8D%E7%BD%AEnginx%E5%81%9Anode-js%E5%BA%94%E7%94%A8%E7%9A%84%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86-https/</url>
      
        <content type="html"><![CDATA[<h3 id="【原文】配置Nginx做Node-js应用的反向代理-HTTPS"><a href="#【原文】配置Nginx做Node-js应用的反向代理-HTTPS" class="headerlink" title="【原文】配置Nginx做Node.js应用的反向代理 (HTTPS)"></a>【原文】<a href="http://blog.topspeedsnail.com/archives/4982">配置Nginx做Node.js应用的反向代理 (HTTPS)</a></h3><h4 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h4><p>用PPA你可以的到最新版本的node.js</p><p>执行如下命令安装PPA</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sL https://deb.nodesource.com/setup | sudo bash -</span><br></pre></td></tr></table></figure><p>安装 node.js:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nodejs npm</span><br></pre></td></tr></table></figure><p>为了使一些npm包正常工作（例如需要从源码构建的包），你需要安装 build-essentials 包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install build-essential</span><br></pre></td></tr></table></figure><h4 id="创建一个简单的Node-js应用"><a href="#创建一个简单的Node-js应用" class="headerlink" title="创建一个简单的Node.js应用"></a>创建一个简单的Node.js应用</h4><ul><li>更优雅的启动node.js应用：<a href="http://blog.topspeedsnail.com/archives/4985">PM2: 管理Node.js应用进程</a></li></ul><h4 id="配置Nginx做为反向代理"><a href="#配置Nginx做为反向代理" class="headerlink" title="配置Nginx做为反向代理"></a>配置Nginx做为反向代理</h4><p><strong>安装Nginx</strong></p><p><strong>编辑配置文件</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/nginx/sites-available/default</span><br></pre></td></tr></table></figure><p><strong>把文件中的内容替换为：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line"></span><br><span class="line">    server_name your_domain.com;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://localhost:8081;</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        proxy_set_header Connection &#x27;upgrade&#x27;;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_cache_bypass $http_upgrade;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>重启nginx</strong></p><h4 id="添加HTTPS支持（使用免费的Let’s-Encrypt）"><a href="#添加HTTPS支持（使用免费的Let’s-Encrypt）" class="headerlink" title="添加HTTPS支持（使用免费的Let’s Encrypt）"></a>添加HTTPS支持（使用免费的Let’s Encrypt）</h4><p><strong>从github clone源码：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get -y install git bc</span><br><span class="line">sudo git clone https://github.com/letsencrypt/letsencrypt /opt/letsencrypt</span><br></pre></td></tr></table></figure><p><strong>获得SSL证书：</strong> 由于Let’s Encrypt要使用80端口做认证，所以需要暂停Nginx的运行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl stop nginx</span><br></pre></td></tr></table></figure><p><strong>获得证书：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/letsencrypt</span><br><span class="line">./letsencrypt-auto certonly --standalone</span><br></pre></td></tr></table></figure><p>根据提示提供你的信息，包括域名、邮箱啥的。</p><p>执行成功之后，证书保存到了<code>/etc/letsencrypt/your_domain/</code></p><p><strong>配置Nginx：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/nginx/sites-enabled/default</span><br></pre></td></tr></table></figure><p>把内容替换为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># HTTP - 把HTTP请求转向到HTTPS:</span><br><span class="line">server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        listen [::]:80 default_server ipv6only=on;</span><br><span class="line">        return 301 https://$host$request_uri;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># HTTPS - 反向代理</span><br><span class="line">server &#123;</span><br><span class="line">        listen 443;</span><br><span class="line">        server_name your_domain.com;</span><br><span class="line"></span><br><span class="line">        ssl on;</span><br><span class="line">        # Let&#x27;s Encrypt生成的SSL证书:</span><br><span class="line">        ssl_certificate /etc/letsencrypt/live/your_domain/fullchain.pem;</span><br><span class="line">        ssl_certificate_key /etc/letsencrypt/live/your_domain/privkey.pem;</span><br><span class="line">        ssl_session_timeout 5m;</span><br><span class="line">        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">        ssl_prefer_server_ciphers on;</span><br><span class="line">        ssl_ciphers &#x27;EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH&#x27;;</span><br><span class="line"></span><br><span class="line">        # 把请求转到localhost:8081:</span><br><span class="line">        location / &#123;</span><br><span class="line">                proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">                proxy_set_header X-NginX-Proxy true;</span><br><span class="line">                proxy_pass http://localhost:8081/;</span><br><span class="line">                proxy_ssl_session_reuse off;</span><br><span class="line">                proxy_set_header Host $http_host;</span><br><span class="line">                proxy_cache_bypass $http_upgrade;</span><br><span class="line">                proxy_redirect off;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意替换上面的域名、证书路径等信息。</p><p><strong>再次启动nginx</strong></p><h4 id="关于Let’s-Encrypt证书的更新，看如下帖："><a href="#关于Let’s-Encrypt证书的更新，看如下帖：" class="headerlink" title="关于Let’s Encrypt证书的更新，看如下帖："></a>关于Let’s Encrypt证书的更新，看如下帖：</h4><p><a href="http://topspeedsnail.com/ubuntu-nginx-let-encrypt/">Ubuntu 16.04安装配置Nginx使用Let’s Encrypt</a></p>]]></content>
      
      
      <categories>
          
          <category> notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> ubuntu </tag>
            
            <tag> node-js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序Notes</title>
      <link href="/!archived/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8Fnotes/"/>
      <url>/!archived/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8Fnotes/</url>
      
        <content type="html"><![CDATA[<h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><ul><li><p>wx.navigateTo 和 wx.redirectTo 不允许跳转到 tabbar 页面，只能用 wx.switchTab 跳转到 tabbar 页面</p></li><li><p>canvas尺寸设置需要自适应计算，使用API <a href="https://developers.weixin.qq.com/miniprogram/dev/api/systeminfo.html#wxgetsysteminfoobject">getSystemInfo</a> 参考：【转】<a href="http://zhuanlan.zhihu.com/p/32837407">微信小程序canvas尺寸设置 - 极乐君的文章 - 知乎</a></p></li></ul><h3 id="踩坑记录"><a href="#踩坑记录" class="headerlink" title="踩坑记录"></a>踩坑记录</h3><ul><li><p>【转】<a href="https://blog.csdn.net/tsyccnh/article/details/54380023">微信小程序开发踩坑指南</a></p></li><li><p>小程序canvas和h5的canvas差别很大，注意区别</p></li><li><p>【转】<a href="https://blog.csdn.net/rolan1993/article/details/74547274">两百条微信小程序开发跳坑指南</a></p></li><li><p>触控事件触发顺序</p></li></ul><table><thead><tr><th>动作</th><th>触发顺序</th></tr></thead><tbody><tr><td>单击 tap</td><td>touchStart -&gt; tap -&gt; touchEnd</td></tr><tr><td>长按 longPress</td><td>touchStart -&gt; longPress -&gt; tap -&gt; touchEnd</td></tr></tbody></table><p><strong>区别单击、双击、长按事件</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">touchStart: function (e) &#123;</span><br><span class="line">    this.setData(&#123;</span><br><span class="line">      touchStartTime: e.timeStamp,</span><br><span class="line">      touchFlag: true</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">tapJudgement: function (e) &#123;</span><br><span class="line">    let that = this;</span><br><span class="line">    that.setData(&#123;</span><br><span class="line">      touchEndTime: e.timeStamp,</span><br><span class="line">    &#125;);</span><br><span class="line">    if (that.data.touchStartTime === null &amp;&amp; that.data.touchEndTime === null) &#123;</span><br><span class="line">      return;</span><br><span class="line">    &#125;</span><br><span class="line">    let gap = that.data.touchEndTime - that.data.touchStartTime;</span><br><span class="line">    if (Math.abs(gap) &lt; 350) &#123;</span><br><span class="line">      let currentTapTime = e.timeStamp;</span><br><span class="line">      let lastTapTime = that.data.lastTapTime;</span><br><span class="line">      that.setData(&#123;</span><br><span class="line">        lastTapTime: currentTapTime</span><br><span class="line">      &#125;);</span><br><span class="line">      if (currentTapTime - lastTapTime &lt; 300 &amp;&amp; lastTapTime !== null) &#123;</span><br><span class="line">        //double tap event</span><br><span class="line">        clearTimeout(that.data.lastTapTimeoutFunc);</span><br><span class="line">        wx.showToast(&#123;</span><br><span class="line">          title: &#x27;double tap event&#x27;,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        let timer = setTimeout(function () &#123;</span><br><span class="line">          wx.showToast(&#123;</span><br><span class="line">          title: &#x27;single tap event&#x27;,</span><br><span class="line">        &#125;);</span><br><span class="line">        &#125;, 300);</span><br><span class="line">        that.setData(&#123;</span><br><span class="line">          lastTapTimeoutFunc: timer</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  longpressHandle: function (e) &#123;</span><br><span class="line">    wx.showToast(&#123;</span><br><span class="line">      title: &#x27;Trigger long press event&#x27;,</span><br><span class="line">    &#125;);</span><br><span class="line">    this.setData(&#123;</span><br><span class="line">      touchEndTime: e.timeStamp</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wechat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/!archived/830-2/"/>
      <url>/!archived/830-2/</url>
      
        <content type="html"><![CDATA[<h1 id="我思——项目草案"><a href="#我思——项目草案" class="headerlink" title="我思——项目草案"></a>我思——项目草案</h1><h2 id="需求规定"><a href="#需求规定" class="headerlink" title="需求规定"></a>需求规定</h2><h3 id="功能规定"><a href="#功能规定" class="headerlink" title="功能规定"></a>功能规定</h3><h4 id="功能概述"><a href="#功能概述" class="headerlink" title="功能概述"></a>功能概述</h4><table><thead><tr><th><strong>使用用户</strong></th><th><strong>维护人员</strong></th><th><strong>开发者</strong></th></tr></thead><tbody><tr><td>用户注册</td><td></td><td></td></tr><tr><td>用户登陆</td><td></td><td></td></tr><tr><td>每日推荐</td><td></td><td></td></tr><tr><td>留言系统</td><td></td><td></td></tr><tr><td>一周轨迹</td><td></td><td></td></tr><tr><td>分享</td><td></td><td></td></tr></tbody></table><h4 id="使用用户"><a href="#使用用户" class="headerlink" title="使用用户"></a>使用用户</h4><h5 id="用户注册"><a href="#用户注册" class="headerlink" title="用户注册"></a>用户注册</h5><p>微信开放登陆，自动注册用户</p><h5 id="用户登陆"><a href="#用户登陆" class="headerlink" title="用户登陆"></a>用户登陆</h5><p>微信开放登陆</p><h5 id="每日推荐"><a href="#每日推荐" class="headerlink" title="每日推荐"></a>每日推荐</h5><ul><li>天文</li></ul><p>每日零点从4等以上亮星表中随机选择若干个，用户使用时,从中为用户选择一个，为用户介绍其相关信息，并根据其所属88星座为用户提供相应服务。</p><ul><li>人文</li></ul><p>每日零点从<a href="http://diglweb.zjlib.cn:8081/zjtsg/mingren">中国历史人物图像数据库</a>或者<a href="https://projects.iq.harvard.edu/cbdb/cbdb-api">CBDB提供的API</a>随机选择若干人物，用户使用时,从中为用户选择一个，并提供相应服务。</p><ul><li><p>每日一句</p></li><li><p>美文</p></li><li><p>书籍</p></li><li><p>音乐</p></li><li><p>图片</p></li><li><p>风景</p></li></ul><h5 id="留言系统"><a href="#留言系统" class="headerlink" title="留言系统"></a>留言系统</h5><p>用户获得推荐内容后，为其设置相应标签，用户此时能发布感想、感受 拥有相同标签的用户能看到其它用户的留言，并能点赞，回复</p><h5 id="一周轨迹"><a href="#一周轨迹" class="headerlink" title="一周轨迹"></a>一周轨迹</h5><p>记录用户一周的心情，并根据分析结果提供相应服务</p><h5 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h5><p>用户能分享今日推荐和相关内容</p>]]></content>
      
      
      <categories>
          
          <category> software-requirement-analysis </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>[转]为什么目前的串行比并行传输快</title>
      <link href="/!archived/%E8%BD%AC%E4%B8%BA%E4%BB%80%E4%B9%88%E7%9B%AE%E5%89%8D%E7%9A%84%E4%B8%B2%E8%A1%8C%E6%AF%94%E5%B9%B6%E8%A1%8C%E4%BC%A0%E8%BE%93%E5%BF%AB/"/>
      <url>/!archived/%E8%BD%AC%E4%B8%BA%E4%BB%80%E4%B9%88%E7%9B%AE%E5%89%8D%E7%9A%84%E4%B8%B2%E8%A1%8C%E6%AF%94%E5%B9%B6%E8%A1%8C%E4%BC%A0%E8%BE%93%E5%BF%AB/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/juner/p/5514615.html">文章转自博客园，作者JunerLee，点击访问原文</a></p><p>近两年，大家听得最多的一个词可能就是串行传输了。从技术发展的情况来看，串行传输方式大有彻底取代并行传输方式的势头，USB取代IEEE 1284，SATA取代PATA，PCI Express取代PCI……从原理来看，并行传输方式其实优于串行传输方式。通俗地讲，并行传输的通路犹如一条多车道的宽阔大道，而串行传输则是仅能允许一辆汽车通过的乡间公路。以古老而又典型的标准并行口(Standard Parallel Port)和串行口(俗称COM口)为例，并行接口有8根数据线，数据传输率高；而串行接口只有1根数据线，数据传输速度低。在串行口传送1位的时间内，并行口可以传送一个字节。当并行口完成单词“advanced”的传送任务时，串行口中仅传送了这个单词的首字母“a”。</p><p>图1： 并行接口速度是串行接口的8倍</p><p><a href="http://p.blog.csdn.net/images/p_blog_csdn_net/yiwuya/455190/o_628726876_2.jpg"><img src="https://images2015.cnblogs.com/blog/913647/201605/913647-20160521134917107-1766355345.png" alt="628726876" title="628726876"></a></p><p><a href="http://old.blog.edu.cn/UploadFiles/2006-6/628726876.jpg"></a></p><p> </p><p>那么，为何现在的串行传输方式会更胜一筹？下文将从并行、串行的变革以及技术特点，分析隐藏在表象背后的深层原因。</p><p><strong>一、并行传输技术遭遇发展困境</strong></p><p>电脑中的总线和接口是主机与外部设备间传送数据的“大动脉”，随着处理器速度的节节攀升，总线和接口的数据传输速度也需要逐步提高，否则就会成为电脑发展的瓶颈。 <br>我们先来看看总线的情况。1981年第一台PC中以ISA总线为标志的开放式体系结构，数据总线为8位，工作频率为8.33MHz，这在当时却已算是“先进技术”了，所以ISA总线还有另一个名字“AT总线”；到了286时，ISA的位宽提高到了16位，为了保持与8位的ISA兼容，工作频率仍为8.33MHz。这种技术一直沿用到386系统中。</p><p>到了486时代，同时出现了PCI和VESA两种更快的总线标准，它们具有相同的位宽(32位)，但PCI总线能够与处理器异步运行，当处理器的频率增加时，PCI总线频率仍然能够保持不变，可以选择25MHz、30MHz和33MHz三种频率。而VESA总线与处理器同步工作，因而随着处理器频率的提高，VESA总线类型的外围设备工作频率也得随着提高，适应能力较差，因此很快失去了竞争力。PCI总线标准成为Pentium时代PC总线的王者，硬盘控制器、声卡到网卡和显卡全部使用PCI插槽。</p><p>图2：</p><p><a href="http://p.blog.csdn.net/images/p_blog_csdn_net/yiwuya/455190/o_628898702_2.jpg"><img src="https://images2015.cnblogs.com/blog/913647/201605/913647-20160521134919732-1930921347.png" alt="628898702" title="628898702"></a></p><p>并行数据传输技术向来是提高数据传输率的重要手段，但是，进一步发展却遇到了障碍。首先，由于并行传送方式的前提是用同一时序传播信号，用同一时序接收信号，而过分提升时钟频率将难以让数据传送的时序与时钟合拍，布线长度稍有差异，数据就会以与时钟不同的时序送达另外，提升时钟频率还容易引起信号线间的相互干扰。因此，并行方式难以实现高速化。另外，增加位宽无疑会导致主板和扩充板上的布线数目随之增加，成本随之攀升。</p><p>在外部接口方面，我们知道IEEE 1284并行口的速率可达300KB&#x2F;s，传输图形数据时采用压缩技术可以提高到2MB&#x2F;s，而RS-232C标准串行口的数据传输率通常只有20KB&#x2F;s，并行口的数据传输率无疑要胜出一筹。因此十多年来，并行口一直是打印机首选的连接方式。对于仅传输文本的针式打印机来说，IEEE 1284并行口的传输速度可以说是绰绰有余的。但是，对于近年来一再提速的打印机来说，情况发生了变化。笔者使用爱普生6200L(同时具备并行口和USB接口)在打印2MB图片时，并行口和USB接口的速度差异并不明显，但在打印7.5MB大小的图片文件时，从点击“打印”到最终出纸，使用USB接口用了18秒，而使用并行口时，就用了33秒。从这一测试结果可以看出，现行的并行口对于时下的应用需求而言，确实出现了瓶颈。</p><p>你知道吗？IEEE 1284的三种接口</p><p>早期的并行口是一种环形端口，IEEE 1284则采用防呆设计的D型连接器。IEEE 1284定义了D-sub、Centronics和MDR-36等三种连接器(图3)。我们所见到打印机电缆，一端是D-sub连接器，用来与主机连接，另一端为带有锁紧装置的Centronics连接器，用来连接到打印机。连接起来不仅方便，而且十分可靠。D-sub连接器有25根插针，而Centronics连接器有36根插针，多出来的11根基本上是冗余的信号地。MDR(Mini Delta Ribbon，小型三角带)连接器也是36根插针，这种小尺寸连接器是为数码相机、Zip驱动器等小型设备而设计的，实际上很少被使用。</p><p>图3： 三种不同尺寸的并行口连接器</p><p><a href="http://p.blog.csdn.net/images/p_blog_csdn_net/yiwuya/455190/o_628586031_2.jpg"><img src="https://images2015.cnblogs.com/blog/913647/201605/913647-20160521134921123-212677277.png" alt="628586031" title="628586031"></a></p><p><strong>二、USB，让串行传输浴火重生</strong></p><p>回顾前面所介绍的并行接口与串行接口，我们知道IEEE 1284并行口的速率可达300KB&#x2F;s，而RS-232C标准串行口的数据传输率通常只有20KB&#x2F;s，并行口的数据传输率无疑要胜出一筹。外部接口为了获得更高的通信质量，也必须寻找RS-232的替代者。</p><p>1995年，由Compaq、Intel、Microsoft和NEC等几家公司推出的USB接口首次出现在PC机上，1998年起即进入大规模实用阶段。USB比RS-232C的速度提高了100倍以上，突破了串行口通信的速度瓶颈，而且具有很好的兼容性和易用性。USB设备通信速率的自适应性，使得它可以根据主板的设定自动选择HS(High-Speed，高速，480Mbps)、FS(Full-Speed，全速，12Mbps)和LS(Low-Speed，低速，1.5Mbps)三种模式中的一种。USB总线还具有自动的设备检测能力，设备插入之后，操作系统软件会自动地检测、安装和配置该设备，免除了增减设备时必须关闭PC机的麻烦。USB接口之所以能够获得很高的数据传输率，主要是因为其摒弃了常规的单端信号传输方式，转而采用差分信号(differential signal)传输技术，有效地克服了因天线效应对信号传输线路形成的干扰，以及传输线路之间的串扰。USB接口中两根数据线采用相互缠绕的方式，形成了双绞线结构(图4)。</p><p>图4： 采用差模信号传送方式的USB</p><p><a href="http://p.blog.csdn.net/images/p_blog_csdn_net/yiwuya/455190/o_628611190_2.jpg"><img src="https://images2015.cnblogs.com/blog/913647/201605/913647-20160521134921669-870478653.png" alt="628611190" title="628611190"></a></p><p>图5： 差分传输方式具有更好的抗干扰性能</p><p><a href="http://p.blog.csdn.net/images/p_blog_csdn_net/yiwuya/455190/o_628380367_2.jpg"><img src="https://images2015.cnblogs.com/blog/913647/201605/913647-20160521134922638-414353906.png" alt="628380367" title="628380367"></a></p><p>图5是由两根信号线缠绕在环状铁氧体磁芯上构成的扼流线圈。在单端信号传输方式下，线路受到电磁辐射干扰而产生共模电流时，磁场被叠加变成较高的线路阻抗，这样虽然降低了干扰，但有效信号也被衰减了。而在差动传输模式下，共模干扰被磁芯抵消，但不会产生额外的线路阻抗。换句话说，差动传输方式下使用共模扼流线圈，既能达到抗干扰的目的，又不会影响信号传输。</p><p>差分信号传输体系中，传输线路无需屏蔽即可取得很好的抗干扰性能，降低了连接成本。不过，由于USB接口3.3V的信号电平相对较低，最大通信距离只有5米。USB规范还限制物理层的层数不超过7层，这意味着用户可以通过最多使用5个连接器，将一个USB设备置于距离主机最远为30米的位置。</p><p>为解决长距离传输问题，扩展USB的应用范围，一些厂商在USB规范上添加了新的功能，例如Powered USB和Extreme USB，前者加大了USB的供电能力，后者延长了USB的传输距离。</p><p><strong>三、差分信号技术：开启信号高速传输之门的金钥匙</strong></p><p>电脑发展史就是追求更快速度的历史，随着总线频率的提高，所有信号传输都遇到了同样的问题：线路间的电磁干扰越厉害，数据传输失败的发生几率就越高，传统的单端信号传输技术无法适应高速总线的需要。于是差分信号技术就开始在各种高速总线中得到应用，我们已经知道，USB实现高速信号传输的秘诀在于采用了差分信号传输方式。</p><p>差分信号技术是20世纪90年代出现的一种数据传输和接口技术，与传统的单端传输方式相比，它具有低功耗、低误码率、低串扰和低辐射等特点，其传输介质可以是铜质的PCB连线，也可以是平衡电缆，最高传输速率可达1.923Gbps。Intel倡导的第三代I&#x2F;O技术(3GIO)，其物理层的核心技术就是差分信号技术。那么，差分信号技术究竟是怎么回事呢？</p><p>图6： 差分信号传输电路</p><p><a href="http://p.blog.csdn.net/images/p_blog_csdn_net/yiwuya/455190/o_628637777_2.jpg"><img src="https://images2015.cnblogs.com/blog/913647/201605/913647-20160521134923451-1281891146.png" alt="628637777" title="628637777"></a></p><p>众所周知，在传统的单端(Single-ended)通信中，一条线路来传输一个比特位。高电平表示为“1”，低电平表示为“0”。倘若在数据传输过程中受到干扰，高低电平信号完全可能因此产生突破临界值的大幅度扰动，一旦高电平或低电平信号超出临界值，信号就会出错(图7)。</p><p>图7： 单端信号传输</p><p><a href="http://p.blog.csdn.net/images/p_blog_csdn_net/yiwuya/455190/o_628249740_2.jpg"><img src="https://images2015.cnblogs.com/blog/913647/201605/913647-20160521134923966-148744697.png" alt="628249740" title="628249740"></a></p><p>在差分电路中，输出电平为正电压时表示逻辑“1”，输出负电压时表示逻辑“0”，而输出“0”电压是没有意义的，它既不代表“1”，也不代表“0”。而在图7所示的差分通信中，干扰信号会同时进入相邻的两条信号线中，当两个相同的干扰信号分别进入接收端的差分放大器的两个反相输入端后，输出电压为0。所以说，差分信号技术对干扰信号具有很强的免疫力。</p><p>图8： 差分信号传输</p><p><a href="http://p.blog.csdn.net/images/p_blog_csdn_net/yiwuya/455190/o_628726217_2.jpg"><img src="https://images2015.cnblogs.com/blog/913647/201605/913647-20160521134924498-1485913884.png" alt="628726217" title="628726217"></a></p><p>正因如此，实际电路中只要使用低压差分信号(Low Voltage Differential Signal，LVDS)，350mV左右的振幅便能满足近距离传输的要求。假定负载电阻为100Ω，采用LVDS方式传输数据时，如果双绞线长度为10米，传输速率可达400Mbps；当电缆长度增加到20米时，速率降为100Mbps；而当电缆长度为100米时，速率只能达到10Mbps左右。</p><p>在近距离数据传输中，LVDS不仅可以获得很高的传输性能，同时还是一个低成本的方案。LVDS器件可采用经济的CMOS工艺制造，并且采用低成本的3类电缆线及连接件即可达到很高的速率。同时，由于LVDS可以采用较低的信号电压，并且驱动器采用恒流源模式，其功率几乎不会随频率而变化，从而使提高数据传输率和降低功耗成为可能。因此，LVDS技术在USB、SATA、PCI Express以及HyperTransport中得以应用，而LCD中控制电路向液晶屏传送像素亮度控制信号，也采用了LVDS方式。</p><p><strong>四、新串行时代已经到来</strong></p><p>差分传输技术不仅突破了速度瓶颈，而且使用小型连接可以节约空间。近年来，除了USB和FireWire，还涌现出很多以差分信号传输为特点的串行连接标准，几乎覆盖了主板总线和外部I&#x2F;O端口，呈现出从并行整体转移到新串行时代的大趋势，串行接口技术的应用在2005年将进入鼎盛时期(图9)。</p><p>图9： 所有的I&#x2F;O技术都将采用串行方式</p><p><a href="http://p.blog.csdn.net/images/p_blog_csdn_net/yiwuya/455190/o_628657662_2.jpg"><img src="https://images2015.cnblogs.com/blog/913647/201605/913647-20160521134926216-1814789267.png" alt="628657662" title="628657662"></a></p><p>1.LVDS技术，突破芯片组传输瓶颈</p><p>随着电脑速度的提高，CPU与北桥芯片之间，北桥与南桥之间，以及与芯片组相连的各种设备总线的通信速度影响到电脑的整体性能。可是，一直以来所采用的FR4印刷电路板因存在集肤效应和介质损耗导致的码间干扰，限制了传输速率的提升。</p><p>在传统并行同步数字信号的速率将要达到极限的情况下，设计师转向从高速串行信号寻找出路，因为串行总线技术不仅可以获得更高的性能，而且可以最大限度地减少芯片管脚数，简化电路板布线，降低制造成本。Intel的PCI Express、AMD的HyperTansport以及RAMBUS公司的redwood等I&#x2F;O总线标准不约而同地将低压差分信号(LVDS)作为新一代高速信号电平标准。</p><p>一个典型的PCI Express通道如图9所示，通信双方由两个差分信号对构成双工信道，一对用于发送，一对用于接收。4条物理线路构成PCI Express x1。PCI Express 标准中定义了x1、x2、x4和x16。PCI Express x16拥有最多的物理线路(16×4＝64)。</p><p>图10： PCI Express x1数据通道</p><p><a href="http://p.blog.csdn.net/images/p_blog_csdn_net/yiwuya/455190/o_628128671_2.jpg"><img src="https://images2015.cnblogs.com/blog/913647/201605/913647-20160521134926841-926201891.png" alt="628128671" title="628128671"></a></p><p>即便采用最低配置的x1体系，因为可以在两个方向上同时以2.5GHz的频率传送数据，带宽达到5Gbps，也已经超过了传统PCI总线1.056Gbps(32bit×33MHz)的带宽。况且，PCI总线是通过桥路实现的共享总线方式，而PCI Express采用的“端对端连接”(图11)，也让每个设备可以独享总线带宽，因此可以获得比PCI更高的性能。</p><p>图11： PCI Express端对端连接消除了桥路</p><p><a href="http://p.blog.csdn.net/images/p_blog_csdn_net/yiwuya/455190/o_628937704_2.jpg"><img src="https://images2015.cnblogs.com/blog/913647/201605/913647-20160521134928185-1130777875.png" alt="628937704" title="628937704"></a></p><p>AMD的HyperTransport技术与PCI Express极其相似，同样采用LVDS数据通道，最先用于南北桥之间的快速通信。其工作频率范围从200MHz到1GHz，位宽可以根据带宽的要求灵活选择2、4、8、16或32位。HyperTransport最先用于南北桥之间的快速通信，今后会用于所有芯片间的连接。</p><p>2.SATA，为硬盘插上翅膀</p><p>在ATA33之前，一直使用40根平行数据线，由于数据线之间存在串扰，限制了信号频率的提升。因此从ATA66开始，ATA数据线在两根线之间增加了1根接地线正是为了减少相互干扰。增加地线后，数据线与地线之间仍然存在分布电容C2(图12)，还是无法彻底解决干扰问题，使得PATA接口的最高工作频率停留在133MHz上。除了信号干扰这一根本原因之外，PATA还存在不支持热插拔和容错性差等问题。</p><p>图12： 并行ATA的线间串扰</p><p><a href="http://p.blog.csdn.net/images/p_blog_csdn_net/yiwuya/455190/o_628651510_2.jpg"><img src="https://images2015.cnblogs.com/blog/913647/201605/913647-20160521134929638-637510094.png" alt="628651510" title="628651510"></a></p><p>SATA是Intel公司在IDF2000上推出的，此后Intel联合APT、Dell、IBM、Seagate以及Maxtor等业界巨头，于2001年正式推出了SATA 1.0规范。而在春季IDF2002上，SATA 2.0规范也已经公布。</p><p>SATA接口包括4根数据线和3根地线，共有7条物理连线。目前的SATA 1.0标准，数据传输率为150MB&#x2F;s，与ATA133接口133MB&#x2F;s的速度略有提高，但未来的SATA 2.0&#x2F;3.0可提升到300MB&#x2F;s以至600MB&#x2F;s。从目前硬盘速度的增长趋势来看，SATA标准至少可以满足未来数年的要求了。</p><p>3.FireWire，图像传输如虎添翼</p><p>FireWire(火线)是1986年由苹果电脑公司起草的，1995年被美国电气和电子工程师学会(IEEE)作为IEEE 1394推出，是USB之外的另一个高速串行通信标准。FireWire最早的应用目标为摄录设备传送数字图像信号，目前应用领域已遍及DV、DC、DVD、硬盘录像机、电视机顶盒以及家庭游戏机等。</p><p>FireWire传输线有6根电缆，两对双绞线形成两个独立的信道，另外两根为电源线和地线。SONY公司对FireWire进行改进，舍弃了电源线和地线，形成只有两对双绞线的精简版FireWire，并取名为i.Link。</p><p>FireWire数据传输率与USB相当，单信道带宽为400Mbps，通信距离为4.5米。不过，IEEE 1394b标准已将单信道带宽扩大到800Mbps，在IEEE 1394-2000新标准中，更是将其最大数据传输速率确定为1.6Gbps，相邻设备之间连接电缆的最大长度可扩展到100米。</p><p><strong>五、“串行”能红到哪天？</strong></p><p>阅读本文之后，如果有人问关于串行传输与并行传输谁更好的问题，你也许会脱口而出：串行通信好！但是，串行传输之所以走红，是由于将单端信号传输转变为差分信号传输，并提升了控制器工作频率的原因，而“在相同频率下并行通信速度更高”这个基本道理是永远不会错的，通过增加位宽来提高数据传输率的并行策略仍将发挥重要作用。当然，前提是有更好的措施来解决并行传输的种种问题。</p><p>技术进步周而复始，以至无穷，没有一项技术能够永远适用。电脑技术将来跨入THz时代后，对信号传输速度的要求会更高，差分传输技术是否能满足要求？是否需要另一种更好的技术来完成频率的另一次突破呢？不妨拭目以待！</p>]]></content>
      
      
      <categories>
          
          <category> notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> reprint </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大学易帮——软件需求分析</title>
      <link href="/!archived/%E5%A4%A7%E5%AD%A6%E6%98%93%E5%B8%AE-%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90/"/>
      <url>/!archived/%E5%A4%A7%E5%AD%A6%E6%98%93%E5%B8%AE-%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><h3 id="编写目的"><a href="#编写目的" class="headerlink" title="编写目的"></a>编写目的</h3><p>对<strong>大学易帮</strong>这一欲开发的软件做需求分析，以作记录并明确开发方向。本文档预期读者为该软件开发人员。</p><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>待开发软件名为：大学易帮。 项目提出背景：之前为参加<strong>发现杯</strong>而提出项目，由于时间关系作罢，现在主要是为完成<strong>JAVA WEB</strong>课程考核而开发。</p><blockquote><p>待填：与其他系统或机构基本相互来往关系</p></blockquote><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><blockquote><p>待填</p></blockquote><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><blockquote><p>待填</p></blockquote><h2 id="任务概述"><a href="#任务概述" class="headerlink" title="任务概述"></a>任务概述</h2><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><p>本软件开发完成后作为<strong>JAVA WEB</strong>考核作业提交，后期据实际情况考虑上线运行。 本软件初期版本定位用户为本校在校学生，为学生提供发布和接取帮助任务的平台，对于具体任务内容本软件做力所能及的监管，以尽力确保符合国家相关法律法规和学校相关规定，但不予承担相关法律法规以外的责任。</p><h3 id="用户特点"><a href="#用户特点" class="headerlink" title="用户特点"></a>用户特点</h3><p>使用用户：主要为高校大学生群体，了解智能手机、电子商务与移动支付相关知识。 维护用户：掌握相关软件开发和维护技术，营销或管理技能的高校大学生。 初步认为本软件涉及用户生活的方方面面，被使用的频率可能较高，反馈和维护机制需要做到及时和准确。</p><h3 id="假定和约束"><a href="#假定和约束" class="headerlink" title="假定和约束"></a>假定和约束</h3><p>本软件开发并无经费支持。 相关技术学习的时间不得多于四周（一个月），本软件开发时间不得多于两周，完成时间不得超过2017-2018第二学期第九周</p><h2 id="需求规定"><a href="#需求规定" class="headerlink" title="需求规定"></a>需求规定</h2><h3 id="功能规定"><a href="#功能规定" class="headerlink" title="功能规定"></a>功能规定</h3><h4 id="功能概述"><a href="#功能概述" class="headerlink" title="功能概述"></a>功能概述</h4><table><thead><tr><th>使用用户</th><th>维护人员</th><th>开发者</th></tr></thead><tbody><tr><td>用户注册（<a href="#i-13">见用户注册陆模块</a>）</td><td>注册日志（见注册日志模块）</td><td></td></tr><tr><td>用户登陆（<a href="#i-14">见用户登陆模块</a>）</td><td>登陆日志（见登陆日志模块）</td><td></td></tr><tr><td>发布需求（<a href="#i-15">见发布需求模块</a>）</td><td>往来日志（见往来日志模块）</td><td></td></tr><tr><td>接取需求（<a href="#i-16">见接取需求模块</a>）</td><td>咨询回复（见咨询回复模块）</td><td></td></tr><tr><td>沟通与联系（<a href="#i-17">见沟通与联系模块</a>）</td><td>投诉处理（见投诉处理模块）</td><td></td></tr><tr><td>咨询与投诉（<a href="#i-18">见咨询与投诉模块</a>）</td><td>需求审核（见需求审核模块）</td><td></td></tr><tr><td>定位(<a href="#i-19">见定位模块</a>)</td><td>用户审核（见用户审核模块）</td><td></td></tr></tbody></table><h4 id="用户注册模块"><a href="#用户注册模块" class="headerlink" title="用户注册模块"></a>用户注册模块</h4><table><thead><tr><th>项目</th><th>是否必须</th><th>备注</th></tr></thead><tbody><tr><td>账号</td><td>*</td><td>字母、数字、下划线</td></tr><tr><td>用户名</td><td>*</td><td>汉字、字母、数字、下划线</td></tr><tr><td>手机</td><td></td><td>用作账号</td></tr><tr><td>邮箱</td><td></td><td>用作账号</td></tr><tr><td>QQ</td><td></td><td>用作账号</td></tr><tr><td>微信</td><td></td><td>用作账号</td></tr><tr><td>密码</td><td>*</td><td>八位数以上数字字母组合</td></tr><tr><td>学校</td><td>*</td><td></td></tr><tr><td>学号</td><td>*</td><td></td></tr><tr><td>院系</td><td></td><td></td></tr><tr><td>专业</td><td></td><td></td></tr><tr><td>班级</td><td></td><td></td></tr><tr><td>姓名</td><td>*</td><td>实名认证信息</td></tr><tr><td>身份证号码</td><td>*</td><td>实名认证信息</td></tr></tbody></table><h4 id="用户登陆模块"><a href="#用户登陆模块" class="headerlink" title="用户登陆模块"></a>用户登陆模块</h4><table><thead><tr><th>用户类别</th><th>权限等级（见用户权限说明）</th></tr></thead><tbody><tr><td>开发者</td><td>1</td></tr><tr><td>维护人员</td><td>2</td></tr><tr><td>使用者</td><td>3</td></tr></tbody></table><h4 id="发布需求模块"><a href="#发布需求模块" class="headerlink" title="发布需求模块"></a>发布需求模块</h4><table><thead><tr><th>项目</th><th>说明</th></tr></thead><tbody><tr><td>发布需求按钮（见UI设计）</td><td>进入发布需求界面</td></tr><tr><td>获取位置信息</td><td>允许更改信息</td></tr><tr><td>发布人信息</td><td>自动补充已存在信息</td></tr><tr><td>需求说明</td><td>手动输入</td></tr><tr><td>设置发布时间</td><td>立即或计划任务</td></tr><tr><td>设置需求有效接取时间</td><td>自发布成功后开始倒计时，过期自动取消，不得少于10分钟</td></tr><tr><td>设置完成时间</td><td>自接取成功后开始倒计时，逾期按规定扣费，详见发布、接取规则说明，不得少于10分钟</td></tr><tr><td>设置酬金</td><td>预付或到付</td></tr><tr><td>发布按钮</td><td>发布需求</td></tr><tr><td></td><td>历史记录保存最近一周发布的需求</td></tr></tbody></table><h4 id="接取需求模块"><a href="#接取需求模块" class="headerlink" title="接取需求模块"></a>接取需求模块</h4><table><thead><tr><th>项目</th><th>说明</th></tr></thead><tbody><tr><td>接取需求按钮（见UI设计)</td><td>进入接取需求界面</td></tr><tr><td>获取位置信息</td><td>可设置显示最近多少公里的需求，最少1公里，默认3公里</td></tr><tr><td>需求列表</td><td>可按距离、酬金、有效接取时间排序</td></tr><tr><td>点击需求查看详情</td><td></td></tr><tr><td>接取</td><td>满足接取条件则接取成功，详见发布、接取规则说明</td></tr><tr><td>洽谈</td><td>就当前需求与发布方洽谈，以求双方满意的方案，详见洽谈模块</td></tr><tr><td>举报</td><td>若发现发布者或需求内容有明显违规内容，可向系统举报，核实后将移除该信息，详见违规处理</td></tr><tr><td></td><td>历史记录保存最近一周接取的需求</td></tr></tbody></table><h4 id="沟通与联系模块（洽谈模块）"><a href="#沟通与联系模块（洽谈模块）" class="headerlink" title="沟通与联系模块（洽谈模块）"></a>沟通与联系模块（洽谈模块）</h4><table><thead><tr><th>项目</th><th>说明</th></tr></thead><tbody><tr><td>沟通</td><td>需求发布人与需求接取人能够相互沟通</td></tr></tbody></table><h4 id="咨询与投诉模块"><a href="#咨询与投诉模块" class="headerlink" title="咨询与投诉模块"></a>咨询与投诉模块</h4><table><thead><tr><th>项目</th><th>说明</th></tr></thead><tbody><tr><td>咨询</td><td>向客服咨询、留言</td></tr><tr><td>投诉</td><td>对有明显违规的用户进行投诉、举报</td></tr><tr><td>查看进度</td><td>查看留言处理或投诉处理进度</td></tr></tbody></table><h4 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h4><table><thead><tr><th>项目</th><th>说明</th></tr></thead><tbody><tr><td>所有用户</td><td>LBS开放API，大致定位</td></tr><tr><td>本校用户</td><td>WLAN连接定位，精确定位</td></tr></tbody></table><h4 id="注册日志模块"><a href="#注册日志模块" class="headerlink" title="注册日志模块"></a>注册日志模块</h4><table><thead><tr><th>项目</th><th>说明</th></tr></thead><tbody><tr><td>查看注册日志</td><td>维护人员查看近期注册用户信息，并做用户审核操作</td></tr></tbody></table><h4 id="登陆日志模块"><a href="#登陆日志模块" class="headerlink" title="登陆日志模块"></a>登陆日志模块</h4><table><thead><tr><th>项目</th><th>说明</th></tr></thead><tbody><tr><td>查看登陆日志</td><td>维护人员查看近期登陆用户信息，并做用户审核操作</td></tr></tbody></table><h4 id="往来日志模块"><a href="#往来日志模块" class="headerlink" title="往来日志模块"></a>往来日志模块</h4><table><thead><tr><th>项目</th><th>说明</th></tr></thead><tbody><tr><td>查看往来日志</td><td>维护人员查看近期往来记录，对往来用户及往来信息做审核操作</td></tr></tbody></table><h4 id="咨询回复模块"><a href="#咨询回复模块" class="headerlink" title="咨询回复模块"></a>咨询回复模块</h4><table><thead><tr><th>项目</th><th>说明</th></tr></thead><tbody><tr><td>咨询回复</td><td>对用户咨询的问题做回复</td></tr></tbody></table><h4 id="投诉处理模块"><a href="#投诉处理模块" class="headerlink" title="投诉处理模块"></a>投诉处理模块</h4><table><thead><tr><th>项目</th><th>说明</th></tr></thead><tbody><tr><td>投诉处理</td><td>对用户投诉做相应处理与回复</td></tr></tbody></table><h4 id="需求审核模块"><a href="#需求审核模块" class="headerlink" title="需求审核模块"></a>需求审核模块</h4><table><thead><tr><th>项目</th><th>说明</th></tr></thead><tbody><tr><td>需求审核</td><td>维护人员对近期发布的需求做审核操作，根据结果做相应处理</td></tr></tbody></table><h4 id="用户审核模块"><a href="#用户审核模块" class="headerlink" title="用户审核模块"></a>用户审核模块</h4><table><thead><tr><th>项目</th><th>说明</th></tr></thead><tbody><tr><td>用户审核</td><td>保留用户近一周的活动记录，维护人员做审核操作，根据结果做相应处理</td></tr></tbody></table><h2 id="待补充"><a href="#待补充" class="headerlink" title="待补充"></a>待补充</h2><blockquote><p>信用评分机制</p><blockquote><p>与阿里芝麻信用分挂钩</p></blockquote><p>押金机制</p><blockquote><p>所有用户押金制 交易双方协商押金制</p></blockquote><p>用户协议书 用户权限说明 发布、接取规则说明 洽谈模块 违规处理 UI设计</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> software-requirement-analysis </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Node.js v8.9.4 Documentation zh-cn</title>
      <link href="/!archived/node-js-v8-9-4-documentation-zh-cn/"/>
      <url>/!archived/node-js-v8-9-4-documentation-zh-cn/</url>
      
        <content type="html"><![CDATA[<h2 id="关于文档"><a href="#关于文档" class="headerlink" title="关于文档"></a>关于文档</h2><p>本文档的目标是从参考和概念角度全面解释Node.js的API，每一章节描述一个内嵌模块或者高级思想。</p><p>在合适的情况下，提供给事件处理的属性类型，方法参数和参数会在主题标题下逐条列出。</p><p>每个<code>.html</code>文档都有相应的<code>.json</code>文档，以结构化方式呈现相同的内容。这一功能是实验性的，是为使那些希望用文档做些编程工作的IDE和其它工具受益而添加的。</p><p>每一个<code>.html</code>和<code>.json</code>文件都是基于Node.js源码树中<code>doc/api</code>文件夹中相应的<code>.md</code>文件生成的。该文档使用<code>tools/doc/generate.js</code>程序生成。HTML模板位于<code>doc/template.html</code>。</p><p>如果文档有误，请<a href="https://github.com/nodejs/node/issues/new">提交问题</a>或者查看<a href="https://github.com/nodejs/node/blob/master/CONTRIBUTING.md">投稿指南</a>以了解如何提交补丁。</p><h3 id="稳定指数"><a href="#稳定指数" class="headerlink" title="稳定指数"></a>稳定指数</h3><p>文档每个章节都有稳定性标志。Node.js API仍然在做少许改动，随着它的成熟，API将更加可靠。一些被证实的、可靠的API几乎不大可能会变化，其它新增的，实验性的或者已知有危险的都在被重新设计的过程中。</p><p>稳定指数如下：</p><p>稳定度：0 -不赞成使用 该功能已知存在问题，可能计划进行更改。不要依赖它。使用它会导致发出警告。不应期望其向后兼容主要版本。</p><p>稳定度：1 -试验性的 此功能仍在积极开发中，在将来版本中可能受不向后兼容，甚至移除的影响。不建议在生产环境使用。</p><p>稳定度：2 -稳定的 这部分API被证明是良好的。与npm生态系统兼容性是最高优先级，除非绝对必要，否则不会发生变化</p><h3 id="JSON输出"><a href="#JSON输出" class="headerlink" title="JSON输出"></a>JSON输出</h3><p>稳定度：1 -试验性的</p><p>每个通过markdown生成的HTML文件都有一个对应的具有相同数据的JSON文件。</p><p>这个特性是 Node.js v0.6.12 新增的。该特性是试验的。</p><h3 id="系统调用和帮助页"><a href="#系统调用和帮助页" class="headerlink" title="系统调用和帮助页"></a>系统调用和帮助页</h3><p>系统调用定义了用户程序和底层系统之间的接口，例如<a href="http://man7.org/linux/man-pages/man2/open.2.html">open(2)</a>和<a href="http://man7.org/linux/man-pages/man2/read.2.html">read(2)</a>。Node函数简单封装了系统调用函数，例如<code>fs.open()</code>。相应的文档会描述系统调用如何工作。</p><p>提示：有些系统调用是BSD系统特有的，比如<a href="http://man7.org/linux/man-pages/man2/lchown.2.html">lchown(2)</a>。这意味着它只能在macOs和其它BSD衍生系统运行。不能在Linux系统上运行。</p><p>大多数Unix系统调用都有相应Windows版本，但Windows版本运行起来可能与Linux和macOS版本有差异。有时Unix系统调用不能在Windows上找到相应的语义版本。详见<a href="https://github.com/nodejs/node/issues/4760">议题4760</a></p><h2 id="使用及示例"><a href="#使用及示例" class="headerlink" title="使用及示例"></a>使用及示例</h2><h3 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h3><p><code>node [options] [v8 options] [script.js | -e &quot;script&quot; | - ] [arguments]</code></p><p>请参考<a href="https://nodejs.org/dist/latest-v8.x/docs/api/cli.html#cli_command_line_options">命令行选项</a>文档查看使用Node.js运行脚本的不同选项和方式</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>使用Node.js编写的web服务，响应<strong>Hello World</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">const http = require(&#x27;http&#x27;);</span><br><span class="line"></span><br><span class="line">const hostname = &#x27;127.0.0.1&#x27;;</span><br><span class="line">const port = 3000;</span><br><span class="line"></span><br><span class="line">const server = http.createServer((req, res) =&gt; &#123;</span><br><span class="line">  res.statusCode = 200;</span><br><span class="line">  res.setHeader(&#x27;Content-Type&#x27;, &#x27;text/plain&#x27;);</span><br><span class="line">  res.end(&#x27;Hello World\n&#x27;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(port, hostname, () =&gt; &#123;</span><br><span class="line">  console.log(`Server running at http://$&#123;hostname&#125;:$&#123;port&#125;/`);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>将以上代码放在<code>example.js</code>文件中，然后使用Node.js执行以启动服务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ node example.js</span><br><span class="line">Server running at http://127.0.0.1:3000/</span><br></pre></td></tr></table></figure><p>文档中的所有示例都能以相似的方法运行。</p><h2 id="断言-Assert"><a href="#断言-Assert" class="headerlink" title="断言(Assert)"></a>断言(Assert)</h2>]]></content>
      
      
      <categories>
          
          <category> docs </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Nodejs Documentation (zh-cn)</title>
      <link href="/!archived/nodejs-documentation-zh-cn/"/>
      <url>/!archived/nodejs-documentation-zh-cn/</url>
      
        <content type="html"><![CDATA[<h2 id="Docs"><a href="#Docs" class="headerlink" title="Docs"></a>Docs</h2><h3 id="关于文档"><a href="#关于文档" class="headerlink" title="关于文档"></a>关于文档</h3><p>网站上有如下几种类型的文档：</p><ul><li>API参考文档</li><li>ES6特性</li><li>常见问题解答</li><li>指引</li></ul><h4 id="API参考文档"><a href="#API参考文档" class="headerlink" title="API参考文档"></a>API参考文档</h4><p>API参考文档提供了Node.js中函数或对象的详细信息。文档指出了每一个方法接受的参数，返回值以及可能出现的错误，同时也声明了其在Node.js不同版本中是否可用。</p><p>文档详细描述了Node.js提供的内嵌模块，未介绍社区提供的模块。</p><blockquote><p>寻找之前发布的API文档？</p><ul><li><p><a href="https://nodejs.org/docs/latest-v7.x/api/">Node.js 7.x</a></p></li><li><p><a href="https://nodejs.org/docs/latest-v5.x/api/">Node.js 5.x</a></p></li><li><p><a href="https://nodejs.org/docs/latest-v4.x/api/">Node.js 4.x</a></p></li><li><p><a href="https://nodejs.org/docs/latest-v0.12.x/api/">Node.js 0.12.x</a></p></li><li><p><a href="https://nodejs.org/docs/latest-v0.10.x/api/">Node.js 0.10.x</a></p></li><li><p><a href="https://nodejs.org/docs/">全部版本</a></p></li></ul></blockquote><h4 id="ES6特性"><a href="#ES6特性" class="headerlink" title="ES6特性"></a>ES6特性</h4><p>ES6文档部分描述了3个ES6功能组，详细说明了Node.js默认支持的特性，并配上说明链接。文档也说明了如何寻找带有特定Node.js版本的V8版本</p><h4 id="指南"><a href="#指南" class="headerlink" title="指南"></a>指南</h4><p>深入了解关于Node.js技术上的特性和性能的文章</p><h2 id="ES6-and-beyong"><a href="#ES6-and-beyong" class="headerlink" title="ES6 and beyong"></a>ES6 and beyong</h2><h3 id="ECMAScript-2015-ES6-及更高版本"><a href="#ECMAScript-2015-ES6-及更高版本" class="headerlink" title="ECMAScript 2015 (ES6) 及更高版本"></a>ECMAScript 2015 (ES6) 及更高版本</h3><p>Node.js依<a href="https://developers.google.com/v8/">现代V8引擎</a>搭建。通过保持与V8引擎最新发布版的同步更新，我们确保将<a href="http://www.ecma-international.org/publications/standards/Ecma-262.htm">JavaScript ECMA-262 specification</a>的新特性即时带给Node.js开发者，同时不断地提高性能和稳定性。</p><p>所有ECMAScript 2015特性被分为装载(<strong>shipped</strong>)、暂定(<strong>staged</strong>)和开发中（<strong>in progress</strong>)三组：</p><ul><li><p>所有V8认为稳定并为Node.js默认支持的特性运行时不需要任何标记</p></li><li><p>V8团队认为不稳定的即将完成的特性运行时需要标记:<code>--harmony</code></p></li><li><p>虽然开发中的特性能单独被他们各自的和谐标记激活，但除了作测试用途，非常不鼓励这么做。提醒：这些标志由V8提供，可能会发生变化并且不作通知。</p></li></ul><h4 id="不同特性对应默认装载在哪些Node-js版本？"><a href="#不同特性对应默认装载在哪些Node-js版本？" class="headerlink" title="不同特性对应默认装载在哪些Node.js版本？"></a>不同特性对应默认装载在哪些Node.js版本？</h4><p><a href="http://node.green/">node.green</a>网站提供了对Node.js各版本中支持的ECMAScript特性的精彩概述，及基于kangax的兼容表格。</p><h4 id="哪些功能正在开发？"><a href="#哪些功能正在开发？" class="headerlink" title="哪些功能正在开发？"></a>哪些功能正在开发？</h4><p>新特性正持续被添加到V8引擎中。一般而言，我们希望能在将来的Node.js发布版中支持这些特性，虽然时间尚未可知。</p><p>在每一个Node.js发布版中你都可以通过参数<code>--v8-options</code>使用<code>grep</code>列出所有正在开发的功能。请注意，这些是尚未完成的并可能造成V8引擎崩溃的特性，若使用请自负风险。</p><p><code>node --v8-options | grep &quot;in progress&quot;</code></p><h4 id="每一个特性的性能如何？"><a href="#每一个特性的性能如何？" class="headerlink" title="每一个特性的性能如何？"></a>每一个特性的性能如何？</h4><p>V8团队持续努力提到新语言特性的性能以最终与原生EcmaScript 5及更早版本达到平衡。（注①:原文：**to eventually reach parity with their transpiled or native counterparts in EcmaScript 5 and earlier.**） 在网站<a href="https://fhinkel.github.io/six-speed">six-speed</a>上能跟踪当前进度，并展示了ES2015和未来ES版本与原生ES5特性比较。</p><p>ES2015及后续版本引入优化特性的工作经由<a href="https://docs.google.com/document/d/1EA9EbfnydAmmU_lM8R_uEMQ-U_v4l9zulePSBkeYWmY">performance plan</a>协调。V8团队收集并协调需要改进的地方，并设计文档解决问题。</p><h4 id="我搭建架构以使用-harmony标志。我应该移除它吗？"><a href="#我搭建架构以使用-harmony标志。我应该移除它吗？" class="headerlink" title="我搭建架构以使用--harmony标志。我应该移除它吗？"></a>我搭建架构以使用<code>--harmony</code>标志。我应该移除它吗？</h4><p>当前<code>--harmony</code>标志仅用于启用Node.js暂定(<strong>staged</strong>)的特性。毕竟，它现在与<code>--es_staging</code>相同。以上所提及的已完成的特性尚未确定其稳定性。如果你想要运行的安全，尤其是在生产环境中，考虑在V8默认装载前移除运行标志。如果你保持开启，你应该做好准备如果在将来Node.js的更新中V8改变了它们的含义以更贴近标准可能会破坏你的代码。</p><h4 id="我如何寻找V8哪个版本带有特定的Node-js版本？"><a href="#我如何寻找V8哪个版本带有特定的Node-js版本？" class="headerlink" title="我如何寻找V8哪个版本带有特定的Node.js版本？"></a>我如何寻找V8哪个版本带有特定的Node.js版本？</h4><p>Node.js提供了一个简单方法，通过<code>process</code>全局对象列出所有依赖和各自带有的特定二进制文件。如果是V8引擎，在你的终端输入以下命令以检索它的版本。</p><p><code>node -p process.versions.v8</code></p><h2 id="Inspector"><a href="#Inspector" class="headerlink" title="Inspector"></a>Inspector</h2><h3 id="调试Node-js应用"><a href="#调试Node-js应用" class="headerlink" title="调试Node.js应用"></a>调试Node.js应用</h3><p>许多工具和库能够帮助你调试你的Node.js应用。以下列出部分工具。</p><p>手动连接而不使用工具，传入<code>--inspect</code>参数并连接输出的URL。</p><p>如果一个进程不带<code>--inspect</code>启动，用<code>SIGUSR1</code>发送信号以激活调试器并打印链接URL。</p><hr><h3 id="审查工具和客户端"><a href="#审查工具和客户端" class="headerlink" title="审查工具和客户端"></a>审查工具和客户端</h3><p>这些商业或开源工具使得Node.js应用调试更加容易。</p><h4 id="node-inspect"><a href="#node-inspect" class="headerlink" title="node-inspect"></a><a href="https://github.com/nodejs/node-inspect">node-inspect</a></h4><ul><li><p>一个命令行界面调试器在<a href="https://github.com/nodejs/node-inspect">https://github.com/nodejs/node-inspect</a>开发</p></li><li><p>与Node.js捆绑，使用<code>node inspect myscript.js</code>启动</p></li><li><p>也能使用<code>npm insatll -g node-inspect</code>独立安装，使用使用<code>node inspect myscript.js</code>启动</p></li></ul><h4 id="Chrome-DevTools"><a href="#Chrome-DevTools" class="headerlink" title="Chrome DevTools"></a><a href="https://github.com/ChromeDevTools/devtools-frontend">Chrome DevTools</a></h4><ul><li><p><strong>选项一：</strong>在谷歌浏览器打开<code>chrome://inspect</code>。点击<strong>Open dedicated DevTools for Node</strong>的链接。</p></li><li><p><strong>选项二：</strong>安装谷歌扩展<strong>NIM (Node Inspector Manager)</strong> <a href="https://chrome.google.com/webstore/detail/nim-node-inspector-manage/gnhhdgbaldcilmgcpfddgdbkhjohddkj">Extension link</a></p></li></ul><h4 id="VS-Code-1-10"><a href="#VS-Code-1-10" class="headerlink" title="VS Code 1.10+"></a><a href="https://github.com/microsoft/vscode">VS Code</a> 1.10+</h4><ul><li>在调试面版，点击设置图标以打开<code>.vscode/launch.json</code>。选择<strong>Node.js</strong>以初始安装。</li></ul><h4 id="Visual-Studio"><a href="#Visual-Studio" class="headerlink" title="Visual Studio"></a><a href="https://github.com/Microsoft/nodejstools">Visual Studio</a></h4><ul><li><p>在菜单中选择<strong>Debug &gt; Start Dubgging</strong>或者按<strong>F5</strong></p></li><li><p><a href="https://github.com/Microsoft/nodejstools/wiki/Debugging">详细指导</a></p></li></ul><h4 id="JetBrains-WebStrom-2017-1-and-other-JetBrains-IDEs"><a href="#JetBrains-WebStrom-2017-1-and-other-JetBrains-IDEs" class="headerlink" title="JetBrains WebStrom 2017.1+ and other JetBrains IDEs"></a><a href="https://www.jetbrains.com/webstorm/">JetBrains WebStrom</a> 2017.1+ and other JetBrains IDEs</h4><ul><li>创建新的Node.js调试配置</li></ul><h4 id="谷歌远程接口-chrome-remote-interface"><a href="#谷歌远程接口-chrome-remote-interface" class="headerlink" title="谷歌远程接口(chrome-remote-interface)"></a><a href="https://github.com/cyrus-and/chrome-remote-interface">谷歌远程接口(chrome-remote-interface)</a></h4><ul><li>工具库以减少与Inspector Protocol端的连接</li></ul><hr><h3 id="命令行选项"><a href="#命令行选项" class="headerlink" title="命令行选项"></a>命令行选项</h3><p>以下列表列出对调试起重要作用的几个<strong>runtime flags</strong></p><table><thead><tr><th align="center"><strong>Flag</strong></th><th><strong>Meaning</strong></th></tr></thead><tbody><tr><td align="center"><code>--inspect</code></td><td>* 启用监视器代理</td></tr><tr><td align="center"></td><td>* 监听默认地址和端口(127.0.0.1:9229)</td></tr><tr><td align="center"><code>--inspect=[host:port]</code></td><td>* 启用监视器代理</td></tr><tr><td align="center"></td><td>* 绑定地址或者主机名（默认：127.0.0.1）</td></tr><tr><td align="center"></td><td>* 监听端口（默认：9229）</td></tr><tr><td align="center"><code>--inspect-brk</code></td><td>* 启用监视器代理</td></tr><tr><td align="center"></td><td>* 监听默认地址和端口（127.0.0.1：9229）</td></tr><tr><td align="center"></td><td>* 在用户代码开始前停止</td></tr><tr><td align="center"><code>--inspect-brk=[host:port]</code></td><td>* 启用监视器代理</td></tr><tr><td align="center"></td><td>* 绑定地址或主机名（默认：127.0.0.1）</td></tr><tr><td align="center"></td><td>* 监听端口（默认：9229）</td></tr><tr><td align="center"></td><td>* 在用户代码开始前停止</td></tr><tr><td align="center"><code>node inspect script.js</code></td><td>* 产生子进程以<code>--inspect</code>运行用户脚本，使用主进程运行命令行界面调试器</td></tr></tbody></table><h2 id="Node-js-v8-9-4-Documentation"><a href="#Node-js-v8-9-4-Documentation" class="headerlink" title="Node.js v8.9.4 Documentation"></a><a href="/node-js-v8-9-4-documentation-zh-cn/">Node.js v8.9.4 Documentation</a></h2>]]></content>
      
      
      <categories>
          
          <category> nodejs-docs-zh-cn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node-js </tag>
            
            <tag> documentation </tag>
            
            <tag> translation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ajax Packaged</title>
      <link href="/!archived/ajax-packaged/"/>
      <url>/!archived/ajax-packaged/</url>
      
        <content type="html"><![CDATA[<p><strong>try to pakage ajax by myself</strong></p><p><strong>optional paramas:</strong></p><ul><li>method: get(default) post</li><li>url</li><li>data: Allow Type: Object, FormData</li><li>dataType: Object(default) , auto translate to urldecode json file</li><li>async: true(default) false</li><li>showProgress: if dataType is “file” and this is a function, it will be called instantly</li><li>success: callback function while request successfully param: server responseText</li><li>fail: callback funciton while request failed</li></ul><p><strong>main function</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line">function ajax(options)&#123;</span><br><span class="line">    var opt = &#123;</span><br><span class="line">        method: &quot;GET&quot;,</span><br><span class="line">        async: true,</span><br><span class="line">    &#125;</span><br><span class="line">    //if browser dosen&#x27;t support Object.assign() you can define by yourself</span><br><span class="line">    Object.assign(opt,options)</span><br><span class="line">    if(!opt.url) return</span><br><span class="line">    var XMLHttp = null</span><br><span class="line">    if(XMLHttpRequest)&#123;</span><br><span class="line">        XMLHttp = new XMLHttpRequest()</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        XMLHttp = new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">    //method: post</span><br><span class="line">    if(!!opt.method &amp;&amp; opt.method.toUpperCase() == &quot;POST&quot;)&#123;</span><br><span class="line">        XMLHttp.open(&quot;POST&quot;,opt.url,opt.async)</span><br><span class="line">        //dataType: json</span><br><span class="line">        if(!!opt.dataType &amp;&amp; opt.dataType.toUpperCase() == &quot;JSON&quot;)&#123;</span><br><span class="line">            opt.postData = JSON.stringify(opt.data)</span><br><span class="line">            XMLHttp.setRequestHeader(&quot;Content-Type&quot;,&quot;application/json&quot;)</span><br><span class="line">            XMLHttp.send(opt.postData)</span><br><span class="line">        &#125;</span><br><span class="line">        //dataType: file</span><br><span class="line">        else if(!!opt.dataType &amp;&amp; opt.dataType.toUpperCase() == &quot;FILE&quot;)&#123;</span><br><span class="line">            XMLHttp.send(opt.data)</span><br><span class="line">        &#125;</span><br><span class="line">        //dataType: Object</span><br><span class="line">        else&#123;</span><br><span class="line">            var param = []</span><br><span class="line">            for(var key in opt.data)&#123;</span><br><span class="line">                if(opt.data.hasOwnProperty(key))&#123;</span><br><span class="line">                    param.push(key+&quot;=&quot;+opt.data[key])</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            opt.postData = param.join(&#x27;&amp;&#x27;)</span><br><span class="line">            var urlparams = opt.url.slice(opt.url.indexOf(&#x27;?&#x27;)+1)</span><br><span class="line">            if(urlparams.indexOf(&#x27;?&#x27;) == -1)&#123;</span><br><span class="line">                opt.postData.concat(&#x27;&amp;&#x27;+urlparams)</span><br><span class="line">            &#125;</span><br><span class="line">            XMLHttp.setRequestHeader(&#x27;Content-Type&#x27;, &#x27;application/x-www-form-urlencoded;charset=utf-8&#x27;)</span><br><span class="line">            XMLHttp.send(opt.postData)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    //method: get</span><br><span class="line">    else if(opt.method.toUpperCase() === &quot;GET&quot;)&#123;</span><br><span class="line">        var params = []</span><br><span class="line">        if(!!opt.data)&#123;</span><br><span class="line">            for(var key in opt.data)&#123;</span><br><span class="line">                if(opt.data.hasOwnProperty(key))&#123;</span><br><span class="line">                    params.push(key + &#x27;=&#x27; + opt.data[key])</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            opt.postData = params.join(&#x27;&amp;&#x27;)</span><br><span class="line">        &#125;</span><br><span class="line">        if(!!opt.postData)&#123;</span><br><span class="line">            opt.url.concat(&#x27;&amp;&#x27;+opt.postData)</span><br><span class="line">        &#125;</span><br><span class="line">        XMLHttp.open(&#x27;GET&#x27;,opt.url,opt.async)</span><br><span class="line">        XMLHttp.send()</span><br><span class="line">    &#125;</span><br><span class="line">    //handle response</span><br><span class="line">    if(!!opt.dataType &amp;&amp; opt.dataType.toUpperCase() == &quot;FILE&quot; &amp;&amp; typeof opt.showProgress == &quot;function&quot;)&#123;</span><br><span class="line">        if(&quot;onprogress&quot; in (new XMLHttpRequest))&#123;</span><br><span class="line">            XMLHttp.onprogress = function(e)&#123;</span><br><span class="line">                if(e.lengthComputable)&#123;</span><br><span class="line">                    var percent = Math.round(100*e.loaded/e.total)+&quot;%&quot;</span><br><span class="line">                    opt.showProgress(percent)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            XMLHttp.onload = function()&#123;</span><br><span class="line">                var MSG = JSON.parse(request.responseText);</span><br><span class="line">                opt.success(MSG)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            XMLHttp.onreadystatechange = function()&#123;</span><br><span class="line">                if(XMLHttp.readyState == 4)&#123;</span><br><span class="line">                    if(XMLHttp.status == 200)&#123;</span><br><span class="line">                        var res = XMLHttp.responseText</span><br><span class="line">                        try&#123;</span><br><span class="line">                            res = JSON.parse(res)</span><br><span class="line">                        &#125;catch(e)&#123;</span><br><span class="line">                            console.warn(e)</span><br><span class="line">                        &#125;</span><br><span class="line">                        return !!opt.success?opt.success(res):null</span><br><span class="line">                    &#125;else&#123;</span><br><span class="line">                        return !!opt.fail?opt.fail(XMLHttp.status,XMLHttp.statusText):null</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        XMLHttp.onreadystatechange = function()&#123;</span><br><span class="line">            if(XMLHttp.readyState == 4)&#123;</span><br><span class="line">                if(XMLHttp.status == 200)&#123;</span><br><span class="line">                    var res = XMLHttp.responseText</span><br><span class="line">                    try&#123;</span><br><span class="line">                        res = JSON.parse(res)</span><br><span class="line">                    &#125;catch(e)&#123;</span><br><span class="line">                        console.warn(e)</span><br><span class="line">                    &#125;</span><br><span class="line">                    return !!opt.success?opt.success(res):null</span><br><span class="line">                &#125;else&#123;</span><br><span class="line">                    return !!opt.fail?opt.fail(XMLHttp.status,XMLHttp.statusText):null</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ajax </tag>
            
            <tag> javascript </tag>
            
            <tag> summary </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Class4 Website</title>
      <link href="/!archived/class4-website/"/>
      <url>/!archived/class4-website/</url>
      
        <content type="html"><![CDATA[<p><a href="https://class4.poryoung.cn/">click to visit website</a></p><ul><li><p><strong>website constructure</strong> <strong>-index.php</strong> <strong>-announce.php</strong> <strong>-favicon.ico</strong> <strong>-api</strong> —download.php —handle.php —sendMessage.php <strong>-admin</strong> —adminLogin.php —adminLogin_handle.php —adminSystem.php —announceAdd.php —annouceManager.php —annouceModify.php —annouceModifyHandle.php —destroyLogin.php —downFile.php —fileManage.php —handle_function.php —loginCheck.php —messageManage.php —signUp.php —signUp_handle.php —userManage.php —config.php —connect.php <strong>-css</strong> <strong>-js</strong> <strong>-img</strong> <strong>-music</strong> <strong>-fla</strong> <strong>-database_back</strong> <strong>-version</strong></p></li><li><p><strong>connect with mysql database</strong></p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * config.php</span></span><br><span class="line"><span class="comment"> * define mysql connect infomation</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;HOST&#x27;</span>,<span class="string">&#x27;localhost&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;USERNAME&#x27;</span>,<span class="string">&#x27;root&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;PASSWORD&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * connect.php</span><br><span class="line"> * connect to mysql database</span><br><span class="line"> */</span><br><span class="line">//require config file</span><br><span class="line">require_once(&#x27;config.php&#x27;);</span><br><span class="line">//connect with daatabase</span><br><span class="line">if(!$conn = mysqli_connect(HOST,USERNAME,PASSWORD))&#123;</span><br><span class="line">    echo mysqli_error($conn);</span><br><span class="line">&#125;</span><br><span class="line">//select databse</span><br><span class="line">if(!mysqli_select_db($conn,&#x27;database name&#x27;))&#123;</span><br><span class="line">    echo mysqli_error($conn);</span><br><span class="line">&#125;</span><br><span class="line">//set character sets</span><br><span class="line">if(!mysqli_query($conn,&#x27;SET NAMES UTF8&#x27;))&#123;</span><br><span class="line">    echo mysqli_error($conn);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>file handle</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">//define function readDirectory(path)</span><br><span class="line">function readDirectory($path)&#123;</span><br><span class="line">    //open dir and save as variable $handle</span><br><span class="line">    $handle = opendir($path);</span><br><span class="line">    $arr = null;</span><br><span class="line">    while(($item = readdir($handle)) !== false)&#123;</span><br><span class="line">        //read successful and exclude the condition, dot and double dots(. &amp; ..)</span><br><span class="line">        if ($item!=&quot;.&quot;&amp;&amp;$item!=&quot;..&quot;) &#123;</span><br><span class="line">            //test if is file</span><br><span class="line">            if (is_file($path.&quot;/&quot;.$item)) &#123;</span><br><span class="line">                $arr[&#x27;file&#x27;][] = $item;</span><br><span class="line">            &#125;</span><br><span class="line">            if (is_dir($path.&quot;/&quot;.$item)) &#123;</span><br><span class="line">                $arr[&#x27;dir&#x27;][] = $item;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    closedir($handle);</span><br><span class="line">    return $arr;</span><br><span class="line">&#125;</span><br><span class="line">//get file size : filesize($path)</span><br><span class="line">//get extension name : explode(&#x27;.&#x27;,$filename)</span><br><span class="line">//delete file : unlink($path)</span><br><span class="line">//define function uploadFile($file)</span><br><span class="line">function uploadFile($file)&#123;</span><br><span class="line">    $fileName = $file[&#x27;NAME&#x27;][&#x27;name&#x27;];</span><br><span class="line">    $fileType = $file[&#x27;NAME&#x27;][&#x27;type&#x27;];</span><br><span class="line">    $fileTempName = $file[&#x27;NAME&#x27;][&#x27;tmp_name&#x27;];</span><br><span class="line">    $fileError = $file[&#x27;NAME&#x27;][&#x27;error&#x27;];</span><br><span class="line">    $fileSize = $file[&#x27;NAME&#x27;][&#x27;size&#x27;];</span><br><span class="line">    if($fileError == UPLOAD_ERR_OK || $fileError == 0)&#123;</span><br><span class="line">        $fileName = &#x27;other path or new file name&#x27;;</span><br><span class="line">        //use function copy() or move_uploaded_file()</span><br><span class="line">        if(@copy($fileTempName, $fileName))&#123;</span><br><span class="line">            //upload successful</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            //upload fail</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        //upload fail</span><br><span class="line">        switch($fileError)&#123;</span><br><span class="line">            //1 the size of upload file is bigger than the setting &quot;upload_max_filesize&quot; in php.ini</span><br><span class="line">            //2 the size of upload file is bigger than the setting of html form &quot;MAX_FILE_SIZE&quot;</span><br><span class="line">            //3 partly uploaded</span><br><span class="line">            //4 haven&#x27;t chosen files</span><br><span class="line">            //6 cannot find temp dir</span><br><span class="line">            //others : system error</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">//download file from front end</span><br><span class="line">header(&#x27;Content-Disposition: attachment; filename=&#x27;.$name);</span><br><span class="line">header(&#x27;Content-Length:&#x27;.filesize($filename));</span><br><span class="line">readfile($filename);</span><br></pre></td></tr></table></figure><ul><li><strong>session</strong> <code>$_SESSION[name]</code> <code>isset($_SESSION[name])</code> <code>session_start()</code> <code>session_destroy()</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Plugin Plants.VS.Zombies</title>
      <link href="/!archived/plugin-plants-vs-zombies/"/>
      <url>/!archived/plugin-plants-vs-zombies/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> win32应用 </tag>
            
            <tag> plugin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wordpress plugins records</title>
      <link href="/!archived/wordpress-plugins-records/"/>
      <url>/!archived/wordpress-plugins-records/</url>
      
        <content type="html"><![CDATA[<ul><li><p><strong>a3 Lazy Load</strong> load images and other resources when needed.</p><ul><li><p><strong>Crayon Syntax Highlighter</strong> highlight programming codes &amp; support lots of languages.</p></li><li><p><strong>DX-Watermark</strong> automatic add watermark for images &amp; support watermark type : text and image.</p></li><li><p><strong>Enable Media Replace</strong> convenient to replace media uploaded without modifying media info.</p></li><li><p><strong>EWWW Image Optimizer</strong> auto optimaze image.</p></li><li><p><strong>Image Watermark</strong> add image watermark for images &amp; support disable righ click&amp;drag events.</p></li><li><p><strong>Media Library Assistant</strong> convenient to manage media library with adding categories &amp; tags for media.</p></li><li><p><strong>Menu Icons</strong> icons &amp; fonts library.</p></li><li><p><strong>Netease Music</strong> a nice plugin for fetching your netease music albums &amp; musics &amp; adding to your homepage.</p></li><li><p><strong>Simple User Avatar</strong> help you use images in your media library as your avatar.</p></li><li><p><strong>Wordfence Security</strong> a good plugin defend your website against attacking.</p></li><li><p><strong>WP Editor.md</strong> an editor that supports markdown language.</p></li><li><p><strong>WP Fastest Cache</strong> cache system for your site to make it run faster.</p></li><li><p><strong>WP-Piwik</strong> Adds Piwik statistics to your WordPress dashboard and is also able to add the Piwik Tracking Code to your blog.</p></li><li><p><strong>WP文件管理器</strong> a free wp files manager.</p></li></ul></li></ul><blockquote><p>keeping updating……</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> summary </tag>
            
            <tag> wordpress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Game 2048</title>
      <link href="/!archived/game-2048/"/>
      <url>/!archived/game-2048/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c-c </tag>
            
            <tag> win32应用 </tag>
            
            <tag> 项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Game Snake</title>
      <link href="/!archived/game-snake/"/>
      <url>/!archived/game-snake/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c-c </tag>
            
            <tag> win32应用 </tag>
            
            <tag> 项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Game Tetris</title>
      <link href="/!archived/game-tetris/"/>
      <url>/!archived/game-tetris/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c-c </tag>
            
            <tag> win32应用 </tag>
            
            <tag> 项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十九大小结</title>
      <link href="/!archived/%E5%8D%81%E4%B9%9D%E5%A4%A7%E5%B0%8F%E7%BB%93/"/>
      <url>/!archived/%E5%8D%81%E4%B9%9D%E5%A4%A7%E5%B0%8F%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>2018-03-09 19:05:15 星期五</p><blockquote><p>相关资料</p></blockquote><p>①聚焦：解读十九大报告<a href="http://news.cctv.com/special/jujiao/2017/baogao/index.shtml">http://news.cctv.com/special/jujiao/2017/baogao/index.shtml</a></p><p>②<a href="https://www.hk01.com/%E5%85%A9%E5%B2%B8/127809/-%E5%88%86%E6%9E%90-%E5%8D%81%E4%B9%9D%E5%A4%A7%E5%A0%B1%E5%91%8A%E6%8F%90%E4%BC%81%E6%A5%AD%E5%AE%B6%E7%B2%BE%E7%A5%9E-%E6%B0%91%E4%BC%81%E7%88%B2%E4%BD%95%E8%A6%81%E5%BB%BA%E9%BB%A8%E6%94%AF%E9%83%A8-">十九大報告提企業家精神　民企爲何要建黨支部</a></p><p>③十九大报告解读 <a href="http://www.iolaw.org.cn/web/special/2017/new.aspx?id=61316">http://www.iolaw.org.cn/web/special/2017/new.aspx?id=61316</a></p><p>④韩庆祥：十二个“新”解读十九大报告 <a href="http://www.xinhuanet.com/interview/19dbgjd/sjdbgjd01.htm">http://www.xinhuanet.com/interview/19dbgjd/sjdbgjd01.htm</a></p><p>⑤十九大报告 <a href="http://ces.ustb.edu.cn/uploads/soft/171019/26/_1651285121.pdf">http://ces.ustb.edu.cn/uploads/soft/171019/26\_1651285121.pdf</a></p><p>⑥十九大脉络 <a href="https://rmrbcmsonline.peopleapp.com/upload/image/19da.pdf">https://rmrbcmsonline.peopleapp.com/upload/image/19da.pdf</a></p><p>⑦中共十九大官网 <a href="http://www.12371.cn/special/19da/">http://www.12371.cn/special/19da/</a></p><p>⑧维基百科：习近平中国特色社会主义思想 <a href="https://zh.wikipedia.org/wiki/%E4%B9%A0%E8%BF%91%E5%B9%B3%E6%96%B0%E6%97%B6%E4%BB%A3%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E6%80%9D%E6%83%B3">https://zh.wikipedia.org/wiki/%E4%B9%A0%E8%BF%91%E5%B9%B3%E6%96%B0%E6%97%B6%E4%BB%A3%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E6%80%9D%E6%83%B3</a></p><p>⑨习近平报告专集 <a href="http://www.xinhuanet.com/politics/leaders/2017-12/25/c/_1122164583.htm">http://www.xinhuanet.com/politics/leaders/2017-12/25/c\_1122164583.htm</a></p><blockquote><p>经济建设问题和反腐问题小结</p></blockquote><p><strong>形成了“习核心”，“习思想”，“习中特”（习近平新时代中国特色社会主义思想）</strong></p><p><strong>当前主要矛盾已经从人民日益增长的物质文化需要同落后的生产力的矛盾转变为人民对美好生活的向往同发展不平衡不充分的矛盾</strong></p><blockquote><p>要认识新矛盾、顺应新形势、展现新作为，紧紧围绕解决发展不平衡不充分问题，贯彻新发展理念，深化供给侧结构性改革，实现更有质量和效益的发展；发展社会主义民主政治，用制度体系保证人民当家作主；推动法治建设，促进社会公平正义；推动社会主义文化繁荣兴盛，更好满足人民精神文化生活需要；提高保障和改善民生水平，打赢脱贫攻坚战，多谋民生之利，多解民生之忧；加强和创新社会治理，确保人民安居乐业；建设生态文明，推动形成人与自然和谐发展现代化建设新格局。</p></blockquote><p><strong>关于经济建设的主要思想包括：</strong></p><ul><li><p>坚持加强党对经济工作的集中统一领导，保证我国经济沿着正确方向发展；</p></li><li><p>坚持以人民为中心的发展思想，贯穿到统筹推进“五位一体”总体布局和协调推进“四个全面”战略布局之中；</p></li><li><p>坚持适应把握引领经济发展新常态，立足大局，把握规律；</p></li><li><p>坚持使市场在资源配置中起决定性作用，更好发挥政府作用，坚决扫除经济发展的体制机制障碍；</p></li><li><p>坚持适应我国经济发展主要矛盾变化完善宏观调控，相机抉择，开准药方，把推进供给侧结构性改革作为经济工作的主线；</p></li><li><p>坚持问题导向部署经济发展新战略，对我国经济社会发展变革产生深远影响；</p></li><li><p>坚持正确工作策略和方法，稳中求进，保持战略定力、坚持底线思维，一步一个脚印向前迈进</p></li></ul><p><strong>关于反腐方面报告中相关的内容：</strong></p><ul><li>明确提出：要夺取反腐败斗争压倒性胜利。</li></ul><blockquote><ul><li><p>坚定目标</p></li><li><p>完善法制: 推进反腐败国家立法</p></li><li><p>健全党和国家监督体系: 深化国家监察体制改革，将试点工作在全国推开</p></li><li><p>持之以恒正风肃纪: 巩固拓展落实中央八项规定精神成果</p></li><li><p>加强政治思想建设: 在全党开展“不忘初心、牢记使命”主题教育。</p></li></ul></blockquote><hr><blockquote><p>“坚持反腐无禁区、全覆盖、零容忍，坚定不移‘打虎’、‘拍蝇’、‘猎狐’，不敢腐的目标初步实现、不能腐的笼子越扎越牢，不想腐的堤坝正在构筑…”</p><p>“要强化不敢腐的震慑，扎牢不敢腐的笼子，增强不敢腐的自觉，通过不懈努力换来海晏清河、朗朗乾坤”</p><p>“中國特色社會主義進入新時代，必須毫不動搖堅持和完善黨的領導，把黨建設得更加堅強有力。全面從嚴治黨永遠在路上。一個政黨，一個政權，其前途命運取決於人心向背。”</p><p>“全面從嚴治黨納入「四個全面」戰略布局，堅定不移推進黨風廉政建設和反腐敗鬥爭，老虎、蒼蠅一起打，持續保持高壓態勢”</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> temp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 政治 </tag>
            
            <tag> 十九大 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>毛泽东思想与中国特色社会主义概论</title>
      <link href="/!archived/%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E6%A6%82%E8%AE%BA/"/>
      <url>/!archived/%E6%AF%9B%E6%B3%BD%E4%B8%9C%E6%80%9D%E6%83%B3%E4%B8%8E%E4%B8%AD%E5%9B%BD%E7%89%B9%E8%89%B2%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E6%A6%82%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<ul><li><p>邓小平理论首要的基本理论问题是<strong>什么是社会主义，怎样建设社会主义</strong></p></li><li><p>第一次鲜明提出“马克思主义中国化”的命题和任务的会议是<strong>党的六届六中全会</strong></p><blockquote><p>p.s 党的二大主要提出了党的最高纲领和最低纲领；党的七大确立了毛泽东思想为党的指导思想，写进党章。  </p></blockquote></li><li><p>科学发展观把发展作为第一要义，以人为本为核心，统筹兼顾为根本方法，全面协调可持续发展为基本要求</p><blockquote><p>以人为本的“人”是具体的、现实的人，指的是广大人民群众和社会全体成员，指的是“人”的集体概念，而不是个体的人  </p></blockquote></li><li><p>十一届三中全会以来，党坚持实事求是的思想路线，以实践基础上的理论创新回答了一系列理论和实践问题，相继形成了邓论三科，开拓了马克思主义在中国发展的新境界</p><blockquote><p>邓小平理论初步回答了“什么是社会主义，怎样建设社会主义”这个首要的基本理论问题；“三个代表”重要思想进一步回答了什么是社会主义，怎样建设社会主义以及创造性地回答了建设什么样的党，怎样建设党的问题；科学发展观则进一步回答了实现什么样的发展，怎样发展这一关系到中国未来前途和命运的重大问题  </p></blockquote></li><li><p>中国共产党在把马克思列宁主义基本原理与中国革命实际相结合的过程中，在学风问题上曾经反对过的主要错误倾向是<strong>经验主义</strong>、<strong>教条主义</strong></p><blockquote><p>主观主义学风是指理论与实际不一致，看待问题和做工作时只基于思想观点，不从实际出发，存在两种极端性的倾向：教条主义、经验主义  </p></blockquote></li><li><p><strong>毛泽东思想走向成熟的条件</strong> 中国革命两次失败两次胜利的比较，促使以毛泽东为代表的共产党人认真总结革命实践经验，科学揭示中国革命的规律 抗日战争复杂环境和丰富实践，为这一理论的成熟提供了丰富的材料和现实条件 以毛泽东为核心的新的中央领导集体的形成，为这一理论的成熟提供了政治保证 党的理论素养的提高和思想路线的端正，为这一理论的成熟提供了必要的思想和理论基础</p></li></ul><h4 id="新民主主义革命理论"><a href="#新民主主义革命理论" class="headerlink" title="新民主主义革命理论"></a>新民主主义革命理论</h4><ul><li><p>任何革命都是改造不适应生产力的生产关系，以达到解放和发展生产力的目的</p><blockquote><p>新民主主义革命是无产阶级领导的，人民大众的，反对帝国主义封建主义官僚资本主义的革命，直接目的是为了改变近代中国半殖民地半封建社会的面貌，建立新中国。根本目的是解放和发展生产力。  </p></blockquote></li><li><p>新民主主义革命统一战线中的两个同盟： 一个是工人阶级同农民阶级、广大知识分子及其他劳动者的联盟，主要是工农联盟； 另一个是工人阶级和非劳动人民的联盟，主要是与民族资产阶级的联盟。 其中第一个联盟是统一战线的基础，只有争取农民、知识分子和其他劳动人民，巩固工农联盟，才能实现党对统一战线的领导权。</p></li><li><p>解放战争伊始，党中央《五四指示》内容规定土地改革要满足贫雇农的要求，没收地主多余土地，联合中农，保存富农经济。该政策一直持续到农业社会主义改造之前。、</p></li><li><p>1935年12月25日，中共中央在山西瓦窑堡召开政治局扩大会议，提出了建立抗日民族统一战线的方针。</p></li><li><p>党的六大首次把工农兵政权称为苏维埃政权</p></li><li><p>无产阶级领导权是中国革命的中心问题，也是新民主革命理论的核心问题，分清敌友是中国革命的首要问题，农民问题是中国革命的基本问题。</p></li><li><p>在新民主主义革命时期，党的建设面临着理论准备严重不足、小资产阶级思想影响大、封建主义影响深重以及“左”倾教条主义错误的干扰</p></li><li><p>近代中国的富农剥削雇农的剩余劳动，是农村中的资产阶级，既是劳动者，又是剥削者，对雇农的剥削带有浓厚的半封建性</p></li><li><p>系统概括和阐述毛泽东思想的党的文献：七大，刘少奇《关于修改党的章程的报告》、十一届三中全会，《关于建国以来党的若干历史问题的决议》</p></li><li><p>毛泽东《论联合政府》中提出党的三大优良作风：理论和实践相结合、和人民群众紧密地联系在一起的作风、自我批评的作风</p></li><li><p><strong>毛泽东对近代中国的资本主义和资产阶级的分析包括：</strong> 一、提出了官僚资本和官僚资产阶级的新概念 二、把以蒋介石为代表的大资产阶级依靠发动反动政权发展起来的巨额垄断资本称为官僚资本 三、把掌握官僚资本的阶级称为官僚资产阶级 四、认为官僚资本具有买办性、封建性和垄断性 五、认为反对官僚资本主义也是中国新民主主义革命的基本内容之一</p></li></ul><h4 id="社会主义改造理论"><a href="#社会主义改造理论" class="headerlink" title="社会主义改造理论"></a>社会主义改造理论</h4><ul><li>农业社会主义改造大体上经历了互助组、初级社和高级社三个发展阶段，分别具有社会主义萌芽性质、半社会主义性质和完全社会主义性质</li></ul><h4 id="社会主义建设道路初步探索的理论成果"><a href="#社会主义建设道路初步探索的理论成果" class="headerlink" title="社会主义建设道路初步探索的理论成果"></a>社会主义建设道路初步探索的理论成果</h4><h4 id="建设中国特色社会主义总依据"><a href="#建设中国特色社会主义总依据" class="headerlink" title="建设中国特色社会主义总依据"></a>建设中国特色社会主义总依据</h4><ul><li>列宁最早提出社会主义发展阶段划分问题</li></ul><h4 id="社会主义本质和建设中国特色社会主义总任务"><a href="#社会主义本质和建设中国特色社会主义总任务" class="headerlink" title="社会主义本质和建设中国特色社会主义总任务"></a>社会主义本质和建设中国特色社会主义总任务</h4><ul><li><strong>邓小平关于社会主义本质的论断体现了：</strong> 解放生产力与发展生产力的统一 发展生产力与实现共同富裕的统一 生产力与生产关系的统一 目的与手段的统一 社会主义发展过程与最终目标的统一</li></ul>]]></content>
      
      
      <categories>
          
          <category> temp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 毛概 </tag>
            
            <tag> 考研政治 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>China:TIME OF XI</title>
      <link href="/!archived/chinatime-of-xi/"/>
      <url>/!archived/chinatime-of-xi/</url>
      
        <content type="html"><![CDATA[<blockquote><p>China: Time of Xi gets under the skin of Xi Jinping’s China to discover what’s changing in the country, what China’s unique experience could offer the world, and what drives the man himself.</p></blockquote><p>前不久刚看完《辉煌中国》系列纪录片，从国人的视角来看中国的现在和未来，共六集，分别“圆梦工程”、“创新活力”、“协调发展”、“绿色家园”、“共享小康”、“开放中国”，都是当前中国最为关注的话题。看完之后很有感触，也更加深刻地明白自己处在一个怎样中国，一个怎样的时代。而《习近平治国方略：中国这五年》是在美国Discovery Channel播出的一部由国际主流媒体首次全面、系统解读习近平治国理政思想的节目，从三个外国人的视角来解读中国，来解读习总书记治国理政的方略，多了几分思考，少了几分教育意味。</p><p>以往我们所看到国外关于中国的影音材料，大多存在抹黑、歪曲中国形象的情况，而这些材料的传播，也给外国人民留下了不好的中国印象，直到现在，部分未来过中国，主动了解中国的外国人对中国仍存在偏见。不过近近年来，尤其是08年奥运会的召开，中国主动向世界展示了一个不一样的自己，改变了许多人对中国的刻板印象，之后关于中国的纪录片也客观许多。</p><p>而这部纪录片同以往单纯介绍中国风土人情、介绍中国文化的纪录片不同，它不再是站在一个优越的角度，也不再有那种高高在上的态度，它在观察，在剖析，在思考，当今的中国是怎样的，何以中国进步之如此迅速，何以在世界经济萎靡不振之时中国一马当先，一枝独秀，何以在各国对这样那样的国际问题、民生问题应接不暇之时，中国仍能有条不紊地发展经济改善民生。这是一个巨大的转变，这不仅意味着中国在国际上地位的提高，更证明了我们的路是正确的，我们要更加自信地走下去。</p><p>它共三集，从三个方面来分析中国，分析习总书记的治国方略，分别是“People’s Republic”、“Running China Now”、“All Aboard”。从这里就可以看出来它和《辉煌中国》讲述角度的不同，并不是在当一个阐述人，一个讲解者来做介绍，而是重在解读，重在提问，重在思考，它向每一个观众抛出问题，而这些问题，正是理解习总书记治国方略的关键。</p><blockquote><p>“I can assure you I would not want to wake up as the president of China, with 1.4 billion people expecting their lives to be improved. That is very challenging.”</p></blockquote><p>在“人民情怀”这一集一开头，赞比亚经济学家丹比萨·莫约就说了这么一段话，而这句话然我自然而然地想到温家宝总理那句话,<strong>一个很小的问题，乘以13亿，都会变成一个大问题； 一个很大的总量，除以13亿，都会变成一个小数目</strong>。可以想象到，责任之大，压力之中。然而，即使在这种情况下，还有人诋毁我们的中央政府，或者总拿国外政府来作比较，来要求这，要求那，尤其是一小部分留学生和海归，在国外发现一点比中国优越的地方，就要拿来批判，以显示自己见识广。当然发现问题，提出建议无可厚非，但出言不逊，实在不应该。我们应该看到，到2020年，中国要达成全面建成小康社会的目标，还有六千多万贫困人口的挑战横亘在前，在这种情况下，我们更应该团结一心，为达到这一宏伟目标而奋斗。</p><p>这一集还谈到了这么一个问题，那就是领导人的培养体系的问题。通过回顾习总书记的从政之路来深刻理解习总书记的执政理念，他们发现，习任何一个政策和思想，都有它切实的来源和深厚的基础，那是深深植根于广大人民群众，与人民不分你我而来的。</p><blockquote><p>“The Chinese system, therefore, of training political cadres is pretty comprehensive.”</p></blockquote><p>澳大利亚前总理陆克文认为，<strong>中国培养政界精英的体制是非常完善的。中国疆域辽阔、情况复杂，习近平在不同地区、不同领域积累了丰富的经验，所以在应对中国未来的经济挑战时，他能制定出更有效的战略。</strong></p><p>“人民情怀”的关注点在人民，而“大国治理”则直面当前中国的机遇和挑战，从客观的角度指出中国在经济、环境、腐败等各方面面临的真正挑战。</p><blockquote><p>“The challenge now is China’s economy has to be pretty radically transformed, because China can no longer afford to be the world’s low-cost producer in cheap goods.”</p></blockquote><p>美国公众智库罗伯特·库恩指出，<strong>中国经济必须进行转型升级，必须进行彻底转型，不能再扮演廉价产品世界工厂的角色了。</strong></p><blockquote><p>China is not an importer exclusively; it is an exporter, not just of goods but of ideas.</p></blockquote><p>从纪录片中我们可以看到，中国正在努力着手改变现状，不再是一味接受舶来事物，而是在输出自己的产品和观念想法。在这种情况下，一大批新兴企业和一大批年轻人开始涌现，他们充当着新时代的生力军，旗手和冒险者。他们的努力和付出，将为中国经济转型积累丰富的经验教训，也将带动中国经济的发展，走得更长，更远。</p><blockquote><p>老路，既行不通，又走不远，必须开辟新的发展路径，激发经济潜力，引领经济发展走向更加光明的未来，这是我们的历史责任。 ——习近平</p></blockquote><p>最后一集“合作共赢”，全面而深刻地解读了习总书记“人类命运共同体”的思想，它通过介绍当今中国在世界各地和当地政府、人民合作所取得的成就，来反映中国在为实践这一伟大思想做出的贡献和努力。</p><blockquote><p>Bottom line about the Belt and Road Initiative is potentially one of the most important world-wide ways of thinking since World War Ⅱ.</p></blockquote><p>援助非洲、“一带一路”、“亚投行”等等，所做出的努力和所取得的成就我们有目共睹，然而，还有很多国人不理解，甚至批评政府，不改善国内民生，看不到国内受苦受困的人民，反而毫不吝啬地援助其他国家。对此，我们只能说，他们一没看到政府在改善民生方面所做出的努力，选择性地忽略了身边日新月异的变化，而将矛头对准个别现象，二没有长远的眼光。一直以来，我们的政府都是高瞻远瞩的，所做之事，所下达的政令，很多百姓都无法理解，然而几年甚至几十年后，人们才明白这些举措的伟大。具体例子大家可以查阅历史了解。</p><blockquote><p>This is a time in geopolitical events that we haven’t seen in a very long time. China is going to take a new place in the world.</p></blockquote><p>不管怎样，中国正在也必然要走进世界舞台的中央，在这样关键的时刻，我们每一个中国人都应该拿出干劲，做好自己的本职工作，不一味地批判，而是要想办法解决问题，这点对大学生而言尤为重要，问题谁都知道，但如何解决问题，是作为将来要成为社会精英的大学生所必须培养的能力。</p>]]></content>
      
      
      <categories>
          
          <category> 有感 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>浅看《为什么是毛泽东》</title>
      <link href="/!archived/%E6%B5%85%E7%9C%8B%E3%80%8A%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E6%AF%9B%E6%B3%BD%E4%B8%9C%E3%80%8B/"/>
      <url>/!archived/%E6%B5%85%E7%9C%8B%E3%80%8A%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E6%AF%9B%E6%B3%BD%E4%B8%9C%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<blockquote><p>《为什么是毛泽东》.任志刚.光明日报出版社</p><p>历史绕不过他，当下绕不过他，未来也绕不过他······</p></blockquote><p>过去，人们神化毛主席，现在，部分人贬低甚至诋毁毛主席，无论怎样，历史就在那里，评判公正与否，自在人心。</p><p>作为年轻人，我更欣赏毛主席的那份胸怀，那份气势，那份豪情。</p><blockquote><p>会当水击三千里，自信人身二百年</p></blockquote><p>什么样的人能说出这样的话，惟有胸怀大志之人，那份“搏击长空”、“浪遏飞舟”的魄力，让我羡慕不已。</p><p>现在的大多数年轻人，包括我自己，越来越没有朝气，生活越来越缺乏激情，过着如同半百老人的生活，老子“不敢为天下”的教诲成为我们的宗旨，怯懦成为我们的包装。</p><p>毛主席也经历过人生的低谷，然而在那段时间，他虽然心情压抑，也写下了<strong>“东方欲晓，莫道君行早，踏遍青山人未老，风景这边独好。会昌城外高峰，颠连直接东溟，战士指看南粤，更加郁郁葱葱”</strong>这样压抑的词句，但仍未放弃争取，这样的他，仍在为红军寻找后路。遵义会议前的长征，伤亡惨重的红军，已经濒于绝境，毛泽东在担架上，无从发泄他的愤怒，他必须想办法，重新站出来带领红军走向胜利。</p><blockquote><p>西风烈，长空雁叫霜晨月，霜晨月，马蹄声碎，喇叭声咽。雄关漫道真如铁，而今迈步从头越，从头越，苍山如海，残阳如血。</p></blockquote><p>那是怎样的一种感觉，又是怎样的毅力在支撑着他？</p><p>神一样的用兵手法，带领红军跳出包围圈，完成重生，在六盘山顶峰，毛泽东又写下了《清平乐·六盘山》:</p><blockquote><p>天高云淡，望断南飞雁，不到长城非好汉，屈指行程二万。六盘山上高峰，红旗漫卷西风，今日长缨在手，何时缚住苍龙？</p></blockquote><p>这又是怎样一种气概？“何时缚住苍龙”正回应了他当年在湘江边上那一句深切的呐喊——“问苍茫大地，谁主沉浮？”。他找到了答案，找到了依靠，即使敌人依旧强大，但他毫不畏惧，向他的敌人宣告着，胜利只是时间问题。</p><p>一个领袖，用正确来证明实力，是最好的办法。</p><p>不管历史上的他如何，他也同样年轻过，有过和我们一样的年华，而我们可以做的，就是思考，在同样的年华里，我们应该做什么，而他就是一个很好的榜样。</p>]]></content>
      
      
      <categories>
          
          <category> books </category>
          
          <category> 有感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感悟 </tag>
            
            <tag> 志向 </tag>
            
            <tag> 年轻 </tag>
            
            <tag> 读后感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript Data Structure Notes</title>
      <link href="/!archived/javascript-data-structure-notes/"/>
      <url>/!archived/javascript-data-structure-notes/</url>
      
        <content type="html"><![CDATA[<h1 id="Javascript-Data-Structure-Notes"><a href="#Javascript-Data-Structure-Notes" class="headerlink" title="Javascript Data Structure Notes"></a>Javascript Data Structure Notes</h1><h2 id="review"><a href="#review" class="headerlink" title="review:"></a>review:</h2><hr><h3 id="true-false-value-in-javascript"><a href="#true-false-value-in-javascript" class="headerlink" title="true,false value in javascript"></a>true,false value in javascript</h3><table><thead><tr><th>variable type</th><th>transform to boolean</th></tr></thead><tbody><tr><td>undefined</td><td>false</td></tr><tr><td>null</td><td>false</td></tr><tr><td>boolean</td><td>true:true,false:false</td></tr><tr><td>number</td><td>+0&#x2F;-0&#x2F;NaN:false</td></tr><tr><td>String</td><td>is blank:false,else:true</td></tr><tr><td>Object</td><td>true</td></tr><tr><td>for example:</td><td><code>(new Boolean(false))?&#39;true&#39;:&#39;false&#39;</code> <em>result:’true’</em> <strong>tips:Object always is true</strong></td></tr></tbody></table><hr><h3 id="core-functions-of-Array"><a href="#core-functions-of-Array" class="headerlink" title="core functions of Array"></a>core functions of Array</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>concat</td><td>concatenate two or more arrays and return</td></tr><tr><td>every</td><td>implement function that given for every items util it is end or there is a return value is false and if all results are true,return true,else return false</td></tr><tr><td>some</td><td>difference from <code>every()</code> is that only if one result is true will return true</td></tr><tr><td>filter</td><td>implement function that given for every items and return array consists of items which return true</td></tr><tr><td>forEach</td><td>implement function that given for every items and no return value (<strong>parameter:value,key,index</strong>)</td></tr><tr><td>join</td><td><em>concatenate</em> all items in array <em>into</em> single string</td></tr><tr><td>indexOf</td><td>return the index of item in array that is up to the parameter given,no item matched return -1</td></tr><tr><td>lastIndexOf</td><td><em>similar to</em> <code>indexOf()</code> but return the max index matched</td></tr><tr><td>map</td><td>implement function that given for every items and all results will constitute a array</td></tr><tr><td>reverse</td><td>reverse items process in array</td></tr><tr><td>slice</td><td>return array that made up of items which indexes are range of parameters</td></tr><tr><td>sort</td><td>sort array by alphabets order and allow to pass sort methods as parameter of the function <strong>tips:default in alphabets order,pass a compare function to sort in other way</strong></td></tr><tr><td>toString</td><td>return single string (or <code>toLocaleString()</code>)</td></tr><tr><td>valueOf</td><td>same as <code>toString()</code></td></tr></tbody></table><hr><h3 id="Different-ways-to-create-Object-in-JavaScript"><a href="#Different-ways-to-create-Object-in-JavaScript" class="headerlink" title="Different ways to create Object in JavaScript"></a><a href="http://www.ruanyifeng.com/blog/2012/07/three_ways_to_define_a_javascript_class.html">Different ways to create Object in JavaScript</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">/*way 1*/</span><br><span class="line">function obj()&#123;</span><br><span class="line">    this.a = &#x27;&#x27;</span><br><span class="line">    this.b = &#x27;&#x27;</span><br><span class="line">    this.fun = function()&#123;</span><br><span class="line">        console.log(a)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">obj.prototype.foo = function()&#123;</span><br><span class="line">    console.log(&quot;here is foo&quot;)</span><br><span class="line">&#125;</span><br><span class="line">var Obj = new obj()</span><br><span class="line">/*</span><br><span class="line">Functions Defined based on the prototype are shared by all instances of the Object  and to generate private functions in constructor.Try to define prototype functions to save memory and reduce the cost of instantiation.</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">/*way 2*/</span><br><span class="line">var obj = &#123;</span><br><span class="line">    a:&#x27;&#x27;,</span><br><span class="line">    b:&#x27;&#x27;,</span><br><span class="line">    fun:function()&#123;</span><br><span class="line">        console(&quot;here is fun&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">var Obj = Object.create(obj)</span><br><span class="line"></span><br><span class="line">/*way 3*/</span><br><span class="line">var Obj = &#123;</span><br><span class="line">    pub:&#x27;&#x27;,</span><br><span class="line">    createNew:function()&#123;</span><br><span class="line">        var obj = &#123;&#125;</span><br><span class="line">        var pri = &#x27;&#x27;</span><br><span class="line">        obj.a = &#x27;&#x27;</span><br><span class="line">        obj.b = &#x27;&#x27;</span><br><span class="line">        obj.fun = function()&#123;</span><br><span class="line">            console.log(pri)</span><br><span class="line">        &#125;</span><br><span class="line">        return obj</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">var ins = Obj.createNew()</span><br><span class="line"></span><br><span class="line">/*way 4*/</span><br><span class="line">class obj&#123;</span><br><span class="line">    constructor(a,b)&#123;</span><br><span class="line">        this.a = a</span><br><span class="line">        this.b = b</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    static fun()&#123;</span><br><span class="line">        console.log(&quot;here is fun&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">let Obj = new obj(1,2)</span><br><span class="line">Obj.fun()</span><br><span class="line">/*</span><br><span class="line">class declarations are not hoisted</span><br><span class="line">*/</span><br></pre></td></tr></table></figure><hr><h3 id="Learn-about-Garbage-Collectionin-in-javascript"><a href="#Learn-about-Garbage-Collectionin-in-javascript" class="headerlink" title="Learn about Garbage Collectionin in javascript"></a><a href="https://developer.mozila.org/en-US/docs/Web/JavaScript/Memory_Management">Learn about Garbage Collectionin in javascript</a></h3><hr><h3 id="Use-functions-push-and-pop-of-Object-Array-to-emulate-stack"><a href="#Use-functions-push-and-pop-of-Object-Array-to-emulate-stack" class="headerlink" title="Use functions push() and pop() of Object Array to emulate stack"></a>Use functions <code>push()</code> and <code>pop()</code> of Object Array to emulate stack</h3><hr><h3 id="Use-functions-unshift-and-shift-of-Object-Array-to-emulate-queue"><a href="#Use-functions-unshift-and-shift-of-Object-Array-to-emulate-queue" class="headerlink" title="Use functions unshift() and shift() of Object Array to emulate queue"></a>Use functions <code>unshift()</code> and <code>shift()</code> of Object Array to emulate queue</h3><hr><h3 id="Use-Object-keys-Obj-or-for-var-i-in-Obj-to-count-keys-in-Obj"><a href="#Use-Object-keys-Obj-or-for-var-i-in-Obj-to-count-keys-in-Obj" class="headerlink" title="Use Object.keys(Obj) or for(var i in Obj) to count keys in Obj"></a>Use <code>Object.keys(Obj)</code> or <code>for(var i in Obj)</code> to count keys in Obj</h3><hr><h3 id="Hash-function-and-hash-table-find-more"><a href="#Hash-function-and-hash-table-find-more" class="headerlink" title="Hash function and hash table find more"></a>Hash function and hash table <a href="http://goo.gl/VtdN2x">find more</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/*not the best but the most popular hash function djb2*/</span><br><span class="line">var djb2HashCode = function(key)&#123;</span><br><span class="line">    var hash = 5381</span><br><span class="line">    for(var i = 0;i &lt; key.length;i++)&#123;</span><br><span class="line">        hash = hash * 33 + key.charCodeAt(i)</span><br><span class="line">    &#125;</span><br><span class="line">    return hash % 1013</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="More-about-Tree-Red-Black-tree-and-Heap-tree-and-AVL-tree"><a href="#More-about-Tree-Red-Black-tree-and-Heap-tree-and-AVL-tree" class="headerlink" title="More about Tree Red-Black tree and Heap tree and AVL tree"></a>More about Tree <a href="http://goo.gl/OxED8K">Red-Black tree</a> and <a href="http://goo.gl/SFlhW6">Heap tree</a> and <a href="https://en.wikipedia.org/wiki/AVL_tree">AVL tree</a></h3><hr><h3 id="BFS-Dijkstra-39-s-Bellman-Ford-A"><a href="#BFS-Dijkstra-39-s-Bellman-Ford-A" class="headerlink" title="BFS Dijkstra&#39;s Bellman-Ford A*"></a><code>BFS</code> <code>Dijkstra&#39;s</code> <code>Bellman-Ford</code> <code>A*</code></h3><hr><h3 id="common-sort-function"><a href="#common-sort-function" class="headerlink" title="common sort function"></a>common sort function</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line">function ArrayList()&#123;</span><br><span class="line">    var arr = []</span><br><span class="line">    var swap = function(i,j)&#123;</span><br><span class="line">        var temp = arr[i]</span><br><span class="line">        arr[i] = arr[j]</span><br><span class="line">        arr[j] = temp</span><br><span class="line">    &#125;</span><br><span class="line">    this.initial = function(array)&#123;</span><br><span class="line">        for(var i = 0;i &lt; array.length;i++)</span><br><span class="line">            arr.push(array[i])</span><br><span class="line">    &#125;</span><br><span class="line">    /*Bubble sort ascend*/</span><br><span class="line">    this.bubbleSort = function()&#123;</span><br><span class="line">        if(arr.length &lt; 2) return</span><br><span class="line">        for(var i = 0;i &lt; arr.length;i++)&#123;</span><br><span class="line">            for(var j = 0;j &lt; arr.length - 1 - i;j++)&#123;</span><br><span class="line">                if(arr[j] &gt; arr[j+1]) swap(j,j+1)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    /*Select sort ascend*/</span><br><span class="line">    this.selectSort = function()&#123;</span><br><span class="line">        if(arr.length &lt; 2) return</span><br><span class="line">        for(var i = 0;i &lt; arr.length;i++)&#123;</span><br><span class="line">            var min = i</span><br><span class="line">            for(var j = i;j &lt; arr.length;j++)&#123;</span><br><span class="line">                if(arr[j] &lt; arr[min]) min = j</span><br><span class="line">            &#125;</span><br><span class="line">            if(arr[min] != arr[i])</span><br><span class="line">                swap(i,min)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    /*Insert sort ascend*/</span><br><span class="line">    this.insertSort = function()&#123;</span><br><span class="line">        if(arr.length &lt; 2) return</span><br><span class="line">        for(var i = 1;i &lt; arr.length;i++)&#123;</span><br><span class="line">            var k = i,</span><br><span class="line">                temp = arr[i]</span><br><span class="line">            while(k &gt; 0 &amp;&amp; temp &lt; arr[k-1])&#123;</span><br><span class="line">                arr[k] = arr[k-1]</span><br><span class="line">                k--</span><br><span class="line">            &#125;</span><br><span class="line">            arr[k] = temp</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    /*Merge sort ascend*/</span><br><span class="line">    var mergeSortRec = function(array)&#123;</span><br><span class="line">        if(array.length === 1) return array</span><br><span class="line">        var mid = Math.floor(array.length / 2)</span><br><span class="line">        var left = array.slice(0,mid)</span><br><span class="line">        var right = array.slice(mid,array.length)</span><br><span class="line">        return merge(mergeSortRec(left),mergeSortRec(right))</span><br><span class="line">    &#125;</span><br><span class="line">    var merge = function(left,right)&#123;</span><br><span class="line">        var array = []</span><br><span class="line">        var i = 0,j = 0</span><br><span class="line">        while(i &lt; left.length &amp;&amp; j &lt; right.length)&#123;</span><br><span class="line">            if(left[i] &lt; right[j])&#123;</span><br><span class="line">                array.push(left[i])</span><br><span class="line">                i++</span><br><span class="line">            &#125;</span><br><span class="line">            else&#123;</span><br><span class="line">                array.push(right[j])</span><br><span class="line">                j++</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        while(i &lt; left.length)&#123;</span><br><span class="line">            array.push(left[i])</span><br><span class="line">            i++</span><br><span class="line">        &#125;</span><br><span class="line">        while(j &lt; right.length)&#123;</span><br><span class="line">            array.push(right[j])</span><br><span class="line">            j++</span><br><span class="line">        &#125;</span><br><span class="line">        return array</span><br><span class="line">    &#125;</span><br><span class="line">    this.mergeSort = function()&#123;</span><br><span class="line">        if(arr.length === 1) return</span><br><span class="line">        arr = mergeSortRec(arr)</span><br><span class="line">    &#125;</span><br><span class="line">    /*Quick sort ascend*/</span><br><span class="line">    var quickSort = function()&#123;</span><br><span class="line">        quick(arr,0,arr.length - 1)</span><br><span class="line">    &#125;</span><br><span class="line">    var quickPartition = function(array,left,right)&#123;</span><br><span class="line">        var center = Math.floor((left + right) / 2)</span><br><span class="line">        var l = left</span><br><span class="line">        var r = right</span><br><span class="line">        while(l &lt;= r)&#123;</span><br><span class="line">            /*find bigger number from left of the array*/</span><br><span class="line">            while(array[l] &lt; array[center])&#123;</span><br><span class="line">                l++</span><br><span class="line">            &#125;</span><br><span class="line">            /*find smaller number from right of the array*/</span><br><span class="line">            while(array[r] &gt; array[center])&#123;</span><br><span class="line">                r--</span><br><span class="line">            if(l &lt;= r)&#123;</span><br><span class="line">                quickSortSwap(l,r)</span><br><span class="line">                l++</span><br><span class="line">                r--</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return l</span><br><span class="line">    &#125;</span><br><span class="line">    var quick = function(array,left,right)&#123;</span><br><span class="line">        if(array.length &lt;= 1) return array</span><br><span class="line">        var index = quickPartition(array,left,right)</span><br><span class="line">        if(left &lt; index - 1)</span><br><span class="line">            quick(array,left,index - 1)</span><br><span class="line">        if(right &gt; index)</span><br><span class="line">            quick(array,index,right)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> temp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> data-structure </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅看《辩证法的真谛》</title>
      <link href="/!archived/%E6%B5%85%E7%9C%8B%E3%80%8A%E8%BE%A9%E8%AF%81%E6%B3%95%E7%9A%84%E7%9C%9F%E8%B0%9B%E3%80%8B/"/>
      <url>/!archived/%E6%B5%85%E7%9C%8B%E3%80%8A%E8%BE%A9%E8%AF%81%E6%B3%95%E7%9A%84%E7%9C%9F%E8%B0%9B%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<blockquote><h3 id="辩证法的真谛——列宁《谈谈辩证法问题》如是读"><a href="#辩证法的真谛——列宁《谈谈辩证法问题》如是读" class="headerlink" title="辩证法的真谛——列宁《谈谈辩证法问题》如是读"></a>辩证法的真谛——列宁《谈谈辩证法问题》如是读</h3><h4 id="田明-陈培永"><a href="#田明-陈培永" class="headerlink" title="田明 陈培永"></a>田明 陈培永</h4><h4 id="广东人民出版社"><a href="#广东人民出版社" class="headerlink" title="广东人民出版社"></a>广东人民出版社</h4></blockquote><hr><blockquote><p>“辩证”——“对话”、“讨论”、“语境”</p></blockquote><ul><li><p>苏格拉底的对话最大程度上排除了主观独断的干扰，<strong>通过交流</strong>使人意识到自身的不足，激发了<strong>自我反思与超越的动力</strong></p></li><li><p>辩证与独断是相对而出现的，辩证要<strong>克服</strong>的顽疾正是人的<strong>独断性思维</strong></p></li></ul><hr><blockquote><p>“无论是教训还是苦难，都不会使独断性思维退隐，甚至还有不断助长独断的倾向。” “人们更愿意相信世界就处在自己的掌控之中，吸取教训是为了目标能够最终实现，与之前的失败相比，目的一旦获得了满足，曾经的苦难与挫折会让人更加坚信自己思想的正确性。”</p></blockquote><p><strong>Q</strong> 这么说是否太绝对？只要人们认识正确，教训和苦难能使人不断学习和进步，那么从发展的角度来看，独断的倾向是否会减少？</p><hr><blockquote><p>“与客观相对的与其说是错误，不如说是独断” “客观的思想、观点、理论未必是正确的，但其背后所运用的思维方式却孕育着正确的思想” “我们所提倡并肯定客观认识，与其说是对认识内容的赞同，不如说是对客观态度的认可” “客观态度包含着自我批判与超越的动力，是一种敢于接受社会检验的勇气”</p></blockquote><p>※ 可以联系“认识的阶段性”、“真理的绝对性和相对性”、“真理的检验标准”来理解</p><p>对待人或事，我们常常说要客观地来看，实际上在这里，我们自然而然地将其划在正确的阵营，事实上，我们从客观的角度来看的观点也并非完全正确，拿着并不一定正确的观点要求他人认同就更不可取。认识是有阶段性的，我们每个人的认识受环境、个人认识水平的影响，往往也存在局限性。但我们依然强调客观认识，因为这一种允许自我批判的精神是值得肯定的，也正是它的批判性的存在，在不断的交流和认知水平进步的过程中，能够不断前进和发展，而不是固执己见，固步自封的独断。所以说其<strong>背后运用的思维方式孕育着正确的思想</strong>。</p><hr><blockquote><p>“独断是在坚持错误，辩证的批判会使错误升华为真理” “把辩证法看作是获得真理或者知识的方法并不完全合适。确切地讲，辩证法是一种思维矫正的方法，是一种让人摆脱独断性思维的方法”</p></blockquote><p><strong>Q</strong> 如何反驳_“存在坚持正确的‘独断’”_</p><p>我们常常把“辩证法”神化，尤其是未接触过辩证法或者对辩证法接触不深的人群。他们认为辩证法是一门高深的、玄而又玄的学问，并常怀畏惧和敬意。确实，辩证法可以是高深的，玄而又玄的，但不在于它的本质，而在于它所能延伸的广度和深度。就其本质来说，辩证法也只是一种方法，一种人们认识客观世界的方法，人们通过运用这种方法，能够逐渐摆脱独断性思维，能够离真理更进一步。</p><hr><blockquote><p>“在(客观)辩证法中，相对和绝对的差别也是相对的。对于客观辩证法来说，相对中有绝对。对于主观主义和诡辩论说来，相对只是相对，因而排斥绝对。”</p></blockquote><p><strong>Q</strong></p><ul><li><p>这里“绝对”和“相对”的含义？</p></li><li><p>诡辩论是对客观对象任一方面的绝对化还是排斥绝对？</p></li></ul><hr><blockquote><p>“辩证法与其说是向外探索规律，不如说是向内自求明理”</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> books </category>
          
          <category> 有感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读后感 </tag>
            
            <tag> 唯物主义 </tag>
            
            <tag> 辩证法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Find Vampire Numbers(4 digit number)</title>
      <link href="/!archived/find-vampire-numbers4-digit-number/"/>
      <url>/!archived/find-vampire-numbers4-digit-number/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">* find vampire numbers from 1000 to 9999</span><br><span class="line">*/</span><br><span class="line">import java.io.BufferedReader;</span><br><span class="line">import java.io.BufferedWriter;</span><br><span class="line">import java.io.FileWriter;</span><br><span class="line">import java.io.IOException;</span><br><span class="line"></span><br><span class="line">public class Programming &#123;</span><br><span class="line">    public static void main(String[] args) throws IOException&#123;</span><br><span class="line">        BufferedWriter bw = new BufferedWriter(new FileWriter(&quot;1.txt&quot;));</span><br><span class="line">        for(int num = 1000;num &lt;= 9999;num++)&#123;</span><br><span class="line">            boolean is = isVampireNumbers(num);</span><br><span class="line">            if(is) &#123;</span><br><span class="line">                bw.write(num + &quot; : &quot; + is + &quot;\r\n&quot;);</span><br><span class="line">                bw.flush();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    /** the judgemental function</span><br><span class="line">    * need to be optimized</span><br><span class="line">    */</span><br><span class="line">    public static boolean isVampireNumbers(int num)&#123;</span><br><span class="line">        String str = Integer.toString(num);</span><br><span class="line">        int count = str.length();</span><br><span class="line">        if(count % 2 == 0)&#123;</span><br><span class="line">            String[] strArr = str.split(&quot;&quot;);</span><br><span class="line">            boolean is = false;</span><br><span class="line">            int vnum1 = -1,vnum2 = -1;</span><br><span class="line">            for(int i = 0;i &lt; strArr.length - 1;i++)&#123;</span><br><span class="line">                int n1 = Integer.parseInt(strArr[i]);</span><br><span class="line">                for(int j = i + 1;j &lt; strArr.length;j++)&#123;</span><br><span class="line">                    int n2 = Integer.parseInt(strArr[j]);</span><br><span class="line">                    int[] m = new int[2];</span><br><span class="line">                    int t = 0;</span><br><span class="line">                    for(int k = 0;k &lt; strArr.length;k++)&#123;</span><br><span class="line">                        if(k != i &amp;&amp; k != j) &#123;</span><br><span class="line">                            m[t] = k;</span><br><span class="line">                            t++;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    int m1 = Integer.parseInt(strArr[m[0]]);</span><br><span class="line">                    int m2 = Integer.parseInt(strArr[m[1]]);</span><br><span class="line">                    if((n1 == 0 &amp;&amp; n2 == 0) || (m1 == 0 &amp;&amp; m2 == 0))</span><br><span class="line">                        continue;</span><br><span class="line">                    vnum1 = (n1*10+n2);</span><br><span class="line">                    vnum2 = (m1*10+m2);</span><br><span class="line">                    int mul = vnum1 * vnum2;</span><br><span class="line">                    if(mul == num)&#123;</span><br><span class="line">                        is = true;</span><br><span class="line">                        break;</span><br><span class="line">                    &#125;else&#123;</span><br><span class="line">                        vnum1 = (n1*10+n2);</span><br><span class="line">                        vnum2 = (m2*10+m1);</span><br><span class="line">                        mul = vnum1 * vnum2;</span><br><span class="line">                        if(mul == num)&#123;</span><br><span class="line">                            is = true;</span><br><span class="line">                            break;</span><br><span class="line">                        &#125;else&#123;</span><br><span class="line">                            vnum1 = (n2*10+n1);</span><br><span class="line">                            vnum2 = (m1*10+m2);</span><br><span class="line">                            mul = vnum1 * vnum2;</span><br><span class="line">                            if(mul == num)&#123;</span><br><span class="line">                                is = true;</span><br><span class="line">                                break;</span><br><span class="line">                            &#125;else&#123;</span><br><span class="line">                                vnum1 = (n2*10+n1);</span><br><span class="line">                                vnum2 = (m2*10+m1);</span><br><span class="line">                                mul = vnum1 * vnum2;</span><br><span class="line">                                if(mul == num)&#123;</span><br><span class="line">                                    is =true;</span><br><span class="line">                                    break;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                if(is)&#123;</span><br><span class="line">                    System.out.println(vnum1 + &quot;*&quot; + vnum2);</span><br><span class="line">                    return true;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> anything </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Basic Points</title>
      <link href="/!archived/java-relearning-way/"/>
      <url>/!archived/java-relearning-way/</url>
      
        <content type="html"><![CDATA[<p><strong>meaning of e or E in JAVA</strong> e or E means 10 to the power not the e(2.718…) in maths</p><p><strong>comma operator in JAVA</strong> only use in iterator for, <em>e.g</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for(int i = 0, j = 1, k = 2;i &lt; 5;i++,j++,k--)&#123;</span><br><span class="line">    //do something</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>p.s.</em><code>i</code> <code>j</code> <code>k</code> must be the same data type</p><p><strong>practice: Find vampire numbers from all 4 digit numbers</strong> <a href="http://blog.poryoung.cn/2017/12/15/find-vampire-numbers/">java code link</a></p>]]></content>
      
      
      <categories>
          
          <category> anything </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自我批判</title>
      <link href="/!archived/%E8%87%AA%E6%88%91%E6%89%B9%E5%88%A4/"/>
      <url>/!archived/%E8%87%AA%E6%88%91%E6%89%B9%E5%88%A4/</url>
      
        <content type="html"><![CDATA[<p>时而向往孤独，时而害怕孤独，到底内心哪一个才是真的我？ 以前的模样，在脑海里，只有那么一个模糊的轮廓。是否也正因为如此，我才能肆意的修改它在我心中的印象呢？我是比以前更优秀、更成熟了，还是倒退了？我总希望以前的自己是满足现在的自己所向往的所有的要求的，也以此来否定现在的自己。 孤独也好，心静的时候无论如何也感觉不到，唯有心思驳杂的时候，感觉才那么深刻。 浮躁。 时刻提醒自己要冷静，要淡定，要坚持，但总会因莫名的烦躁而与之背离。 借口。 或许只是想找个借口逃避，那样最轻松了。</p>]]></content>
      
      
      <categories>
          
          <category> anything </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【转】直接插入排序，二分查找插入排序，希尔排序</title>
      <link href="/!archived/%E3%80%90%E8%BD%AC%E3%80%91%E7%9B%B4%E6%8E%A5%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%EF%BC%8C%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%EF%BC%8C%E5%B8%8C%E5%B0%94%E6%8E%92/"/>
      <url>/!archived/%E3%80%90%E8%BD%AC%E3%80%91%E7%9B%B4%E6%8E%A5%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%EF%BC%8C%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%EF%BC%8C%E5%B8%8C%E5%B0%94%E6%8E%92/</url>
      
        <content type="html"><![CDATA[<p><a href="https://61mon.com/index.php/archives/193/" title="排序（1）：直接插入排序，二分查找插入排序，希尔排序">[排序（1）：直接插入排序，二分查找插入排序，希尔排序]</a></p>]]></content>
      
      
      <categories>
          
          <category> 排序 </category>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>HIFI设计说明</title>
      <link href="/!archived/hifi%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E/"/>
      <url>/!archived/hifi%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<p>活跃活动现场气氛，增强活动的趣味程度和活动现场观众的参与度，使用微信作为用户端，无需额外注册账户，观众即可扫码参与现场活动。活动方也可对活动进行定制，包括活动主题、要使用的功能、活动来宾、现场投票等。使用Nodejs作为服务器端语言，使用Nodejs相关开发套件开发后台，前端包括通过后台ejs模板渲染，使用Jquery、underscore和vue框架搭建。 <a href="http://naotu.baidu.com/file/ff1a14b3da110a5e7383057ce848d1d3?token=25246235d5c10e3d">Structure</a></p>]]></content>
      
      
      <categories>
          
          <category> anything </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>HIFI——Activities Helper</title>
      <link href="/!archived/hifi-activities-helper/"/>
      <url>/!archived/hifi-activities-helper/</url>
      
        <content type="html"><![CDATA[<h3 id="Idea-and-Design"><a href="#Idea-and-Design" class="headerlink" title="Idea and Design"></a>Idea and Design</h3><hr><p>Since the development of the smart devices and moblie web technology, the penetration rate of smart phone is getting higher and higher, which symbolizes the more convenient and itelligent life, people go everywhere taking his phone.</p><p>Wether enterprise or college, there are many assembles or activities.How about putting the smart devices and activities together?That’s must be more fun!</p><p>There only one internet company provides this kind of service called HI Activity in present.However it seems that HI Activity is specially designed for enterprises, and if you want to use more useful and enjoyable functions you should pay more for it.Not only the organizer but also the audiences who want to participate in the activing carnival have to pay for their subscribed special functions.For our students, it is too expensive to use it.So, HIFI born.</p><h3 id="Tech-Stacks"><a href="#Tech-Stacks" class="headerlink" title="Tech Stacks"></a>Tech Stacks</h3><hr><ul><li>nodejs v8.9.0</li><li>express v4.16.2</li><li>mongodb v3.4.0</li><li>mongoose v4.13.2</li><li>vue.js v2.4.4</li><li>socket.io 2.0</li><li>bootstrap v3</li><li>…</li></ul><h3 id="Project-Structure"><a href="#Project-Structure" class="headerlink" title="Project Structure"></a>Project Structure</h3><hr><p>|-config</p><p>|—|-wechat.js</p><p>|-node_modules</p><p>|-server</p><p>|—|-common</p><p>|—|-controller</p><p>|—|-model</p><p>|—|-router</p><p>|—|-socket</p><p>|—|-views</p><p>|—|-access_token.txt</p><p>|—|-jsapu_token.txt</p><p>|—|-index.js</p><p>|-static</p><p>|—|-css</p><p>|—|-js</p><p>|—|-fonts</p><p>|—|-image</p><p>|—|-plus</p><p>|—|-emoji</p><p>|-bin</p><p>|—|-dev-server.js</p><p>|-package.json</p><p><a href="https://github.com/PorYoung/hifi_wechat">view in Github</a></p><blockquote><p>directory <strong>server</strong> * directory <strong>commom</strong> includes files that connect to mongodb database and some config files. * directory <strong>controller</strong> includes files which handle the main logic of the program on the server end. * directory <strong>medel</strong> includes files that deal with the interaction with Wechat. * <strong>router</strong> design the server router and export APIs. * <strong>views</strong> includes the front end pages. * <strong>socket</strong> handle the socket correspondence. * <strong>access_token.txt</strong> and <strong>jsapi.token</strong> saved the tickes that needed to correspond to Wechat server.</p><p>directory <strong>static</strong> A static server includes static files.</p></blockquote><h3 id="Docs-and-Description"><a href="#Docs-and-Description" class="headerlink" title="Docs and Description"></a>Docs and Description</h3><hr><h3 id="Quotes-and-Dependences"><a href="#Quotes-and-Dependences" class="headerlink" title="Quotes and Dependences"></a>Quotes and Dependences</h3><hr>]]></content>
      
      
      <categories>
          
          <category> temp </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>浅看《唯物主义辩证法》</title>
      <link href="/!archived/%E6%B5%85%E7%9C%8B%E3%80%8A%E5%94%AF%E7%89%A9%E4%B8%BB%E4%B9%89%E8%BE%A9%E8%AF%81%E6%B3%95%E3%80%8B/"/>
      <url>/!archived/%E6%B5%85%E7%9C%8B%E3%80%8A%E5%94%AF%E7%89%A9%E4%B8%BB%E4%B9%89%E8%BE%A9%E8%AF%81%E6%B3%95%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<blockquote><p>唯物主义辩证法.[苏] 苏沃洛夫.中国人民大学出版社</p></blockquote><h4 id="Q"><a href="#Q" class="headerlink" title="Q"></a>Q</h4><blockquote><p>马克思说：“劳动过程结束时得到的结果，在这个过程开始时就已经在劳动者的表象中存在着，即已经观念地存在”</p><blockquote><p>如何理解“下意识”的行为？ 如何理解“不可预知的结果”（意外）？</p></blockquote></blockquote><h4 id="辩证法的基本范畴"><a href="#辩证法的基本范畴" class="headerlink" title="辩证法的基本范畴"></a>辩证法的基本范畴</h4><ul><li><p>原因与结果</p></li><li><p>现象与本质</p></li><li><p>内容与形式</p></li><li><p>必然与偶然</p></li><li><p>现象与可能</p><blockquote><p>范畴：范畴是现实世界发展普遍形式的思想反映 （马克思）</p></blockquote><blockquote><p>范畴是区分认识的一些小阶段，即认识世界过程中的一些小阶段，是帮助人们认识和掌握自相现象之网的网上纽结 （列宁）</p></blockquote></li></ul><h4 id="辩证法的基本规律"><a href="#辩证法的基本规律" class="headerlink" title="辩证法的基本规律"></a>辩证法的基本规律</h4><ul><li>对立统一规律（对对立面的统一和斗争）</li><li>质量互变规律</li><li>否定之否定规律</li></ul><h4 id="Q-1"><a href="#Q-1" class="headerlink" title="Q"></a>Q</h4><blockquote><p>辩证法——系统方法 如何对比？</p></blockquote><h3 id="马克思主义辩证法的实质"><a href="#马克思主义辩证法的实质" class="headerlink" title="马克思主义辩证法的实质"></a>马克思主义辩证法的实质</h3><p><strong>论证发展是对立面的同一性、统一性；是承认并揭示自然界人类社会和思维的一切现象和过程中相互矛盾的相互排斥的，相互对立的趋势</strong></p><p><strong>方法</strong> 方法是通过掌握某个理论认识及它的实践变革对象的途径</p><p><strong>理论</strong> 通常是指有关世界和人们某些知识的总和概括，理论能为人们确定进一步实践活动的目的，并能预测这一活动的结果、</p><blockquote><p>“哲学家们只是用不同的方式解释世界，而问题在于改变世界” —— 马克思</p><p>马克思的哲学理论最根本的特点之一，就是认识、揭示和改造客观世界的统一</p></blockquote><p><strong>唯物辩证法的基本原理</strong></p><ul><li>承认(其)规律的客观性和对世界的辩证观点</li></ul><blockquote><p>辩证分析的对象就是物质世界的物质和现象本身它们的内部发展，它们之间的联系以及它们和外部世界的关系 —— 列宁</p></blockquote><ul><li><p>完整性原理（普遍联系，相互作用，全面性）</p></li><li><p>普遍发展的原理</p></li></ul><blockquote><p>Q 如何理解——运动的任何现象都是建立在内部的自我运动即发展的基础之上的（机械运动就是内部自我运动过程的外部表现）</p><p>如何理解——与折中主义相对立的是辨证发展的原理</p></blockquote><p><em>在与诡辩术的斗争中，客观世界及人们对客观世界认识的完整性原理具有重大意义。如果我们承认事物的普遍联系和相互作用，就是要求对它们进行全面性研究，那么任何对局部的任意绝对化都成为不可能</em></p><p>形式逻辑概念的外延和内涵的相互联系是成反比的</p><p>辩证范畴的内涵越丰富，它的外延就越广</p><p>辩证法中统一性和同一性意义是不同的</p><p><strong>矛盾</strong> 表示系统内部的对立面在其变化过程中的相互关系</p><p><em>社会矛盾</em></p><ul><li>对抗性矛盾</li></ul><blockquote><p>敌对阶级不可调和的结果——解决的最高形式是社会革命</p></blockquote><ul><li>非对抗性矛盾</li></ul><blockquote><p>不通过暴力而通过矛盾各方自觉地相互作用来解决</p></blockquote><p><strong>否定的辩证理解</strong></p><ul><li><p>新旧事物的辩证联系以及它们固有的继承性的表现</p></li><li><p>由九十五向新事物发展的连续性</p></li><li><p>揭示了利用已有的知识来研究和认识新对象原则的可能性，也就是由旧质到新质转变过程中旧事物和新事物的共同特性</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> books </category>
          
          <category> 有感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读后感 </tag>
            
            <tag> 唯物主义 </tag>
            
            <tag> 辩证法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生产运作管理_2017-11-12</title>
      <link href="/!archived/%E7%94%9F%E4%BA%A7%E8%BF%90%E4%BD%9C%E7%AE%A1%E7%90%86_2017-11-12/"/>
      <url>/!archived/%E7%94%9F%E4%BA%A7%E8%BF%90%E4%BD%9C%E7%AE%A1%E7%90%86_2017-11-12/</url>
      
        <content type="html"><![CDATA[<h4 id="产品开发"><a href="#产品开发" class="headerlink" title="产品开发"></a>产品开发</h4><h5 id="三个点"><a href="#三个点" class="headerlink" title="三个点"></a>三个点</h5><ul><li>主体</li><li>目的</li><li>对象</li></ul><h5 id="新产品"><a href="#新产品" class="headerlink" title="新产品"></a>新产品</h5><blockquote><p>观察角度 * 消费者需求 * 企业盈利 分类 * 全新产品 * 换代新产品 * 改革新产品 * 本企业新产品 加强产品开发工作原因 * 需求 * 技术更新</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> temp </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>诗人毛泽东——青年</title>
      <link href="/!archived/%E8%AF%97%E4%BA%BA%E6%AF%9B%E6%B3%BD%E4%B8%9C-%E9%9D%92%E5%B9%B4/"/>
      <url>/!archived/%E8%AF%97%E4%BA%BA%E6%AF%9B%E6%B3%BD%E4%B8%9C-%E9%9D%92%E5%B9%B4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>天将降大任于斯人也。</p></blockquote><p>也许因为习惯了生活的安逸，习惯了社会的太平，习惯了父母无微不至的照顾，从而造就了如此倦怠的我，造就了思想和行为举止显得那么稚嫩的我。同为大学二年级生，我既没有诗人般的意境，没有指点江山的豪情，也没有敢为天下先的气魄，同为大学二年级生，我的知识和底蕴是那么浅薄，不堪一击的自尊心和自信心完全不明白会当水击三千里，自信人生两百年的自强与无畏，同为大学二年级生，我只能在感慨世界的博大与自己的渺小中郁郁不欢。</p><p>青年人的朝气呢？青年人的热情呢？青年人的自信呢？</p><blockquote><p>“孩儿立志出乡关，学不成名誓不还 —— 毛泽东</p></blockquote><p>也许因为那是一个纷乱的时代，时事造就了不凡的英雄，谱写了一部可歌可泣、波澜壮阔的史诗。那时的青年人，肩上担负者救亡图存的历史重任，心中装的都是处于水深火热中的人民，那时的青年人，胸怀着救国救民的大志，用血和泪践行了历史的使命，祭奠了逝去的英魂和自己的青春。</p><p>那今天的我们呢？就如此安心得享受着这份宁静祥和？</p><p>如今何尝不是一个风云变换的时代，表面的和平宁静却暗含着无限危机，而解除这些危机的唯一办法，就是继续向前，向前，向前，不断向前。</p><p>作为新时代的青年人，我们应当拿出我们的活力与朝气，向着伟大理想与志向不断前进。</p><p>除了奋斗，别无选择。</p><p>为了自己和祖国的明天，青年人，加油！</p>]]></content>
      
      
      <categories>
          
          <category> 有感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感悟 </tag>
            
            <tag> 志向 </tag>
            
            <tag> 年轻 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不忘初心</title>
      <link href="/!archived/%E4%B8%8D%E5%BF%98%E5%88%9D%E5%BF%83/"/>
      <url>/!archived/%E4%B8%8D%E5%BF%98%E5%88%9D%E5%BF%83/</url>
      
        <content type="html"><![CDATA[<p>[playlist ids&#x3D;”41,38”]</p><h3 id="不忘初心-牢记使命-高举中国特色社会主义伟大旗帜，决胜全面建成小康社会，夺取新时代社会主义建设的伟大胜利，为实现中华民族的伟大复兴的中国梦不懈奋斗-不忘初心-牢记使命-高举中国特色社会主义伟大旗帜，决胜全面建成小康社会，夺取新时代社会主义建设的伟大胜利，为实现中华民族的伟大复兴的中国梦不懈奋斗"><a href="#不忘初心-牢记使命-高举中国特色社会主义伟大旗帜，决胜全面建成小康社会，夺取新时代社会主义建设的伟大胜利，为实现中华民族的伟大复兴的中国梦不懈奋斗-不忘初心-牢记使命-高举中国特色社会主义伟大旗帜，决胜全面建成小康社会，夺取新时代社会主义建设的伟大胜利，为实现中华民族的伟大复兴的中国梦不懈奋斗" class="headerlink" title="不忘初心,牢记使命,高举中国特色社会主义伟大旗帜，决胜全面建成小康社会，夺取新时代社会主义建设的伟大胜利，为实现中华民族的伟大复兴的中国梦不懈奋斗,不忘初心,牢记使命,高举中国特色社会主义伟大旗帜，决胜全面建成小康社会，夺取新时代社会主义建设的伟大胜利，为实现中华民族的伟大复兴的中国梦不懈奋斗"></a>不忘初心,牢记使命,高举中国特色社会主义伟大旗帜，决胜全面建成小康社会，夺取新时代社会主义建设的伟大胜利，为实现中华民族的伟大复兴的中国梦不懈奋斗,不忘初心,牢记使命,高举中国特色社会主义伟大旗帜，决胜全面建成小康社会，夺取新时代社会主义建设的伟大胜利，为实现中华民族的伟大复兴的中国梦不懈奋斗</h3><hr><h3 id="前景光明，挑战严峻"><a href="#前景光明，挑战严峻" class="headerlink" title="前景光明，挑战严峻"></a>前景光明，挑战严峻</h3><hr><h3 id="登高望远，居安思危，勇于变革，勇于创新，永不僵化，永不停滞"><a href="#登高望远，居安思危，勇于变革，勇于创新，永不僵化，永不停滞" class="headerlink" title="登高望远，居安思危，勇于变革，勇于创新，永不僵化，永不停滞"></a>登高望远，居安思危，勇于变革，勇于创新，永不僵化，永不停滞</h3><hr><h3 id="全面从严治党：增加政治意识，大局意识，核心意识，看齐意识"><a href="#全面从严治党：增加政治意识，大局意识，核心意识，看齐意识" class="headerlink" title="全面从严治党：增加政治意识，大局意识，核心意识，看齐意识"></a>全面从严治党：增加政治意识，大局意识，核心意识，看齐意识</h3><hr><h3 id="不敢腐，不能腐，不想腐"><a href="#不敢腐，不能腐，不想腐" class="headerlink" title="不敢腐，不能腐，不想腐"></a>不敢腐，不能腐，不想腐</h3><hr><hr><h3 id="质疑当今中国社会"><a href="#质疑当今中国社会" class="headerlink" title="质疑当今中国社会"></a>质疑当今中国社会</h3><ul><li>人与人的矛盾 社会心理失衡-收入分配格局-贫富分化-①富人不安心②穷人不甘心</li><li>人与自然矛盾</li></ul>]]></content>
      
      
      <categories>
          
          <category> 有感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感悟 </tag>
            
            <tag> 政治 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>帝国春秋</title>
      <link href="/!archived/%E5%B8%9D%E5%9B%BD%E6%98%A5%E7%A7%8B/"/>
      <url>/!archived/%E5%B8%9D%E5%9B%BD%E6%98%A5%E7%A7%8B/</url>
      
        <content type="html"><![CDATA[<blockquote><p>简要了解德国发展、崛起的历史，在发现对这个民族而言，统一始终是他们最关心的问题时，也引起了几个思考和感想</p></blockquote><h4 id="人类永恒的话题之一——战争与和平"><a href="#人类永恒的话题之一——战争与和平" class="headerlink" title="人类永恒的话题之一——战争与和平"></a>人类永恒的话题之一——战争与和平</h4><p>这是一个大命题，也是很难阐述明白的问题。没有以战争为目的的战争，战争的最终目的是和平。看似矛盾，实则密切相关。然而战争往往不是彻底的，不彻底的战争带来的是不平衡的和平，也往往埋藏着再次爆发这样深刻的危机，这也是战争周而复始的原因。也许有人尝试追求彻底的战争，但以失败告终，因为战争带来的巨大伤害已经无法让世人承受，于是，反战争同盟为了和平进行战争。这也许是个无解的命题，因为人和人性也是无解的。但我们是否可以想象，有这么一个时代和社会，这一切都不成问题呢？</p><h4 id="文明的传播——交流和战争"><a href="#文明的传播——交流和战争" class="headerlink" title="文明的传播——交流和战争"></a>文明的传播——交流和战争</h4><p>文明的传播存在两种形式，一是文化交流，二则通过战争。从历史中，我们难以辨别孰轻孰重，二者都对整个人类文明的进步起着推动作用。但战争是否效果更显著，效率最高呢？这也很难说。虽然在一定程度上战争效率和效果较为显著，但战争带来的文明是被动的，不完全的因此，未经实践检验和选择的情况下，无法保证是在推动文明的进程，也存在文明倒退的可能性。而文化交流，时效性确实不高，尤其在保守派势力强大的时候。但不管哪种形式，最后都验证着世界是发展的这一观点。</p><h4 id="第一个吃螃蟹的人"><a href="#第一个吃螃蟹的人" class="headerlink" title="第一个吃螃蟹的人"></a>第一个吃螃蟹的人</h4><p>敢为天下先？不敢为天下先？当今时代，明哲保身一时心安，却悄然错过许多机遇，敢于打破常规，敢于改变自我的人，往往能成为不凡的人。时代在召唤，召唤那些有志向、有抱负、有远见的人。</p><h4 id="德意志民族"><a href="#德意志民族" class="headerlink" title="德意志民族"></a>德意志民族</h4><p>德国、德意志民族，有着和近代中国相似的使命，争取民族解放和民族独立，他们的不懈斗争和反抗值得尊敬。然而，过分强烈的民族意识，导致了不可控的局面发生，这也是当今中华民族必须警惕的地方。虽然是两次世界大战的策源地，虽然给全人类造成了无比巨大的损失和沉痛的灾难，但德意志人的坦诚，勇于承认错误，承担责任的气魄令人尊敬和赞叹。人也如此，只有看得到过去跪着的自己，才能有未来站着的自己。</p>]]></content>
      
      
      <categories>
          
          <category> 有感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 和平 </tag>
            
            <tag> 志向 </tag>
            
            <tag> 战争 </tag>
            
            <tag> 文明 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>年轻人与未来</title>
      <link href="/!archived/%E5%B9%B4%E8%BD%BB%E4%BA%BA%E4%B8%8E%E6%9C%AA%E6%9D%A5/"/>
      <url>/!archived/%E5%B9%B4%E8%BD%BB%E4%BA%BA%E4%B8%8E%E6%9C%AA%E6%9D%A5/</url>
      
        <content type="html"><![CDATA[<p>中国正在崛起，中华民族正处于前所未有的关键时期，中国要发展、要进步，必须要有一大批新鲜血液的注入。年轻人，任重而道远。</p><p>回顾改革开放40年来的坎坷历程，多少年轻人为中国的发展奉献了自己的青春，贡献了在自己的力量。而现在，我们是这个新时代的年轻人，中国的未来，关键在于我们能否顺利地从前人手中接好交接棒，并拿着它跑得更快，更远。</p><p>少年强则国强，今日之中华全在我少年！时代在召唤，召唤着每一个中华儿女，矢志不渝，不懈奋斗。年轻人们，拿出属于我们的蓬勃朝气，当有“会当水击三千里，自信人生二百年”的气魄，担忧“长风破浪会有时，直挂云帆济沧海”的志向，不断学习和积累文化知识，等待全力迸发的一天。</p>]]></content>
      
      
      <categories>
          
          <category> 有感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 年轻 </tag>
            
            <tag> 爱国主义 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>预见</title>
      <link href="/!archived/%E9%A2%84%E8%A7%81/"/>
      <url>/!archived/%E9%A2%84%E8%A7%81/</url>
      
        <content type="html"><![CDATA[<h4 id="不同时代的游戏规则"><a href="#不同时代的游戏规则" class="headerlink" title="不同时代的游戏规则"></a>不同时代的游戏规则</h4><p>不同历史时期，有不同规则。在古代，土地是最重要的资源，在近现代，海洋成为各个国家竞相表演的舞台。谁先发现规则，先利用规则，谁就是时代的领跑者。</p><p>中华民族，在第一个时代站在了世界前沿，引领了世界发展，却在海洋时代失去了先机，逐渐退出世界舞台的中心，成为列强竞相欺凌的对象。而现在，经历了站起来、富起来和仍在持续的强大起来，中华民族又将重新回到世界舞台的中心，走在时代的前沿。</p><p>但未来呢？未来世界的规则是怎样的？我们是否有预见呢？我们又是否有把握继续跑在时代前沿呢？我们需要思考和解决的问题还有很多。</p><h4 id="民族国家力量"><a href="#民族国家力量" class="headerlink" title="民族国家力量"></a>民族国家力量</h4><p>“国家的外部崛起实则是其内部力量的延伸”，这正符合马克思唯物辩证法中联系和发展的观点。那么这种力量从何而来？以爱国主义为核心的价值观撑起了一个民族国家，为之提供了源源不断的力量。国家和民族的基础是人民，站在人民的对立面或者脱离人民群众，便会造成国家和民族深刻的危机。在当今时代，信息爆炸，思想繁杂，我们比以往任何时候都要强调爱国主义。中华民族能否稳住，能否守护好这来之不易的和平与发展，繁荣与富强，全在于全中国人能否团结一致对外，主动但不冲动，积极且理智的爱国。</p>]]></content>
      
      
      <categories>
          
          <category> 有感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爱国主义 </tag>
            
            <tag> 民族 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
